{"data":{"posts":[{"id":70,"title":"Jade Language - Motor de plantillas para nodeJS y Preprocesador HTML","slug":"jade-language-node-template-engine-and-html-preprocessor","markdown":"\nJade es un motor de plantillas de alto rendimiento muy influenciado por **HAML**, ha sido implementado con [**Javascript**](http:\/\/frontend-labs.com\/tag\/javascript\/ \"Javascript\") para trabajar con [NodeJS](http:\/\/frontend-labs.com\/tag\/nodejs\/ \"NodeJS\"). Adicionalmente es un pre-procesador de c\u00f3digo [HTML](http:\/\/frontend-labs.com\/tag\/html\/ \"HTML\"). Los dejo con una presentaci\u00f3n que hice hace alg\u00fan tiempo sobre Jade, el c\u00f3digo de los ejemplos lo puedes encontrar en este [repositorio en github](https:\/\/github.com\/jansanchez\/jade-examples \"Ejemplos con Jade\"). <script async=\"\" class=\"speakerdeck-embed\" data-id=\"f0a8cbd01dce0131047b4ece5468c54b\" data-ratio=\"1.33507170795306\" src=\"\/\/speakerdeck.com\/assets\/embed.js\"><\/script> Si est\u00e1s interesado en aprender m\u00e1s sobre Jade, esta web te servir\u00e1 mucho [learnjade.com](http:\/\/www.learnjade.com\/ \"Learn Jade\") Si no tienes instalado NodeJs para poder usar Jade Language en linux puedes pasar por nuestro post\u00a0[Como instalar Nodejs en Debian Linux](http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux \"Como instalar Nodejs en Debian Linux\").\n\n\n","html":"Jade es un motor de plantillas de alto rendimiento muy influenciado por <strong>HAML<\/strong>, ha sido implementado con <a title=\"Javascript\" href=\"http:\/\/frontend-labs.com\/tag\/javascript\/\"><strong>Javascript<\/strong><\/a> para trabajar con <a title=\"NodeJS\" href=\"http:\/\/frontend-labs.com\/tag\/nodejs\/\" target=\"_blank\">NodeJS<\/a>.\r\n\r\nAdicionalmente es un pre-procesador de c\u00f3digo <a title=\"HTML\" href=\"http:\/\/frontend-labs.com\/tag\/html\/\" target=\"_blank\">HTML<\/a>.\r\n\r\nLos dejo con una presentaci\u00f3n que hice hace alg\u00fan tiempo sobre Jade, el c\u00f3digo de los ejemplos lo puedes encontrar en este <a title=\"Ejemplos con Jade\" href=\"https:\/\/github.com\/jansanchez\/jade-examples\" target=\"_blank\">repositorio en github<\/a>.\r\n\r\n<script class=\"speakerdeck-embed\" src=\"\/\/speakerdeck.com\/assets\/embed.js\" async=\"\" data-id=\"f0a8cbd01dce0131047b4ece5468c54b\" data-ratio=\"1.33507170795306\"><\/script>\r\n\r\nSi est\u00e1s interesado en aprender m\u00e1s sobre Jade, esta web te servir\u00e1 mucho <a title=\"Learn Jade\" href=\"http:\/\/www.learnjade.com\/\" target=\"_blank\">learnjade.com<\/a>\r\n\r\nSi no tienes instalado NodeJs para poder usar Jade Language en linux puedes pasar por nuestro post\u00a0<a title=\"Como instalar Nodejs en Debian Linux\" href=\"http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux\" target=\"_blank\">Como instalar Nodejs en Debian Linux<\/a>.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/jade.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Fri, 14 Mar 2014 21:31:48 +0000","created_by":1,"updated_at":"Thu, 24 Jul 2014 00:03:37 +0000","updated_by":1,"published_at":"Fri, 14 Mar 2014 21:31:48 +0000","published_by":1},{"id":232,"title":"Como instalar Nodejs en Debian Linux","slug":"como-instalar-nodejs-debian-linux","markdown":"\n**NodeJs**\u00a0es una plataforma construida con \u00a0el JavaScript runtime de Chrome que sirve para crear f\u00e1cilmente aplicaciones de red \u00a0r\u00e1pidas y\u00a0escalables. NodeJs utiliza un\u00a0modelo\u00a0de Entrada y Salida no bloqueante dirigida por eventos, que a su vez lo hace muy ligero, eficiente e ideal para las aplicaciones en tiempo real que manejan muchos datos, vamos a instalarlo!. Instalando NodeJS\n-----------------\n\n Abrimos nuestro terminal o consola y escribimos lo siguiente: [code lang=\"bash\"] sudo apt-get update && sudo apt-get install git-core curl build-essential openssl libssl-dev [\/code] Luego nos dirigimos a la ruta donde deseamos clonar NodeJs, en mi caso la ruta es la siguiente: [code lang=\"bash\"] cd ~\/ [\/code] ### Clonamos\u00a0NodeJs\n\n [code lang=\"bash\"] git clone https:\/\/github.com\/joyent\/node.git node && cd node [\/code] Si queremos instalar la ultima versi\u00f3n, nos saltamos el siguiente paso y vamos directo al paso: **crear el makefile**. **Pero si queremos instalar otra versi\u00f3n especifica de nodeJs, apuntamos hacia por ejemplo la versi\u00f3n **0.11.8** de la siguiente manera:** [code lang=\"bash\"] git checkout v0.11.8 [\/code] Luego de esto continuamos con el proceso de instalaci\u00f3n normal y procedemos a crear el makefile. ### Creamos el makefile\n\n [code lang=\"bash\"] .\/configure --openssl-libpath=\/usr\/lib\/ssl [\/code] ### Preparamos la instalaci\u00f3n\n\n [code lang=\"bash\"] make [\/code] ### Instalamos\n\n [code lang=\"bash\"] sudo make install [\/code] Verificamos que versi\u00f3n de NodeJs hemos instalado [code lang=\"bash\"] node -v [\/code] Verificamos que versi\u00f3n de NPM hemos instalado [code lang=\"bash\"] npm -v [\/code] ### Si deseamos instalamos algunos Modulos de NodeJs\n\n#### Jade - Motor de plantillas y preprocesador HTML\n\n [code lang=\"bash\"] npm install -g jade [\/code] #### Stylus - Preprocesador CSS\n\n [code lang=\"bash\"] npm install -g stylus [\/code] #### Coffee Script - Preprocesador Javascript\n\n [code lang=\"bash\"] npm install -g coffee-script [\/code] Y listo, con estos sencillos pasos ya tenemos instalado NodeJs y algunos de sus m\u00e1s famosos m\u00f3dulos \u00a0en nuestro equipo, NodeJs tiene muchos m\u00f3dulos interesantes y muy \u00fatiles, si deseas puedes revisarlos m\u00e1s a detalle en la web oficial de [NPM](https:\/\/www.npmjs.org\/ \"Node Packaged Modules\"). Si te interesa aprender m\u00e1s sobre Jade Language, no dudes en pasar por el siguiente post [Jade Language\u00a0\u2013 Motor de plantillas para nodeJS y Preprocesador HTML](http:\/\/frontend-labs.com\/70--jade-language-node-template-engine-and-html-preprocessor \"Jade Language \u2013 Motor de plantillas para nodeJS y Preprocesador HTML\"). \n","html":"<strong>NodeJs<\/strong>\u00a0es una plataforma construida con \u00a0el JavaScript runtime de Chrome que sirve para crear f\u00e1cilmente aplicaciones de red \u00a0r\u00e1pidas y\u00a0escalables.\r\nNodeJs utiliza un\u00a0modelo\u00a0de Entrada y Salida no bloqueante dirigida por eventos, que a su vez lo hace muy ligero, eficiente e ideal para las aplicaciones en tiempo real que manejan muchos datos, vamos a instalarlo!.\r\n\r\n<h2>Instalando NodeJS<\/h2>\r\n\r\nAbrimos nuestro terminal o consola y escribimos lo siguiente:\r\n\r\n[code lang=\"bash\"]\r\nsudo apt-get update &amp;&amp; sudo apt-get install git-core curl build-essential openssl libssl-dev\r\n[\/code]\r\n\r\nLuego nos dirigimos a la ruta donde deseamos clonar NodeJs, en mi caso la ruta es la siguiente:\r\n\r\n[code lang=\"bash\"]\r\ncd ~\/\r\n[\/code]\r\n\r\n<h3>Clonamos\u00a0NodeJs<\/h3>\r\n\r\n[code lang=\"bash\"]\r\ngit clone https:\/\/github.com\/joyent\/node.git node &amp;&amp; cd node\r\n[\/code]\r\n\r\nSi queremos instalar la ultima versi\u00f3n, nos saltamos el siguiente paso y vamos directo al paso: <strong>crear el makefile<\/strong>.\r\n\r\n<strong>Pero si queremos instalar otra versi\u00f3n especifica de nodeJs, apuntamos hacia por ejemplo la versi\u00f3n <strong>0.11.8<\/strong> de la siguiente manera:<\/strong>\r\n\r\n[code lang=\"bash\"]\r\ngit checkout v0.11.8\r\n[\/code]\r\n\r\nLuego de esto continuamos con el proceso de instalaci\u00f3n normal y procedemos a crear el makefile.\r\n\r\n<h3>Creamos el makefile<\/h3>\r\n\r\n[code lang=\"bash\"]\r\n.\/configure --openssl-libpath=\/usr\/lib\/ssl\r\n[\/code]\r\n\r\n<h3>Preparamos la instalaci\u00f3n<\/h3>\r\n\r\n[code lang=\"bash\"]\r\nmake\r\n[\/code]\r\n\r\n<h3>Instalamos<\/h3>\r\n\r\n[code lang=\"bash\"]\r\nsudo make install\r\n[\/code]\r\n\r\nVerificamos que versi\u00f3n de NodeJs hemos instalado\r\n\r\n[code lang=\"bash\"]\r\nnode -v\r\n[\/code]\r\n\r\nVerificamos que versi\u00f3n de NPM hemos instalado\r\n\r\n[code lang=\"bash\"]\r\nnpm -v\r\n[\/code]\r\n\r\n<h3>Si deseamos instalamos algunos Modulos de NodeJs<\/h3>\r\n\r\n<h4>Jade - Motor de plantillas y preprocesador HTML<\/h4>\r\n\r\n[code lang=\"bash\"]\r\nnpm install -g jade\r\n[\/code]\r\n\r\n<h4>Stylus - Preprocesador CSS<\/h4>\r\n\r\n[code lang=\"bash\"]\r\nnpm install -g stylus\r\n[\/code]\r\n\r\n<h4>Coffee Script - Preprocesador Javascript<\/h4>\r\n\r\n[code lang=\"bash\"]\r\nnpm install -g coffee-script\r\n[\/code]\r\n\r\nY listo, con estos sencillos pasos ya tenemos instalado NodeJs y algunos de sus m\u00e1s famosos m\u00f3dulos \u00a0en nuestro equipo, NodeJs tiene muchos m\u00f3dulos interesantes y muy \u00fatiles, si deseas puedes revisarlos m\u00e1s a detalle en la web oficial de <a title=\"Node Packaged Modules\" href=\"https:\/\/www.npmjs.org\/\" target=\"_blank\">NPM<\/a>.\r\n\r\nSi te interesa aprender m\u00e1s sobre Jade Language, no dudes en pasar por el siguiente post <a title=\"Jade Language \u2013 Motor de plantillas para nodeJS y Preprocesador HTML\" href=\"http:\/\/frontend-labs.com\/70--jade-language-node-template-engine-and-html-preprocessor\" target=\"_blank\">Jade Language\u00a0\u2013 Motor de plantillas para nodeJS y Preprocesador HTML<\/a>.\r\n","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/nodejs.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Mon, 31 Mar 2014 06:20:22 +0000","created_by":1,"updated_at":"Sat, 13 Sep 2014 09:17:53 +0000","updated_by":1,"published_at":"Mon, 31 Mar 2014 06:20:22 +0000","published_by":1},{"id":146,"title":"Grunt JS en espa\u00f1ol - tutorial b\u00e1sico y primeros pasos","slug":"gruntjs-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos","markdown":"\n**Grunt JS** es un corredor de tareas desarrollado en Javascript con [Node.js](http:\/\/nodejs.org\/ \"node.js\"). Vamos a comenzar con una pregunta clave igual que en su [web](http:\/\/gruntjs.com\/ \"JavaScript Task Runner\") oficial. **\u00bfPor qu\u00e9 utilizar un corredor de tareas?** La respuesta en tan solo dos palabras ser\u00eda:\u00a0**Para Automatizar!**. Ya que, cuanto menos trabajo tengas que hacer cuando realizas tareas repetitivas como: **minificaci\u00f3n, compilaci\u00f3n, validaci\u00f3n de sintaxis, **pruebas unitarias, observar cambios de tus archivos, concatenaci**\u00f3**n de archivos, copiado de archivos de una ruta a otra, borrado de archivos, generar documentaci\u00f3n, crear sprites,\u00a0**etc**, tu trabajo ser\u00e1 m\u00e1s f\u00e1cil y r\u00e1pido de realizar. Una vez configurado, un corredor de tareas, este puede convertir todo ese trabajo o esfuerzo \"manual\" a pr\u00e1cticamente cero esfuerzo de t\u00fa parte. Con esto queremos decir que al configurar tu corredor de tareas, esas tareas se har\u00e1n autom\u00e1ticamente, en el orden que t\u00fa definas, bajo las instrucciones que t\u00fa le des. Con esto olvidate de hacer cosas \"manuales\". Bueno ahora veamos \u00bfComo lo instalo en mi equipo? **Instalando Grunt JS** Grunt y sus plugins se instalan y se gestionan a trav\u00e9s de [NPM](https:\/\/www.npmjs.org\/ \"Node Packaged Modules\"), que es el gestor de paquetes de\u00a0[Node.js](http:\/\/nodejs.org\/ \"node.js\"). Para empezar, tendr\u00e1s que instalar la interfaz de l\u00ednea de comandos de Grunt (CLI) a nivel global en tu equipo. Es posible que necesites usar sudo (para OSX, *nix, BSD, etc) o ejecutar el shell de comandos como administrador (en Windows) para lograr esto. Asumiendo que ya tienes instalado NodeJS, que ahora ya viene con el npm instalado por defecto, solo tendr\u00e1s que escribir la siguiente instrucci\u00f3n. [code lang=\"bash\"] npm install -g grunt-cli [\/code] Con esto ya tenemos instalado Grunt Js en nuestro equipo, si no instala de esta forma entonces intenta con administrador, anteponiendo la palabra **sudo** de la siguiente manera: [code lang=\"bash\"] sudo npm install -g grunt-cli [\/code] Si no tienes instalado NodeJs en linux puedes pasar por nuestro post\u00a0[Como instalar Nodejs en Debian Linux](http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux \"Como instalar Nodejs en Debian Linux\"). **Nuestro primer proyecto con Grunt Js** Ahora comenzaremos a crear nuestro primer proyecto usando Grunt Js, primero creamos una carpeta para nuestro proyecto y la llamaremos: **grunt-primerospasos**. Luego abrimos nuestro terminal o consola y accedemos hasta nuestra nueva carpeta, por ejemplo en mi caso la ruta es la siguiente: [code lang=\"bash\"] cd \/home\/jan\/htdocs\/grunt-primerospasos\/ [\/code] y procedemos a crear nuestro archivo\u00a0**package.json**\u00a0con la siguiente l\u00ednea de comando: [code lang=\"bash\"] npm init [\/code] Luego de esto npm nos pedir\u00e1 la informaci\u00f3n b\u00e1sica de nuestro proyecto, la iremos ingresando l\u00ednea por l\u00ednea y al completar cada l\u00ednea\u00a0presionaremos **Enter**.****Al final nos quedar\u00e1 as\u00ed. [![npm init](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/npm-init.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/npm-init.png)\n\n A continuaci\u00f3n para finalizar nos pide escribir **yes** y nos mostrar\u00e1 la siguiente pantalla. [![npm-init-finish](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/npm-init-finish.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/npm-init-finish.png) Como podemos observar ya hemos creado nuestro archivo **package.json**. Si no lo lograste o te confundio un poco el proceso aqu\u00ed dejo el contenido b\u00e1sico del archivo para copiar, pegar y nombrarlo as\u00ed:\u00a0**package.json** [code lang=\"javascript\"] { \"name\": \"grunt-primerospasos\", \"version\": \"0.0.1\", \"description\": \"Mi primer proyecto en Grunt Js\", \"author\": \"jansanchez\" } [\/code] Luego iremos agregando las dependencias de nuestro proyecto, dentro de nuestra carpeta **grunt-primerospasos**\u00a0agregaremos **grunt** como dependencia as\u00ed: [code lang=\"bash\"] npm install grunt --save-dev [\/code] Si abrimos nuestro archivo **package.json**\u00a0podremos observar que han sido agregadas las 3 siguientes lineas. [code lang=\"bash\"] \"devDependencies\": { \"grunt\": \"~0.4.4\" } [\/code] La llave\u00a0**devDependencies**\u00a0indica que dentro de este objeto javascript se ir\u00e1n agregando las dependencias que instalemos a nuestro proyecto, en este caso nuestra primera dependencia es\u00a0**grunt**\u00a0en su versi\u00f3n**\u00a00.4.4****Grunt Plugins** Los **plugins** de Grunt, tambi\u00e9n llamados **contribs** de Grunt, estos no son m\u00e1s que m\u00f3dulos que se encargan de tareas comunes con grunt, son parte vital del uso de Grunt y existen m\u00e1s de 200. Algunos de los m\u00e1s usados son: **\u00a0 \u00a0 [grunt-contrib-jade](https:\/\/github.com\/gruntjs\/grunt-contrib-jade \"grunt-contrib-jade\")**: \u00a0*Compila plantillas Jade*. **\u00a0 \u00a0 [grunt-contrib-stylus](https:\/\/github.com\/gruntjs\/grunt-contrib-stylus \"grunt-contrib-stylus\")**: \u00a0*Compila archivos stylus a css*. **\u00a0 \u00a0 [grunt-contrib-coffee](https:\/\/github.com\/gruntjs\/grunt-contrib-coffee \"grunt-contrib-coffee\")**: \u00a0*Compila archivos coffee a js*. **\u00a0 \u00a0 [grunt-contrib-uglify](https:\/\/github.com\/gruntjs\/grunt-contrib-uglify \"grunt-contrib-uglify\")**: \u00a0Minifica archivos con UglifyJS. **Gruntfile.js** El Gruntfile.js es un archivo JavaScript v\u00e1lido que debe encontrarse en el directorio ra\u00edz del proyecto, junto al archivo package.json Se compone de las siguientes partes: - La funci\u00f3n contenedora.\n- Configuraci\u00f3n de proyectos y tareas.\n- Carga de plugins.\n- Registro de tareas.\n\n**La funci\u00f3n contenedora** Esta funci\u00f3n es la que contendr\u00e1 todo nuestro c\u00f3digo de grunt.<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\"><\/span> [code lang=\"javascript\"] module.exports = function(grunt) { \/\/ Configuraci\u00f3n de Grunt }; [\/code] **Configuraci\u00f3n de proyectos y tareas** Aqu\u00ed encontramos el m\u00e9todo **grunt.initConfig**, este m\u00e9todo inicializa un objeto de configuraci\u00f3n para el proyecto actual. El objeto se utiliza para las tareas y se puede acceder a \u00e9l mediante el m\u00e9todo **grunt.config**, dicho objeto es un objeto Javascript que nosotros ingresaremos. Por lo general este objeto lo iremos alimentando con todas las configuraciones de tareas que deseemos poner en nuestro proyecto. [code lang=\"javascript\"] grunt.initConfig({ \/\/ Configuraci\u00f3n para proyectos y tareas. }); [\/code] **Carga de plugins **<span style=\"line-height: 1.5em;\">Para la carga de plugins de GruntJs, usaremos el m\u00e9todo\u00a0**loadNpmTasks**, con el siguiente c\u00f3digo cargaremos el plugin \"<\/span>grunt-contrib-uglify\". [code lang=\"javascript\"] \/\/ Cargar la tarea grunt-contrib-uglify grunt.loadNpmTasks('grunt-contrib-uglify'); [\/code] **Registro de tareas** Para el registro de tareas usaremos el m\u00e9todo\u00a0**registerTask **de GruntJs. [code lang=\"javascript\"] \/\/ Tarea por defecto. grunt.registerTask('default', ['uglify']); [\/code] Este m\u00e9todo tiene 2 par\u00e1metros: El primero es el **nombre** que queremos ponerle a la tarea y con este mismo nombre podremos acceder a ejecutar la tarea por ejemplo:<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\"><\/span> [code lang=\"javascript\"] grunt default [\/code] El segundo par\u00e1metro es un **Array de nombres de tareas**, donde podemos \u00a0agregar una o m\u00e1s tareas, como podemos ver en el siguiente ejemplo. [code lang=\"javascript\"] grunt.registerTask('default', ['js', 'uglify']); [\/code] En este ejemplo vemos que se registr\u00f3 la tarea llamada **default** y dentro de esta tarea se ejecutar\u00e1n en el orden indicado las siguientes tareas: **js** y\u00a0**uglify**. **Vamos a poner Grunt a prueba!** Ahora vamos a hacer una prueba sencilla de como minificar archivos js con una tarea para mostrar un poquito del gran potencial de GruntJs, para este ejemplo usaremos el [**grunt-contrib-uglify **](https:\/\/github.com\/gruntjs\/grunt-contrib-uglify \"grunt-contrib-uglify\")y lo haremos sobre nuestro proyecto\u00a0**grunt-primerospasos**. Entonces vamos a agregar la dependencia para **uglify**(~0.3.3), abrimos el terminal en nuestra carpeta y escribimos lo siguiente: [code lang=\"javascript\"] npm install grunt-contrib-uglify --save-dev [\/code] De esta forma instalamos esta dependencia en nuestro proyecto, con lo cual solo nos faltar\u00eda configurar la tarea en el **grunt.initConfig**. Ahora creamos nuestro archivo **Gruntfile.js**\u00a0 y insertamos el siguiente contenido base: [code lang=\"javascript\"] module.exports = function (grunt) { \/\/ Project configuration. grunt.initConfig({ \/\/ }); }; [\/code] Agregamos la tarea **uglify**, con algunas de las opciones que nos indica en su [documentaci\u00f3n](https:\/\/github.com\/gruntjs\/grunt-contrib-uglify#getting-started \"grunt-contrib-uglify\") [code lang=\"javascript\"] module.exports = function (grunt) { \/\/ Project configuration. grunt.initConfig({ \/\/ uglify uglify: { options: { mangle: false, compress: { drop_console: true } }, js: { files: [{ cwd: 'js\/src\/', \/\/ ruta de nuestro javascript fuente expand: true, \/\/ ingresar a las subcarpetas src: '*.js', \/\/ patr\u00f3n relativo a cwd dest: 'js\/min\/' \/\/ destino de los archivos compresos }] } } }); }; [\/code] Ahora cargaremos el plugin que necesitamos usar: [code lang=\"javascript\"] \/\/ cargamos grunt-contrib-uglify grunt.loadNpmTasks('grunt-contrib-uglify'); [\/code] Luego registramos nuestra tarea: [code lang=\"javascript\"] \/\/ Registramos la tarea default \/\/ que ejecutar\u00e1 la tarea grunt uglify grunt.registerTask('default', ['uglify']); [\/code] Finalmente nuestro Gruntfile quedar\u00eda as\u00ed: [code lang=\"javascript\"] module.exports = function (grunt) { \/\/ Project configuration. grunt.initConfig({ \/\/uglify uglify: { options: { mangle: false, compress: { drop_console: true } }, js: { files: [{ cwd: 'js\/src\/', expand: true, src: '*.js', dest: 'js\/min\/' }] } } }); \/\/ loadNpmTasks grunt.loadNpmTasks('grunt-contrib-uglify'); \/\/ Run Default task(s). grunt.registerTask('default', ['uglify']); }; [\/code] Con esto solo tenemos que ingresar por medio del terminal a nuestra carpeta donde esta alojado el Gruntfile.js y ejecutar la tarea registrada. [code lang=\"javascript\"] grunt default [\/code] Al ejecutar la tarea, GruntJs minificar\u00e1 los archivos ***.js** que se encuentren en la carpeta **js\/src\/** y pondr\u00e1 el resultado en la carpeta **js\/min\/**. Los archivos de este post se encuentran en el siguiente [repositorio](https:\/\/github.com\/jansanchez\/grunt-primerospasos \"grunt-primerospasos\") en github. Existe un automatizador m\u00e1s moderno llamado Gulp.js, este automatizador tiene muchas mejoras con respecto a Grunt.js, si deseas saber m\u00e1s, no dudes en visitar nuestro post sobre [Gulp.js](http:\/\/frontend-labs.com\/1669--gulp-js-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos \"gulp-js-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos\"). \n","html":"<strong>Grunt JS<\/strong> es un corredor de tareas desarrollado en Javascript con <a title=\"node.js\" href=\"http:\/\/nodejs.org\/\" target=\"_blank\">Node.js<\/a>.\r\n\r\nVamos a comenzar con una pregunta clave igual que en su <a title=\"JavaScript Task Runner\" href=\"http:\/\/gruntjs.com\/\" target=\"_blank\">web<\/a> oficial.\r\n\r\n<strong>\u00bfPor qu\u00e9 utilizar un corredor de tareas?<\/strong>\r\n\r\nLa respuesta en tan solo dos palabras ser\u00eda:\u00a0<strong>Para Automatizar!<\/strong>.\r\n\r\nYa que, cuanto menos trabajo tengas que hacer cuando realizas tareas repetitivas como: <strong>minificaci\u00f3n, compilaci\u00f3n, validaci\u00f3n de sintaxis, <strong>pruebas unitarias, observar cambios de tus archivos, concatenaci<strong>\u00f3<\/strong>n de archivos, copiado de archivos de una ruta a otra, borrado de archivos, generar documentaci\u00f3n, crear sprites,\u00a0<\/strong>etc<\/strong>, tu trabajo ser\u00e1 m\u00e1s f\u00e1cil y r\u00e1pido de realizar.\r\n\r\nUna vez configurado, un corredor de tareas, este puede convertir todo ese trabajo o esfuerzo \"manual\" a pr\u00e1cticamente cero esfuerzo de t\u00fa parte.\r\n\r\nCon esto queremos decir que al configurar tu corredor de tareas, esas tareas se har\u00e1n autom\u00e1ticamente, en el orden que t\u00fa definas, bajo las instrucciones que t\u00fa le des. Con esto olvidate de hacer cosas \"manuales\".\r\n\r\nBueno ahora veamos \u00bfComo lo instalo en mi equipo?\r\n\r\n<strong>Instalando Grunt JS<\/strong>\r\n\r\nGrunt y sus plugins se instalan y se gestionan a trav\u00e9s de <a title=\"Node Packaged Modules\" href=\"https:\/\/www.npmjs.org\/\" target=\"_blank\">NPM<\/a>, que es el gestor de paquetes de\u00a0<a title=\"node.js\" href=\"http:\/\/nodejs.org\/\" target=\"_blank\">Node.js<\/a>.\r\n\r\nPara empezar, tendr\u00e1s que instalar la interfaz de l\u00ednea de comandos de Grunt (CLI) a nivel global en tu equipo. Es posible que necesites usar sudo (para OSX, *nix, BSD, etc) o ejecutar el shell de comandos como administrador (en Windows) para lograr esto.\r\n\r\nAsumiendo que ya tienes instalado NodeJS, que ahora ya viene con el npm instalado por defecto, solo tendr\u00e1s que escribir la siguiente instrucci\u00f3n.\r\n\r\n[code lang=\"bash\"]\r\nnpm install -g grunt-cli\r\n[\/code]\r\n\r\nCon esto ya tenemos instalado Grunt Js en nuestro equipo, si no instala de esta forma entonces intenta con administrador, anteponiendo la palabra <strong>sudo<\/strong> de la siguiente manera:\r\n\r\n[code lang=\"bash\"]\r\nsudo npm install -g grunt-cli\r\n[\/code]\r\n\r\nSi no tienes instalado NodeJs en linux puedes pasar por nuestro post\u00a0<a title=\"Como instalar Nodejs en Debian Linux\" href=\"http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux\" target=\"_blank\">Como instalar Nodejs en Debian Linux<\/a>.\r\n\r\n<strong>Nuestro primer proyecto con Grunt Js<\/strong>\r\n\r\nAhora comenzaremos a crear nuestro primer proyecto usando Grunt Js, primero creamos una carpeta para nuestro proyecto y la llamaremos: <strong>grunt-primerospasos<\/strong>.\r\n\r\nLuego abrimos nuestro terminal o consola y accedemos hasta nuestra nueva carpeta, por ejemplo en mi caso la ruta es la siguiente:\r\n\r\n[code lang=\"bash\"]\r\ncd \/home\/jan\/htdocs\/grunt-primerospasos\/\r\n[\/code]\r\n\r\ny procedemos a crear nuestro archivo\u00a0<strong>package.json<\/strong>\u00a0con la siguiente l\u00ednea de comando:\r\n\r\n[code lang=\"bash\"]\r\nnpm init\r\n[\/code]\r\n\r\nLuego de esto npm nos pedir\u00e1 la informaci\u00f3n b\u00e1sica de nuestro proyecto, la iremos ingresando l\u00ednea por l\u00ednea y al completar cada l\u00ednea\u00a0presionaremos <strong>Enter<\/strong>.<strong>\r\n<\/strong>Al final nos quedar\u00e1 as\u00ed.\r\n<p style=\"text-align: center;\"><a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/npm-init.png\"><img class=\"size-full wp-image-195 aligncenter\" alt=\"npm init\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/npm-init.png\" width=\"594\" height=\"362\" \/><\/a><\/p>\r\nA continuaci\u00f3n para finalizar nos pide escribir <strong>yes<\/strong> y nos mostrar\u00e1 la siguiente pantalla.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/npm-init-finish.png\"><img class=\"aligncenter size-full wp-image-204\" alt=\"npm-init-finish\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/npm-init-finish.png\" width=\"585\" height=\"478\" \/><\/a>\r\n\r\nComo podemos observar ya hemos creado nuestro archivo <strong>package.json<\/strong>.\r\nSi no lo lograste o te confundio un poco el proceso aqu\u00ed dejo el contenido b\u00e1sico del archivo para copiar, pegar y nombrarlo as\u00ed:\u00a0<strong>package.json<\/strong>\r\n\r\n[code lang=\"javascript\"]\r\n{\r\n &quot;name&quot;: &quot;grunt-primerospasos&quot;,\r\n &quot;version&quot;: &quot;0.0.1&quot;,\r\n &quot;description&quot;: &quot;Mi primer proyecto en Grunt Js&quot;,\r\n &quot;author&quot;: &quot;jansanchez&quot;\r\n}\r\n[\/code]\r\n\r\nLuego iremos agregando las dependencias de nuestro proyecto, dentro de nuestra carpeta <strong>grunt-primerospasos<\/strong>\u00a0agregaremos <strong>grunt<\/strong> como dependencia as\u00ed:\r\n\r\n[code lang=\"bash\"]\r\nnpm install grunt --save-dev\r\n[\/code]\r\n\r\nSi abrimos nuestro archivo <strong>package.json<\/strong>\u00a0podremos observar que han sido agregadas las 3 siguientes lineas.\r\n\r\n[code lang=\"bash\"]\r\n&quot;devDependencies&quot;: {\r\n &quot;grunt&quot;: &quot;~0.4.4&quot;\r\n }\r\n[\/code]\r\n\r\nLa llave\u00a0<strong>devDependencies<\/strong>\u00a0indica que dentro de este objeto javascript se ir\u00e1n agregando las dependencias que instalemos a nuestro proyecto, en este caso nuestra primera dependencia es\u00a0<strong>grunt<\/strong>\u00a0en su versi\u00f3n<strong>\u00a00.4.4<\/strong>\r\n\r\n<strong>Grunt Plugins<\/strong>\r\n\r\nLos <strong>plugins<\/strong> de Grunt, tambi\u00e9n llamados <strong>contribs<\/strong> de Grunt, estos no son m\u00e1s que m\u00f3dulos que se encargan de tareas comunes con grunt, son parte vital del uso de Grunt y existen m\u00e1s de 200.\r\n\r\nAlgunos de los m\u00e1s usados son:\r\n\r\n<strong>\u00a0 \u00a0 <a title=\"grunt-contrib-jade\" href=\"https:\/\/github.com\/gruntjs\/grunt-contrib-jade\" target=\"_blank\">grunt-contrib-jade<\/a><\/strong>: \u00a0<em>Compila plantillas Jade<\/em>.\r\n<strong>\u00a0 \u00a0 <a title=\"grunt-contrib-stylus\" href=\"https:\/\/github.com\/gruntjs\/grunt-contrib-stylus\" target=\"_blank\">grunt-contrib-stylus<\/a><\/strong>: \u00a0<em>Compila archivos stylus a css<\/em>.\r\n<strong>\u00a0 \u00a0 <a title=\"grunt-contrib-coffee\" href=\"https:\/\/github.com\/gruntjs\/grunt-contrib-coffee\" target=\"_blank\">grunt-contrib-coffee<\/a><\/strong>: \u00a0<em>Compila archivos coffee a js<\/em>.\r\n<strong>\u00a0 \u00a0 <a title=\"grunt-contrib-uglify\" href=\"https:\/\/github.com\/gruntjs\/grunt-contrib-uglify\" target=\"_blank\">grunt-contrib-uglify<\/a><\/strong>: \u00a0Minifica archivos con UglifyJS.\r\n\r\n<strong>Gruntfile.js<\/strong>\r\n\r\nEl Gruntfile.js es un archivo JavaScript v\u00e1lido que debe encontrarse en el directorio ra\u00edz del proyecto, junto al archivo package.json\r\n\r\nSe compone de las siguientes partes:\r\n<ul>\r\n\t<li>La funci\u00f3n contenedora.<\/li>\r\n\t<li>Configuraci\u00f3n de proyectos y tareas.<\/li>\r\n\t<li>Carga de plugins.<\/li>\r\n\t<li>Registro de tareas.<\/li>\r\n<\/ul>\r\n<strong>La funci\u00f3n contenedora<\/strong>\r\n\r\nEsta funci\u00f3n es la que contendr\u00e1 todo nuestro c\u00f3digo de grunt.<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n<\/span>\r\n\r\n[code lang=\"javascript\"]\r\nmodule.exports = function(grunt) {\r\n    \/\/ Configuraci\u00f3n de Grunt\r\n};\r\n[\/code]\r\n\r\n<strong>Configuraci\u00f3n de proyectos y tareas<\/strong>\r\n\r\nAqu\u00ed encontramos el m\u00e9todo <strong>grunt.initConfig<\/strong>, este m\u00e9todo inicializa un objeto de configuraci\u00f3n para el proyecto actual.\r\n\r\nEl objeto se utiliza para las tareas y se puede acceder a \u00e9l mediante el m\u00e9todo <strong>grunt.config<\/strong>, dicho objeto es un objeto Javascript que nosotros ingresaremos.\r\nPor lo general este objeto lo iremos alimentando con todas las configuraciones de tareas que deseemos poner en nuestro proyecto.\r\n\r\n[code lang=\"javascript\"]\r\n    grunt.initConfig({\r\n        \/\/ Configuraci\u00f3n para proyectos y tareas.\r\n    });\r\n[\/code]\r\n\r\n<strong>Carga de plugins\r\n<\/strong><span style=\"line-height: 1.5em;\">Para la carga de plugins de GruntJs, usaremos el m\u00e9todo\u00a0<strong>loadNpmTasks<\/strong>, con el siguiente c\u00f3digo cargaremos el plugin \"<\/span>grunt-contrib-uglify\".\r\n\r\n[code lang=\"javascript\"]\r\n\/\/ Cargar la tarea grunt-contrib-uglify\r\ngrunt.loadNpmTasks('grunt-contrib-uglify');\r\n[\/code]\r\n\r\n<strong>Registro de tareas<\/strong>\r\n\r\nPara el registro de tareas usaremos el m\u00e9todo\u00a0<strong>registerTask <\/strong>de GruntJs.\r\n\r\n[code lang=\"javascript\"]\r\n\/\/ Tarea por defecto.\r\ngrunt.registerTask('default', ['uglify']);\r\n[\/code]\r\n\r\nEste m\u00e9todo tiene 2 par\u00e1metros:\r\nEl primero es el <strong>nombre<\/strong> que queremos ponerle a la tarea y con este mismo nombre podremos acceder a ejecutar la tarea por ejemplo:<span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">\r\n<\/span>\r\n\r\n[code lang=\"javascript\"]\r\ngrunt default\r\n[\/code]\r\n\r\nEl segundo par\u00e1metro es un <strong>Array de nombres de tareas<\/strong>, donde podemos \u00a0agregar una o m\u00e1s tareas, como podemos ver en el siguiente ejemplo.\r\n\r\n[code lang=\"javascript\"]\r\ngrunt.registerTask('default', ['js', 'uglify']);\r\n[\/code]\r\n\r\nEn este ejemplo vemos que se registr\u00f3 la tarea llamada <strong>default<\/strong> y dentro de esta tarea se ejecutar\u00e1n en el orden indicado las siguientes tareas: <strong>js<\/strong> y\u00a0<strong>uglify<\/strong>.\r\n\r\n<strong>Vamos a poner Grunt a prueba!<\/strong>\r\n\r\nAhora vamos a hacer una prueba sencilla de como minificar archivos js con una tarea para mostrar un poquito del gran potencial de GruntJs, para este ejemplo usaremos el <a title=\"grunt-contrib-uglify\" href=\"https:\/\/github.com\/gruntjs\/grunt-contrib-uglify\" target=\"_blank\"><strong>grunt-contrib-uglify <\/strong><\/a>y lo haremos sobre nuestro proyecto\u00a0<strong>grunt-primerospasos<\/strong>.\r\n\r\nEntonces vamos a agregar la dependencia para <strong>uglify<\/strong>(~0.3.3), abrimos el terminal en nuestra carpeta y escribimos lo siguiente:\r\n\r\n[code lang=\"javascript\"]\r\nnpm install grunt-contrib-uglify --save-dev\r\n[\/code]\r\n\r\nDe esta forma instalamos esta dependencia en nuestro proyecto, con lo cual solo nos faltar\u00eda configurar la tarea en el <strong>grunt.initConfig<\/strong>.\r\n\r\nAhora creamos nuestro archivo <strong>Gruntfile.js<\/strong>\u00a0 y insertamos el siguiente contenido base:\r\n\r\n[code lang=\"javascript\"]\r\nmodule.exports = function (grunt) {\r\n  \/\/ Project configuration.\r\n  grunt.initConfig({\r\n    \/\/\r\n  });\r\n};\r\n[\/code]\r\n\r\nAgregamos la tarea <strong>uglify<\/strong>, con algunas de las opciones que nos indica en su <a title=\"grunt-contrib-uglify\" href=\"https:\/\/github.com\/gruntjs\/grunt-contrib-uglify#getting-started\" target=\"_blank\">documentaci\u00f3n<\/a>\r\n\r\n[code lang=\"javascript\"]\r\nmodule.exports = function (grunt) {\r\n  \/\/ Project configuration.\r\n  grunt.initConfig({\r\n    \/\/ uglify\r\n    uglify: {\r\n      options: {\r\n        mangle: false,\r\n        compress: {\r\n          drop_console: true\r\n        }\r\n      },\r\n      js: {\r\n        files: [{\r\n          cwd: 'js\/src\/',  \/\/ ruta de nuestro javascript fuente\r\n          expand: true,    \/\/ ingresar a las subcarpetas\r\n          src: '*.js',     \/\/ patr\u00f3n relativo a cwd\r\n          dest: 'js\/min\/'  \/\/ destino de los archivos compresos\r\n        }]\r\n      }\r\n    }\r\n });\r\n};\r\n[\/code]\r\n\r\nAhora cargaremos el plugin que necesitamos usar:\r\n\r\n[code lang=\"javascript\"]\r\n\/\/ cargamos grunt-contrib-uglify\r\ngrunt.loadNpmTasks('grunt-contrib-uglify');\r\n[\/code]\r\n\r\nLuego registramos nuestra tarea:\r\n\r\n[code lang=\"javascript\"]\r\n\/\/ Registramos la tarea default\r\n\/\/ que ejecutar\u00e1 la tarea grunt uglify\r\ngrunt.registerTask('default', ['uglify']);\r\n[\/code]\r\n\r\nFinalmente nuestro Gruntfile quedar\u00eda as\u00ed:\r\n\r\n[code lang=\"javascript\"]\r\nmodule.exports = function (grunt) {\r\n  \/\/ Project configuration.\r\n  grunt.initConfig({\r\n    \/\/uglify\r\n    uglify: {\r\n      options: {\r\n        mangle: false,\r\n        compress: {\r\n          drop_console: true\r\n        }\r\n      },\r\n      js: {\r\n        files: [{\r\n          cwd: 'js\/src\/',\r\n          expand: true,\r\n          src: '*.js',\r\n          dest: 'js\/min\/'\r\n        }]\r\n      }\r\n    }\r\n });\r\n\r\n \/\/ loadNpmTasks\r\n grunt.loadNpmTasks('grunt-contrib-uglify');\r\n\r\n \/\/ Run Default task(s).\r\n grunt.registerTask('default', ['uglify']);\r\n};\r\n[\/code]\r\n\r\nCon esto solo tenemos que ingresar por medio del terminal a nuestra carpeta donde esta alojado el Gruntfile.js y ejecutar la tarea registrada.\r\n\r\n[code lang=\"javascript\"]\r\ngrunt default\r\n[\/code]\r\n\r\nAl ejecutar la tarea, GruntJs minificar\u00e1 los archivos <strong>*.js<\/strong> que se encuentren en la carpeta <strong>js\/src\/<\/strong> y pondr\u00e1 el resultado en la carpeta <strong>js\/min\/<\/strong>.\r\n\r\nLos archivos de este post se encuentran en el siguiente <a title=\"grunt-primerospasos\" href=\"https:\/\/github.com\/jansanchez\/grunt-primerospasos\" target=\"_blank\">repositorio<\/a> en github.\r\n\r\n\r\nExiste un automatizador m\u00e1s moderno llamado Gulp.js, este automatizador tiene muchas mejoras con respecto a Grunt.js, si deseas saber m\u00e1s, no dudes en visitar nuestro post sobre <a title=\"gulp-js-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos\" href=\"http:\/\/frontend-labs.com\/1669--gulp-js-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos\" target=\"_blank\">Gulp.js<\/a>.\r\n","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/grunt-lading.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Thu, 03 Apr 2014 05:38:54 +0000","created_by":1,"updated_at":"Sat, 04 Oct 2014 14:47:28 +0000","updated_by":1,"published_at":"Thu, 03 Apr 2014 05:38:54 +0000","published_by":1},{"id":340,"title":"Como instalar Sublime Text 2 en Debian Linux","slug":"instalar-sublime-text-debian-linux-ubuntu-linux","markdown":"\nSublime Text es un **editor de texto** sofisticado para **c\u00f3digo**, **marcado**(markup) y **mucho m\u00e1s**.\u00a0Te encantar\u00e1 su elegante interfaz de usuario, sus extraordinarias caracter\u00edsticas\u00a0\u00a0y su sorprendente rendimiento. Si deseas saber m\u00e1s sobre este muy buen editor puedes visitar [su sitio web](http:\/\/www.sublimetext.com\/ \"Sitio web oficial del editor de texto Sublime Text\"), y si \u00a0ya lo tienes instalado pero **quieres darle m\u00e1s poder a tu editor** puedes pasar por nuestro post\u00a0[Paquetes de Sublime Text para acelerar tu flujo de trabajo](http:\/\/frontend-labs.com\/985--paquetes-de-sublime-text-para-acelerar-tu-trabajo \"Paquetes de Sublime Text para acelerar tu flujo de trabajo\"). **Sublime Text** puede ser descargado y evaluado de forma gratuita, la versi\u00f3n de evaluaci\u00f3n te mostrar\u00e1 un alert o aviso la 5ta vez que salves alg\u00fan archivo despu\u00e9s de abrir el programa y luego no ver\u00e1s ese alert hasta la pr\u00f3xima vez que uses el editor. Pero actualmente no hay ning\u00fan l\u00edmite de tiempo para la versi\u00f3n de evaluaci\u00f3n. Si tienes **Debian Linux**\u00a0y deseas instalarlo, entonces manos a la obra!. Nuestro primer paso ser\u00e1 descargar la \u00faltima versi\u00f3n estable de Sublime Text por lo cual nos dirigiremos al siguiente enlace:\u00a0[SublimeText 2](http:\/\/www.sublimetext.com\/2 \"Sublime Text 2\")\u00a0y a continuaci\u00f3n tendremos la siguiente vista. [![Sublime Text 2 - P\u00e1gina de descarga](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/st2-download-page.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/st2-download-page.png) La p\u00e1gina de Sublime Text nos indicar\u00e1 la versi\u00f3n ideal para nuestro\u00a0**Sistema Operativo**, en mi caso sale seleccionada la opci\u00f3n **Linux 64 bit**, la descargaremos haciendo click sobre la opci\u00f3n que deseemos. Al completar la descarga tendremos el siguiente archivo:\u00a0**Sublime Text 2.0.2 x64.tar.bz2**\u00a0en nuestra carpeta local: **downloads**, as\u00ed que ingresamos a ella con el siguiente comando:\n\n\tcd ~\/downloads\n\n**Descomprimimos** el archivo descargado y luego **movemos** la carpeta Sublime Text 2 dentro de la carpeta **\/opt\/**\ttar -jvxf Sublime\\ Text\\ 2.0.2\\ x64.tar.bz2\n\n \u00a0 \tsudo mv Sublime\\ Text\\ 2 \/opt\/\n\n Creamos un **enlace simb\u00f3lico**\u00a0del ejecutable **sublime_text**\u00a0dentro de la carpeta\u00a0**\/usr\/bin**\tsudo ln -s \/opt\/Sublime\\ Text\\ 2\/sublime_text \/usr\/bin\/sublime\n\n Ahora creamos un lanzador, dentro de la carpeta\u00a0**\/usr\/share\/applications**\tsudo sublime \/usr\/share\/applications\/sublime.desktop\n\n Se abrir\u00e1 nuestro editor, agregaremos el siguiente c\u00f3digo, guardamos los cambios y cerramos nuestro Sublime Text 2. \t[Desktop Entry]\n\tVersion=2.0.2\n\tName=Sublime Text 2\n\tGenericName=Text Editor\n\t\n\tExec=sublime\n\tTerminal=false\n\tIcon=\/opt\/Sublime Text 2\/Icon\/48x48\/sublime_text.png\n\tType=Application\n\tCategories=TextEditor;IDE;Development\n\tX-Ayatana-Desktop-Shortcuts=NewWindow\n\t\n\t[NewWindow Shortcut Group]\n\tName=New Window\n\tExec=sublime -n\n\tTargetEnvironment=Unity\n\n Ahora escribimos **\"sublime\"** en nuestro terminal y con esto hemos terminado de instalar completamente Sublime Text 2. \tsublime\n\n******Como instalar paquetes de Sublime Text 2** Ingresamos a nuestro terminal y escribimos lo siguiente \tcd ~\/downloads\n\n \u00a0 \twget -v https:\/\/sublime.wbond.net\/Package\\\u00a0Control.sublime-package\n\n Con esto hemos ingresado a la carpeta **~\/downloads** y hemos descargado el\u00a0**Administrador de paquetes** de Sublime Text 2, ahora moveremos el Administrador de paquetes a su ruta correspondiente. \tmv Package\\ Control.sublime-package ~\/.config\/sublime-text-2\/Installed\\ Packages\/\n\n Con esto hemos instalado el Administrador de paquetes de Sublime Text 2 y vamos a probarlo instalando los paquetes para Jade, Stylus y CoffeeScript. Para esto abrimos nuestro sublime y presionamos la combinaci\u00f3n de teclas **Ctrl + Shift + p** y a continuaci\u00f3n nos mostrar\u00e1 la siguiente vista, en la cual escribiremos **install package** y presionaremos la tecla Enter. [![install_packages](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/install_packages.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/install_packages.png) Luego veremos una lista de paquetes de Sublime Text 2 para instalar, para nuestro ejemplo escribiremos **Jade **y lo seleccionamos y le hacemos click o presionamos la tecla Enter para instalarlo. [![install_jade_in_sublime](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/install_jade_in_sublime.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/install_jade_in_sublime.png) Con esto ya tenemos instalado el soporte para Jade Language en nuestro Sublime Text, la instalaci\u00f3n es muy r\u00e1pida(alrededor de 5 segundos) y la barra inferior izquierda de Sublime Text nos avisar\u00e1 con un mensaje casi imperceptible cuando haya instalado nuestro nuevo paquete correctamente. Para instalar el paquete para Stylus y CoffeeScript, repetimos los mismos pasos que para Jade. Con esto hemos aprendido a instalar y administrar mejor nuestro sublime, que tiene muchos [plugins](http:\/\/frontend-labs.com\/985--paquetes-de-sublime-text-para-acelerar-tu-trabajo \"Paquetes de Sublime Text para acelerar tu flujo de trabajo\"), snippets y una infinidad de paquetes listos para instalar y para finalizar espero que les haya servido en algo este articulo! Si deseas instalar NodeJs para usar Jade, Stylus, CoffeeScript y la infinidad de M\u00f3dulos NPM que tiene, puedes pasar por el siguiente post sobre [Como instalar Nodejs en Debian Linux](http:\/\/frontend-labs.com\/232--como-instalar-nodejs-en-linux-debian \"Como instalar Nodejs en Debian Linux\").\n","html":"Sublime Text es un <strong>editor de texto<\/strong> sofisticado para <strong>c\u00f3digo<\/strong>, <strong>marcado<\/strong>(markup) y <strong>mucho m\u00e1s<\/strong>.\u00a0Te encantar\u00e1 su elegante interfaz de usuario, sus extraordinarias caracter\u00edsticas\u00a0\u00a0y su sorprendente rendimiento.\r\n\r\nSi deseas saber m\u00e1s sobre este muy buen editor puedes visitar <a title=\"Sitio web oficial del editor de texto Sublime Text\" href=\"http:\/\/www.sublimetext.com\/\" target=\"_blank\">su sitio web<\/a>, y si \u00a0ya lo tienes instalado pero <strong>quieres darle m\u00e1s poder a tu editor<\/strong> puedes pasar por nuestro post\u00a0<a title=\"Paquetes de Sublime Text para acelerar tu flujo de trabajo\" href=\"http:\/\/frontend-labs.com\/985--paquetes-de-sublime-text-para-acelerar-tu-trabajo\" target=\"_blank\">Paquetes de Sublime Text para acelerar tu flujo de trabajo<\/a>.\r\n\r\n<strong>Sublime Text<\/strong> puede ser descargado y evaluado de forma gratuita, la versi\u00f3n de evaluaci\u00f3n te mostrar\u00e1 un alert o aviso la 5ta vez que salves alg\u00fan archivo despu\u00e9s de abrir el programa y luego no ver\u00e1s ese alert hasta la pr\u00f3xima vez que uses el editor. Pero actualmente no hay ning\u00fan l\u00edmite de tiempo para la versi\u00f3n de evaluaci\u00f3n.\r\n\r\nSi tienes <strong>Debian Linux<\/strong>\u00a0y deseas instalarlo, entonces manos a la obra!.\r\n\r\nNuestro primer paso ser\u00e1 descargar la \u00faltima versi\u00f3n estable de Sublime Text por lo cual nos dirigiremos al siguiente enlace:\u00a0<a title=\"Sublime Text 2\" href=\"http:\/\/www.sublimetext.com\/2\" target=\"_blank\">SublimeText 2<\/a>\u00a0y a continuaci\u00f3n tendremos la siguiente vista.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/st2-download-page.png\"><img class=\"aligncenter size-full wp-image-359\" alt=\"Sublime Text 2 - P\u00e1gina de descarga\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/st2-download-page.png\" width=\"660\" height=\"484\" \/><\/a>\r\nLa p\u00e1gina de Sublime Text nos indicar\u00e1 la versi\u00f3n ideal para nuestro\u00a0<strong>Sistema Operativo<\/strong>, en mi caso sale seleccionada la opci\u00f3n <strong>Linux 64 bit<\/strong>, la descargaremos haciendo click sobre la opci\u00f3n que deseemos.\r\n\r\nAl completar la descarga tendremos el siguiente archivo:\u00a0<strong>Sublime Text 2.0.2 x64.tar.bz2<\/strong>\u00a0en nuestra carpeta local: <strong>downloads<\/strong>, as\u00ed que ingresamos a ella con el siguiente comando:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ncd ~\/downloads\r\n<\/code>\r\n<\/pre>\r\n\r\n<strong>Descomprimimos<\/strong> el archivo descargado y luego <strong>movemos<\/strong> la carpeta Sublime Text 2 dentro de la carpeta <strong>\/opt\/<\/strong>\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ntar -jvxf Sublime\\ Text\\ 2.0.2\\ x64.tar.bz2\r\n<\/code>\r\n<\/pre>\r\n\r\n&nbsp;\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nsudo mv Sublime\\ Text\\ 2 \/opt\/\r\n<\/code>\r\n<\/pre>\r\n\r\nCreamos un <strong>enlace simb\u00f3lico<\/strong>\u00a0del ejecutable <strong>sublime_text<\/strong>\u00a0dentro de la carpeta\u00a0<strong>\/usr\/bin<\/strong>\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nsudo ln -s \/opt\/Sublime\\ Text\\ 2\/sublime_text \/usr\/bin\/sublime\r\n<\/code>\r\n<\/pre>\r\n\r\n\r\nAhora creamos un lanzador, dentro de la carpeta\u00a0<strong>\/usr\/share\/applications<\/strong>\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nsudo sublime \/usr\/share\/applications\/sublime.desktop\r\n<\/code>\r\n<\/pre>\r\n\r\nSe abrir\u00e1 nuestro editor, agregaremos el siguiente c\u00f3digo, guardamos los cambios y cerramos nuestro Sublime Text 2.\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\n[Desktop Entry]\r\nVersion=2.0.2\r\nName=Sublime Text 2\r\nGenericName=Text Editor\r\n\r\nExec=sublime\r\nTerminal=false\r\nIcon=\/opt\/Sublime Text 2\/Icon\/48x48\/sublime_text.png\r\nType=Application\r\nCategories=TextEditor;IDE;Development\r\nX-Ayatana-Desktop-Shortcuts=NewWindow\r\n\r\n[NewWindow Shortcut Group]\r\nName=New Window\r\nExec=sublime -n\r\nTargetEnvironment=Unity\r\n<\/code>\r\n<\/pre>\r\n\r\nAhora escribimos <strong>\"sublime\"<\/strong> en nuestro terminal y con esto hemos terminado de instalar completamente Sublime Text 2.\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nsublime\r\n<\/code>\r\n<\/pre>\r\n\r\n<strong><\/strong>\r\n<strong>Como instalar paquetes de Sublime Text 2<\/strong>\r\n\r\nIngresamos a nuestro terminal y escribimos lo siguiente\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ncd ~\/downloads\r\n<\/code>\r\n<\/pre>\r\n\r\n&nbsp;\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nwget -v https:\/\/sublime.wbond.net\/Package\\\u00a0Control.sublime-package\r\n<\/code>\r\n<\/pre>\r\n\r\nCon esto hemos ingresado a la carpeta <strong>~\/downloads<\/strong> y hemos descargado el\u00a0<strong>Administrador de paquetes<\/strong> de Sublime Text 2, ahora moveremos el Administrador de paquetes a su ruta correspondiente.\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nmv Package\\ Control.sublime-package ~\/.config\/sublime-text-2\/Installed\\ Packages\/\r\n<\/code>\r\n<\/pre>\r\n\r\nCon esto hemos instalado el Administrador de paquetes de Sublime Text 2 y vamos a probarlo instalando los paquetes para Jade, Stylus y CoffeeScript. Para esto abrimos nuestro sublime y presionamos la combinaci\u00f3n de teclas <strong>Ctrl + Shift + p<\/strong> y a continuaci\u00f3n nos mostrar\u00e1 la siguiente vista, en la cual escribiremos <strong>install package<\/strong> y presionaremos la tecla Enter.\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/install_packages.png\"><img class=\"aligncenter size-full wp-image-379\" alt=\"install_packages\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/install_packages.png\" width=\"500\" height=\"100\" \/><\/a>\r\nLuego veremos una lista de paquetes de Sublime Text 2 para instalar, para nuestro ejemplo escribiremos <strong>Jade <\/strong>y lo seleccionamos y le hacemos click o presionamos la tecla Enter para instalarlo.\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/install_jade_in_sublime.png\"><img class=\"aligncenter size-full wp-image-380\" alt=\"install_jade_in_sublime\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/install_jade_in_sublime.png\" width=\"480\" height=\"432\" \/><\/a>\r\nCon esto ya tenemos instalado el soporte para Jade Language en nuestro Sublime Text, la instalaci\u00f3n es muy r\u00e1pida(alrededor de 5 segundos) y la barra inferior izquierda de Sublime Text nos avisar\u00e1 con un mensaje casi imperceptible cuando haya instalado nuestro nuevo paquete correctamente.\r\n\r\nPara instalar el paquete para Stylus y CoffeeScript, repetimos los mismos pasos que para Jade. Con esto hemos aprendido a instalar y administrar mejor nuestro sublime, que tiene muchos <a title=\"Paquetes de Sublime Text para acelerar tu flujo de trabajo\" href=\"http:\/\/frontend-labs.com\/985--paquetes-de-sublime-text-para-acelerar-tu-trabajo\" target=\"_blank\">plugins<\/a>, snippets y una infinidad de paquetes listos para instalar y para finalizar espero que les haya servido en algo este articulo!\r\n\r\nSi deseas instalar NodeJs para usar Jade, Stylus, CoffeeScript y la infinidad de M\u00f3dulos NPM que tiene, puedes pasar por el siguiente post sobre <a title=\"Como instalar Nodejs en Debian Linux\" href=\"http:\/\/frontend-labs.com\/232--como-instalar-nodejs-en-linux-debian\" target=\"_blank\">Como instalar Nodejs en Debian Linux<\/a>.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/debian-sublime.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Wed, 09 Apr 2014 00:58:14 +0000","created_by":1,"updated_at":"Wed, 22 Oct 2014 13:52:02 +0000","updated_by":1,"published_at":"Wed, 09 Apr 2014 00:58:14 +0000","published_by":1},{"id":407,"title":"CSS Diagramaci\u00f3n de Formularios Flexibles","slug":"css-diagramacion-de-formularios-flexibles","markdown":"\nLa idea aqu\u00ed es tener una estructura de formulario (*HTML*) el cual a base de \"**clases**\" declaradas en nuestra hoja de estilos **Css** se ajuste a nuestras necesidades y\/o requerimientos, cambiando as\u00ed su presentaci\u00f3n visual. En este post aprenderemos a como obtener 3 diferentes diagramaciones de formularios sin alterar la maquetaci\u00f3n html, uds pueden hacer infinidad de cosas con los estilos como cambiarle: colores, tama\u00f1os, posiciones, vista seg\u00fan dispositivos y\/o desktop; por ahora solo veremos este dise\u00f1o, lo dem\u00e1s queda a su imaginaci\u00f3n :) 1. Hacemos nuestra estructura HTML, en este caso lo hice con [Jade](http:\/\/jade-lang.com\/). Es aqu\u00ed class= \"**frm_validate**\" donde agregaremos una clase m\u00e1s como \"**vertical**\" o \"**lesslabel**\" . [code lang=\"ruby\"] form(action=\"POST\", class=\"frm_validate \", id=\"frmValidate\", name=\"frmValidate\") [\/code] [![Form Horizontal](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.06.50.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.06.50.png) [code lang=\"ruby\"] form(action=\"POST\", class=\"frm_validate vertical\", id=\"frmValidate\", name=\"frmValidate\") [\/code] [![Form Vertical](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.06.17.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.06.17.png) [code lang=\"ruby\"] form(action=\"POST\", class=\"frm_validate lesslabel\", id=\"frmValidate\", name=\"frmValidate\") [\/code] [![Form sin label](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.05.28.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.05.28.png) \u00a0 2. Declaramos nuestros atributos Css ([stylus](http:\/\/learnboost.github.io\/stylus\/)), tanto para la clase por default que vendr\u00eda a ser \"**frm_validate**\" como las otras dos ya mencionadas donde cambiamos la diagramaci\u00f3n y dise\u00f1o del formulario recordemos que todos los atributos de elementos se pueden modificar anidando a clases padres que vendr\u00eda a ser \"**vertical**\" o \"**lesslabel**\" : [code lang=\"css\"] .frm_validate \u00a0 width 365px \u00a0 margin 30px auto 0 \u00a0 text-align left \u00a0 &.vertical \u00a0\u00a0\u00a0 label \u00a0\u00a0\u00a0\u00a0\u00a0 display block \u00a0\u00a0\u00a0\u00a0\u00a0 float none \u00a0\u00a0\u00a0\u00a0\u00a0 line-height 22px \u00a0\u00a0\u00a0\u00a0\u00a0 &.ioption \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float left \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 font-size 16px \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin-left 70px\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &:first-child \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin 0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &.ck \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 padding-right 20px \u00a0\u00a0\u00a0 input[type=\"text\"],input[type=\"email\"],input[type=\"tel\"] \u00a0\u00a0\u00a0\u00a0\u00a0 width 340px \u00a0\u00a0\u00a0 textarea \u00a0\u00a0\u00a0\u00a0\u00a0 width 340px \u00a0\u00a0\u00a0 .btn \u00a0\u00a0\u00a0\u00a0\u00a0 margin 0 \u00a0 &.lesslabel \u00a0\u00a0\u00a0 label \u00a0\u00a0\u00a0\u00a0\u00a0 display none \u00a0\u00a0\u00a0\u00a0\u00a0 &.ioption \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 display block \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 font-size 16px \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 line-height 18px \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin-left 60px \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 width 80px \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 input[type=\"radio\"] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 top 4px\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &:first-child \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin 0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &.ck \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 padding-right 20px \u00a0\u00a0\u00a0 input[type=\"text\"],input[type=\"email\"],input[type=\"tel\"] \u00a0\u00a0\u00a0\u00a0\u00a0 width 340px \u00a0\u00a0\u00a0 textarea \u00a0\u00a0\u00a0\u00a0\u00a0 width 340px \u00a0\u00a0\u00a0 .btn \u00a0\u00a0\u00a0\u00a0\u00a0 margin 0 [\/code] \u00a0 3. Para nuestros \"**label**\" e \"**input**\" , [code lang=\"ruby\"] .form_control \u00a0 label(for=\"txtName\") Nombre \u00a0 input(type=\"text\", name=\"txtName\", id=\"txtName\", placeholder=\"Ingrese su Nombre\") [\/code] Las clases(*stylus*) que tambi\u00e9n usaremos son \"**form_control**\" : [code lang=\"css\"] .form_control \u00a0 margin-bottom 15px \u00a0 *zoom 1 \u00a0 &:before,&:after \u00a0\u00a0\u00a0 display table \u00a0\u00a0\u00a0 content \"\" \u00a0\u00a0\u00a0 line-height 0 \u00a0 &:after \u00a0\u00a0\u00a0 clear both \u00a0 label \u00a0\u00a0\u00a0 margin 0 \u00a0\u00a0\u00a0 float left \u00a0\u00a0\u00a0 font-size 16px \u00a0\u00a0\u00a0 line-height 35px \u00a0\u00a0\u00a0 width 90px \u00a0\u00a0\u00a0 &.ioption \u00a0\u00a0\u00a0\u00a0\u00a0 cursor pointer \u00a0\u00a0\u00a0\u00a0\u00a0 line-height 35px \u00a0\u00a0\u00a0\u00a0\u00a0 padding-left 20px \u00a0\u00a0\u00a0\u00a0\u00a0 position relative \u00a0\u00a0\u00a0\u00a0\u00a0 input[type=\"radio\"],input[type=\"checkbox\"] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 left 0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin 0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 padding 0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 position absolute \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 top 12px \u00a0\u00a0\u00a0\u00a0\u00a0 &.ck \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 font-size 13px \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 line-height 16px \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin-left 90px \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 width auto \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 input[type=\"checkbox\"] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 top 2px \u00a0 input[type=\"text\"],input[type=\"email\"],input[type=\"tel\"] \u00a0\u00a0\u00a0 background-color #fff \u00a0\u00a0\u00a0 border 1px solid #999 \u00a0\u00a0\u00a0 border-radius 10px \u00a0\u00a0\u00a0 font 16px\/30px 'Maven Pro', sans-serif \u00a0\u00a0\u00a0 height 30px \u00a0\u00a0\u00a0 padding 2px 10px \u00a0\u00a0\u00a0 width 250px \u00a0 textarea \u00a0\u00a0\u00a0 background-color #fff \u00a0\u00a0\u00a0 border 1px solid #999 \u00a0\u00a0\u00a0 border-radius 10px \u00a0\u00a0\u00a0 font 16px\/19px 'Maven Pro', sans-serif \u00a0\u00a0\u00a0 height 70px \u00a0\u00a0\u00a0 padding 7px 10px \u00a0\u00a0\u00a0 width 250px [\/code] \u00a0 4. Veamos c\u00f3mo funciona cada estilo: \"**frm_validate**\" : este viene a ser a lo que llamo una clase **padre**, donde puedo anidar todas las clases que se me ocurra para obtener resultados diferentes visualmente. \"**form_control**\" : aqu\u00ed indicamos para el input ya sea del tipo \"text\" o \"textarea\" el color de borde como el de fondo, tama\u00f1o de texto, ancho, bordes, otros. Para el label indicamos el tama\u00f1o de texto, visibilidad, otros. Nota: para muchos quiz\u00e1s sea nuevo ver en los estilos estos s\u00edmbolos \"**&.nombredeclase** y\/o **&:before, &:after**\" , eso lo usamos cuando queremos anidar clases obteniendo as\u00ed una clase padre. M\u00e1s informaci\u00f3n [aqu\u00ed](http:\/\/learnboost.github.io\/stylus\/). \u00a0 5. Para entenderlo mejor veamos [aqu\u00ed](http:\/\/codepen.io\/xiocaro\/pen\/ljEhk?editors=110).\n\nSee the Pen [Css Diagramaci\u00f3n Formularios](http:\/\/codepen.io\/xiocaro\/pen\/ljEhk\/) by Xio ([@xiocaro](http:\/\/codepen.io\/xiocaro)) on [CodePen](http:\/\/codepen.io).\n\n<script async=\"\" src=\"\/\/codepen.io\/assets\/embed\/ei.js\"><\/script>[![Formulario](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/final.png)](http:\/\/xiocaro.com\/demo\/form\/) Espero les sea \u00fatil y entendible. Para los que no son usuarios de [Jade](http:\/\/jade-lang.com\/), entren [aqu\u00ed](http:\/\/html2jade.aaron-powell.com\/) para convertir el lenguaje HTML a Jade, y para usar [Stylus](http:\/\/learnboost.github.io\/stylus\/) haciendo pruebas con nuestros propio Css clik [aqu\u00ed](http:\/\/css2stylus.com\/).\n","html":"La idea aqu\u00ed es tener una estructura de formulario (<em>HTML<\/em>) el cual a base de \"<strong>clases<\/strong>\" declaradas en nuestra hoja de estilos <strong>Css<\/strong> se ajuste a nuestras necesidades y\/o requerimientos, cambiando as\u00ed su presentaci\u00f3n visual. En este post aprenderemos a como obtener 3 diferentes diagramaciones de formularios sin alterar la maquetaci\u00f3n html, uds pueden hacer infinidad de cosas con los estilos como cambiarle: colores, tama\u00f1os, posiciones, vista seg\u00fan dispositivos y\/o desktop; por ahora solo veremos este dise\u00f1o, lo dem\u00e1s queda a su imaginaci\u00f3n :)\r\n\r\n1. Hacemos nuestra estructura HTML, en este caso lo hice con <a href=\"http:\/\/jade-lang.com\/\" target=\"_blank\">Jade<\/a>. Es aqu\u00ed class= \"<strong style=\"color: #d08770;\">frm_validate<\/strong>\" donde agregaremos una clase m\u00e1s como \"<strong style=\"color: #d08770;\">vertical<\/strong>\" o \"<strong style=\"color: #d08770;\">lesslabel<\/strong>\" .\r\n\r\n[code lang=\"ruby\"]\r\n\r\nform(action=&quot;POST&quot;, class=&quot;frm_validate &quot;, id=&quot;frmValidate&quot;, name=&quot;frmValidate&quot;)\r\n\r\n[\/code]\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.06.50.png\"><img class=\"alignnone size-full wp-image-673\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.06.50.png\" alt=\"Form Horizontal\" width=\"720\" height=\"484\" \/><\/a>\r\n\r\n[code lang=\"ruby\"]\r\n\r\nform(action=&quot;POST&quot;, class=&quot;frm_validate vertical&quot;, id=&quot;frmValidate&quot;, name=&quot;frmValidate&quot;)\r\n\r\n[\/code]\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.06.17.png\"><img class=\"alignnone size-full wp-image-674\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.06.17.png\" alt=\"Form Vertical\" width=\"720\" height=\"600\" \/><\/a>\r\n\r\n[code lang=\"ruby\"]\r\n\r\nform(action=&quot;POST&quot;, class=&quot;frm_validate lesslabel&quot;, id=&quot;frmValidate&quot;, name=&quot;frmValidate&quot;)\r\n\r\n[\/code]\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.05.28.png\"><img class=\"alignnone size-full wp-image-675\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Captura-de-pantalla-2014-05-05-a-las-18.05.28.png\" alt=\"Form sin label\" width=\"720\" height=\"469\" \/><\/a>\r\n\r\n&nbsp;\r\n\r\n2. Declaramos nuestros atributos Css (<a href=\"http:\/\/learnboost.github.io\/stylus\/\" target=\"_blank\">stylus<\/a>), tanto para la clase por default que vendr\u00eda a ser \"<strong style=\"color: #d08770;\">frm_validate<\/strong>\" como las otras dos ya mencionadas donde cambiamos la diagramaci\u00f3n y dise\u00f1o del formulario recordemos que todos los atributos de elementos se pueden modificar anidando a clases padres que vendr\u00eda a ser \"<strong style=\"color: #d08770;\">vertical<\/strong>\" o \"<strong style=\"color: #d08770;\">lesslabel<\/strong>\" :\r\n\r\n[code lang=\"css\"]\r\n\r\n.frm_validate\r\n\u00a0 width 365px\r\n\u00a0 margin 30px auto 0\r\n\u00a0 text-align left\r\n\u00a0 &amp;.vertical\r\n\u00a0\u00a0\u00a0 label\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 display block\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 float none\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 line-height 22px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 &amp;.ioption\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float left\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 font-size 16px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin-left 70px\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &amp;:first-child\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin 0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &amp;.ck\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 padding-right 20px\r\n\u00a0\u00a0\u00a0 input[type=&quot;text&quot;],input[type=&quot;email&quot;],input[type=&quot;tel&quot;]\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 width 340px\r\n\u00a0\u00a0\u00a0 textarea\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 width 340px\r\n\u00a0\u00a0\u00a0 .btn\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 margin 0\r\n\u00a0 &amp;.lesslabel\r\n\u00a0\u00a0\u00a0 label\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 display none\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 &amp;.ioption\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 display block\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 font-size 16px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 line-height 18px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin-left 60px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 width 80px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 input[type=&quot;radio&quot;]\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 top 4px\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &amp;:first-child\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin 0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &amp;.ck\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 padding-right 20px\r\n\u00a0\u00a0\u00a0 input[type=&quot;text&quot;],input[type=&quot;email&quot;],input[type=&quot;tel&quot;]\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 width 340px\r\n\u00a0\u00a0\u00a0 textarea\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 width 340px\r\n\u00a0\u00a0\u00a0 .btn\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 margin 0\r\n\r\n[\/code]\r\n\r\n&nbsp;\r\n\r\n3. Para nuestros \"<strong style=\"color: #d08770;\">label<\/strong>\" e \"<strong style=\"color: #d08770;\">input<\/strong>\" ,\r\n\r\n[code lang=\"ruby\"]\r\n\r\n.form_control\r\n\u00a0 label(for=&quot;txtName&quot;) Nombre\r\n\u00a0 input(type=&quot;text&quot;, name=&quot;txtName&quot;, id=&quot;txtName&quot;, placeholder=&quot;Ingrese su Nombre&quot;)\r\n\r\n[\/code]\r\n\r\nLas clases(<em>stylus<\/em>) que tambi\u00e9n usaremos son \"<strong style=\"color: #d08770;\">form_control<\/strong>\" :\r\n\r\n[code lang=\"css\"]\r\n\r\n.form_control\r\n\u00a0 margin-bottom 15px\r\n\u00a0 *zoom 1\r\n\u00a0 &amp;:before,&amp;:after\r\n\u00a0\u00a0\u00a0 display table\r\n\u00a0\u00a0\u00a0 content &quot;&quot;\r\n\u00a0\u00a0\u00a0 line-height 0\r\n\u00a0 &amp;:after\r\n\u00a0\u00a0\u00a0 clear both\r\n\u00a0 label\r\n\u00a0\u00a0\u00a0 margin 0\r\n\u00a0\u00a0\u00a0 float left\r\n\u00a0\u00a0\u00a0 font-size 16px\r\n\u00a0\u00a0\u00a0 line-height 35px\r\n\u00a0\u00a0\u00a0 width 90px\r\n\u00a0\u00a0\u00a0 &amp;.ioption\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 cursor pointer\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 line-height 35px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 padding-left 20px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 position relative\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 input[type=&quot;radio&quot;],input[type=&quot;checkbox&quot;]\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 left 0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin 0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 padding 0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 position absolute\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 top 12px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 &amp;.ck\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 font-size 13px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 line-height 16px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 margin-left 90px\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 width auto\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 input[type=&quot;checkbox&quot;]\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 top 2px\r\n\u00a0 input[type=&quot;text&quot;],input[type=&quot;email&quot;],input[type=&quot;tel&quot;]\r\n\u00a0\u00a0\u00a0 background-color #fff\r\n\u00a0\u00a0\u00a0 border 1px solid #999\r\n\u00a0\u00a0\u00a0 border-radius 10px\r\n\u00a0\u00a0\u00a0 font 16px\/30px 'Maven Pro', sans-serif\r\n\u00a0\u00a0\u00a0 height 30px\r\n\u00a0\u00a0\u00a0 padding 2px 10px\r\n\u00a0\u00a0\u00a0 width 250px\r\n\u00a0 textarea\r\n\u00a0\u00a0\u00a0 background-color #fff\r\n\u00a0\u00a0\u00a0 border 1px solid #999\r\n\u00a0\u00a0\u00a0 border-radius 10px\r\n\u00a0\u00a0\u00a0 font 16px\/19px 'Maven Pro', sans-serif\r\n\u00a0\u00a0\u00a0 height 70px\r\n\u00a0\u00a0\u00a0 padding 7px 10px\r\n\u00a0\u00a0\u00a0 width 250px\r\n\r\n[\/code]\r\n\r\n&nbsp;\r\n\r\n4. Veamos c\u00f3mo funciona cada estilo:\r\n\r\n\"<strong style=\"color: #d08770;\">frm_validate<\/strong>\" : este viene a ser a lo que llamo una clase <strong>padre<\/strong>, donde puedo anidar todas las clases que se me ocurra para obtener resultados diferentes visualmente.\r\n\r\n\"<strong style=\"color: #d08770;\">form_control<\/strong>\" : aqu\u00ed indicamos para el input ya sea del tipo \"text\" o \"textarea\" el color de borde como el de fondo, tama\u00f1o de texto, ancho, bordes, otros. Para el label indicamos el tama\u00f1o de texto, visibilidad, otros.\r\n\r\nNota: para muchos quiz\u00e1s sea nuevo ver en los estilos estos s\u00edmbolos \"<strong style=\"color: #d08770;\">&amp;.nombredeclase<\/strong> y\/o <strong style=\"color: #d08770;\">&amp;:before, &amp;:after<\/strong>\" , eso lo usamos cuando queremos anidar clases obteniendo as\u00ed una clase padre. M\u00e1s informaci\u00f3n <a href=\"http:\/\/learnboost.github.io\/stylus\/\" target=\"_blank\">aqu\u00ed<\/a>.\r\n\r\n&nbsp;\r\n\r\n5. Para entenderlo mejor veamos <a style=\"color: #96af22;\" href=\"http:\/\/codepen.io\/xiocaro\/pen\/ljEhk?editors=110\" target=\"_blank\">aqu\u00ed<\/a>.\r\n<p class=\"codepen\" data-height=\"368\" data-theme-id=\"0\" data-slug-hash=\"ljEhk\" data-default-tab=\"result\">See the Pen <a href=\"http:\/\/codepen.io\/xiocaro\/pen\/ljEhk\/\">Css Diagramaci\u00f3n Formularios<\/a> by Xio (<a href=\"http:\/\/codepen.io\/xiocaro\">@xiocaro<\/a>) on <a href=\"http:\/\/codepen.io\">CodePen<\/a>.<\/p>\r\n<script src=\"\/\/codepen.io\/assets\/embed\/ei.js\" async=\"\"><\/script>\r\n\r\n<a href=\"http:\/\/xiocaro.com\/demo\/form\/\" target=\"_blank\"><img class=\"alignnone size-full wp-image-503\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/final.png\" alt=\"Formulario\" width=\"720\" height=\"440\" \/><\/a>\r\n\r\nEspero les sea \u00fatil y entendible. Para los que no son usuarios de <a href=\"http:\/\/jade-lang.com\/\" target=\"_blank\">Jade<\/a>, entren <a href=\"http:\/\/html2jade.aaron-powell.com\/\" target=\"_blank\">aqu\u00ed<\/a> para convertir el lenguaje HTML a Jade, y para usar <a href=\"http:\/\/learnboost.github.io\/stylus\/\" target=\"_blank\">Stylus<\/a> haciendo pruebas con nuestros propio Css clik <a href=\"http:\/\/css2stylus.com\/\" target=\"_blank\">aqu\u00ed<\/a>.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/xio_stylus.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":9,"created_at":"Wed, 16 Apr 2014 21:29:11 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:10:52 +0000","updated_by":1,"published_at":"Wed, 16 Apr 2014 21:29:11 +0000","published_by":1},{"id":138,"title":"La misteriosa propiedad \"lastIndex\" al validar un campo con Regex","slug":"la-misteriosa-propiedad-lastindex-al-validar-un-campo-con-regex","markdown":"\nMuchas veces hemos visto casos donde era necesario validar campos como correos electr\u00f3nicos, n\u00fameros telef\u00f3nicos o cualquier otro caso\u00a0con expresiones regulares y no hemos tenido ning\u00fan problema en su correcto funcionamiento, pero aveces suceden casos extra\u00f1os donde es necesario revisar m\u00e1s a fondo el flujo de la validaci\u00f3n. Primero debemos entender lo que significa el **lastIndex** en una **expresi\u00f3n regular**. Esta propiedad solo se asocia a los objetos\u00a0**RegExp**\u00a0(Expresi\u00f3n regular) - \"global\". Para entender mejor el significado de \"global\", \u00a0lo explicaremos con el siguiente ejemplo. En una expresi\u00f3n regular existen las banderas o flags que modifican el comportamiento de la b\u00fasqueda. [code lang=\"javascript\"] var str = '_x_x'; \/\/Definimos una cadena \/\/ Caso 1: var regex1 = \/x\/; \/\/Definimos la expresi\u00f3n regular console.log(str.match(regex1)); \/\/En consola saldr\u00e1: x \/\/Encontr\u00f3 una coincidencia \/\/Caso 2: var regex2 = \/x\/g; \/\/Definimos la expresi\u00f3n regular con una bandera \"g\" que significa \"global\". console.log(str.match(regex2)); \/\/En consola saldr\u00e1: x,x \/\/Encontr\u00f3 2 coincidencias [\/code] Como vemos en el CASO 2, al tener una expresi\u00f3n regular con la bandera \"g\" significa que en un contexto global va a buscar todas las coincidencias \"x\" que encuentre en la cadena, a diferencia del CASO 1 donde solo busca la primera coincidencia y no sigue buscando.\n\nLastIndex:\n----------\n\n La propiedad lastIndex es un n\u00famero que cambia cada vez que se produce una coincidencia correcta. Los m\u00e9todos test del objeto RegExp, y los m\u00e9todos match, replace y split del objeto String modifican la propiedad lastIndex. Tenemos el siguiente c\u00f3digo, donde observamos que al aplicar el m\u00e9todo \"test\" varias veces el \"lastindex\" se va modificando. [code lang=\"javascript\"] var str = '_x_x'; var regex = \/x\/g; console.log(regex.lastIndex) \/\/0 regex.test(str) console.log(regex.lastIndex) \/\/2 regex.test(str) console.log(regex.lastIndex) \/\/4 [\/code] La posici\u00f3n del lastIndex es referente a la posici\u00f3n donde se encontr\u00f3 la coincidencia. [![lasIndex](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/lasIndex1-300x220.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/lasIndex1.jpg) Con el siguiente ejemplo podemos ver c\u00f3mo se comporta el lastIndex cuando se realiza una validaci\u00f3n por el m\u00e9todo test(): ### HTML:\n\n [code lang=\"html\"] <button type=\"click\" id=\"btnTest\">Test<\/button> <p>Cadena: _x_x<\/p> <p>lastIndex: <span><\/span><\/p> [\/code] ### JavaScript:\n\n [code lang=\"javascript\"] var regex = \/x\/g, str = '_x_x'; $(\"span\").text(regex.lastIndex) \/\/0 $('#btnTest').on('click', function(){ regex.test(str); $(\"span\").text(regex.lastIndex); \/* - Al primer click \/\/1 - Al segundo click \/\/2 - Al tercer click \/\/4 - Al cuarto click \/\/0 \/\/... *\/ }); [\/code] ### Ejemplo en vivo:\n\n<iframe allowfullscreen=\"allowfullscreen\" frameborder=\"0\" height=\"300\" src=\"http:\/\/jsfiddle.net\/LRwYZ\/3\/embedded\/\" width=\"100%\"><\/iframe> Como vemos el lastIndex por defecto comienza en \"0\" y cada vez que hacemos clic, se va actualizando hasta llegar a \"4\" y al no encontrar otra siguiente coincidencia se reinicia a \"0\". En algunos casos vamos a encontrar con situaciones donde el \"lastIndex\" va a cumplir un rol muy importante a la hora de hacer validaciones por expresiones regulares, como por ejemplo la validaci\u00f3n de un correo. ### HTML:\n\n [code lang=\"html\"] <input id=\"txtMail\" type=\"text\" value=\"mi_correo@frontend.pe\"> <button type=\"click\" id=\"btnValidate\">Validar!<\/button> <p>LastIndex: <span id=\"spanIndex\"><\/span><\/p> <p id=\"pMessage\"><\/p> [\/code] ### JavaScript:\n\n [code lang=\"javascript\"] var spanIndex = $(\"#spanIndex\"), message = $(\"#pMessage\"), txtMail = $(\"#txtMail\"), regex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g; spanIndex.text(regex.lastIndex); $('#btnValidate').on('click', function(){ var value = txtMail.val(), valueText; if(regex.test(value)){ valueText = 'SI'; }else{ valueText = 'NO'; } message.show().text(valueText).fadeOut(); spanIndex.text(regex.lastIndex); }); [\/code] ### Ejemplo en vivo:\n\n<iframe allowfullscreen=\"allowfullscreen\" frameborder=\"0\" height=\"300\" src=\"http:\/\/jsfiddle.net\/K7w4U\/4\/embedded\/\" width=\"100%\"><\/iframe> En el ejemplo anterior, el correo siempre es v\u00e1lido, pero **\u00bfporqu\u00e9 muestra algunas veces que no lo es?**. Esto se debe al lastIndex. Explicaci\u00f3n: \n-------------\n\n Despu\u00e9s que se declara una expresi\u00f3n regular y se almacena en una variable con la propiedad lastIndex, este va a tomar por defecto el valor de 0. [code lang=\"javascript\"] var regex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g; console.log(regex.lastIndex); \/\/0 [\/code] En primer lugar notamos que el lastIndex por defecto est\u00e1 en \"0\" y al hacer el **1er click**, valida correctamente mostrando que el **correo s\u00ed es v\u00e1lido**, pero notamos que el lastIndex se modific\u00f3 a 21 (que es la posici\u00f3n donde lo encontr\u00f3). En segundo lugar notamos que lastIndex tiene el valor de 21 y al hacer el 2do click, notamos que vuelve a \"0\", pero **muestra que el correo no es v\u00e1lido**. Esto sucede debido a que el lastIndex (en el segundo click) tiene el valor de 21 y va a buscar a partir de esa posici\u00f3n la siguiente coincidencia, pero al estar en la \u00faltima posici\u00f3n de la cadena va a volver a \"0\", **mostrando que el correo no es v\u00e1lido.**[![explicacion](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/explicacion.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/explicacion.jpg) Para poder solucionar este problema y que siempre se muestre v\u00e1lido, hay que **volver a asignar el valor del lastindex a \"0\"** dentro de la funci\u00f3n click. [code lang=\"javascript\"] regex.lastIndex = 0; \/\/Aqui donde le volvemos a asignar el valor \"0\" [\/code] El c\u00f3digo quedar\u00eda de la siguiente forma. [code lang=\"javascript\"] var spanIndex = $(\"#spanIndex\"), message = $(\"#pMessage\"), txtMail = $(\"#txtMail\"), regex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g; spanIndex.text(regex.lastIndex); $('#btnValidate').on('click', function(){ var value = txtMail.val(), valueText; regex.lastIndex = 0; \/\/Aqui donde le volvemos a asignar el valor \"0\" if(regex.test(value)){ valueText = 'SI'; }else{ valueText = 'NO'; } message.show().text(valueText).fadeOut(); spanIndex.text(regex.lastIndex); }); [\/code] ### Ejemplo en vivo:\n\n<iframe allowfullscreen=\"allowfullscreen\" frameborder=\"0\" height=\"300\" src=\"http:\/\/jsfiddle.net\/K7w4U\/5\/embedded\/\" width=\"100%\"><\/iframe> De esta manera solucionamos el problema de la validaci\u00f3n por expresi\u00f3n regular manipulando el lastIndex. Hay que observar que la declaraci\u00f3n de la expresi\u00f3n regular es almacenada en la variable **\"regex\"** que est\u00e1 fuera de la funci\u00f3n. [code lang=\"javascript\"] var regex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g; [\/code] Si la variable **\"regex\"** hubiese estado dentro de la funci\u00f3n click, ya no era necesario igualar a \"0\" porque cada vez que se ejecuta la funci\u00f3n \"click\", se volver\u00e1 a declarar la variable regex por ende su lastIndex es \"0\". [code lang=\"javascript\"] var spanIndex = $(\"#spanIndex\"), message = $(\"#pMessage span\"), txtMail = $(\"#txtMail\"); $('#btnValidate').on('click', function(){ \/\/ La variable regex est\u00e1 dentro de la funci\u00f3n var value = txtMail.val(), regex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g, valueText; \/\/regex.lastIndex = 0; \/\/ Ya no es necesario. if(regex.test(value)){ valueText = 'SI' }else{ valueText = 'NO' } message.show().text(valueText).fadeOut(); spanIndex.text(regex.lastIndex); }); [\/code] ### Ejemplo en vivo:\n\n<iframe allowfullscreen=\"allowfullscreen\" frameborder=\"0\" height=\"300\" src=\"http:\/\/jsfiddle.net\/K7w4U\/6\/embedded\/\" width=\"100%\"><\/iframe> Para aprender sobre expresiones regulares, puedes visitar este [link](http:\/\/frontend-labs.com\/1621--aprender-expresiones-regulares-en-espanol-videotutorial-parte-1 \"Aprender expresiones regulares\") donde explica c\u00f3mo entenderlos. \n","html":"Muchas veces hemos visto casos donde era necesario validar campos como correos electr\u00f3nicos, n\u00fameros telef\u00f3nicos o cualquier otro caso\u00a0con expresiones regulares y no hemos tenido ning\u00fan problema en su correcto funcionamiento, pero aveces suceden casos extra\u00f1os donde es necesario revisar m\u00e1s a fondo el flujo de la validaci\u00f3n.\r\n\r\nPrimero debemos entender lo que significa el <strong>lastIndex<\/strong> en una <strong>expresi\u00f3n regular<\/strong>.\r\n\r\nEsta propiedad solo se asocia a los objetos\u00a0<strong>RegExp<\/strong>\u00a0(Expresi\u00f3n regular) - \"global\".\r\nPara entender mejor el significado de \"global\", \u00a0lo explicaremos con el siguiente ejemplo.\r\n\r\nEn una expresi\u00f3n regular existen las banderas o flags que modifican el comportamiento de la b\u00fasqueda.\r\n\r\n[code lang=\"javascript\"]\r\nvar str = '_x_x'; \/\/Definimos una cadena\r\n\r\n\/\/ Caso 1:\r\nvar regex1 = \/x\/; \/\/Definimos la expresi\u00f3n regular\r\nconsole.log(str.match(regex1));\r\n\/\/En consola saldr\u00e1: x\r\n\/\/Encontr\u00f3 una coincidencia\r\n\r\n\/\/Caso 2:\r\nvar regex2 = \/x\/g; \/\/Definimos la expresi\u00f3n regular con una bandera &quot;g&quot; que significa &quot;global&quot;.\r\nconsole.log(str.match(regex2));\r\n\/\/En consola saldr\u00e1: x,x\r\n\/\/Encontr\u00f3 2 coincidencias\r\n[\/code]\r\n\r\nComo vemos en el CASO 2, al tener una expresi\u00f3n regular con la bandera \"g\" significa que en un contexto global va a buscar todas las coincidencias \"x\" que encuentre en la cadena, a diferencia del CASO 1 donde solo busca la primera coincidencia y no sigue buscando.\r\n\r\n<h2>LastIndex:<\/h2>\r\n\r\nLa propiedad lastIndex es un n\u00famero que cambia cada vez que se produce una coincidencia correcta.\r\nLos m\u00e9todos test del objeto RegExp, y los m\u00e9todos match, replace y split del objeto String modifican la propiedad lastIndex.\r\n\r\nTenemos el siguiente c\u00f3digo, donde observamos que al aplicar el m\u00e9todo \"test\" varias veces el \"lastindex\" se va modificando.\r\n[code lang=\"javascript\"]\r\nvar str = '_x_x';\r\nvar regex = \/x\/g;\r\nconsole.log(regex.lastIndex) \/\/0\r\nregex.test(str)\r\nconsole.log(regex.lastIndex) \/\/2\r\nregex.test(str)\r\nconsole.log(regex.lastIndex) \/\/4\r\n[\/code]\r\n\r\nLa posici\u00f3n del lastIndex es referente a la posici\u00f3n donde se encontr\u00f3 la coincidencia.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/lasIndex1.jpg\"><img class=\"alignnone size-medium wp-image-449\" alt=\"lasIndex\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/lasIndex1-300x220.jpg\" width=\"300\" height=\"220\" \/><\/a>\r\n\r\nCon el siguiente ejemplo podemos ver c\u00f3mo se comporta el lastIndex cuando se realiza una validaci\u00f3n por el m\u00e9todo test():\r\n\r\n<h3>HTML:<\/h3>\r\n[code lang=\"html\"]\r\n&lt;button type=&quot;click&quot; id=&quot;btnTest&quot;&gt;Test&lt;\/button&gt;\r\n&lt;p&gt;Cadena: _x_x&lt;\/p&gt;\r\n&lt;p&gt;lastIndex: &lt;span&gt;&lt;\/span&gt;&lt;\/p&gt;\r\n[\/code]\r\n\r\n<h3>JavaScript:<\/h3>\r\n[code lang=\"javascript\"]\r\nvar regex = \/x\/g,\r\n    str = '_x_x';\r\n\r\n$(&quot;span&quot;).text(regex.lastIndex) \/\/0\r\n$('#btnTest').on('click', function(){\r\n  regex.test(str);\r\n  $(&quot;span&quot;).text(regex.lastIndex);\r\n  \/*\r\n  - Al primer click\r\n  \/\/1\r\n  - Al segundo click\r\n  \/\/2\r\n  - Al tercer click\r\n  \/\/4\r\n  - Al cuarto click\r\n  \/\/0\r\n  \/\/...\r\n*\/\r\n});\r\n[\/code]\r\n\r\n<h3>Ejemplo en vivo:<\/h3>\r\n<iframe width=\"100%\" height=\"300\" src=\"http:\/\/jsfiddle.net\/LRwYZ\/3\/embedded\/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"><\/iframe>\r\n\r\nComo vemos el lastIndex por defecto comienza en \"0\" y cada vez que hacemos clic, se va actualizando hasta llegar a \"4\" y al no encontrar otra siguiente coincidencia se reinicia a \"0\".\r\n\r\nEn algunos casos vamos a encontrar con situaciones donde el \"lastIndex\" va a cumplir un rol muy importante a la hora de hacer validaciones por expresiones regulares, como por ejemplo la validaci\u00f3n de un correo.\r\n\r\n<h3>HTML:<\/h3>\r\n[code lang=\"html\"]\r\n&lt;input id=&quot;txtMail&quot; type=&quot;text&quot; value=&quot;mi_correo@frontend.pe&quot;&gt;\r\n&lt;button type=&quot;click&quot; id=&quot;btnValidate&quot;&gt;Validar!&lt;\/button&gt;\r\n&lt;p&gt;LastIndex: &lt;span id=&quot;spanIndex&quot;&gt;&lt;\/span&gt;&lt;\/p&gt;\r\n&lt;p id=&quot;pMessage&quot;&gt;&lt;\/p&gt;\r\n[\/code]\r\n\r\n<h3>JavaScript:<\/h3>\r\n[code lang=\"javascript\"]\r\nvar spanIndex = $(&quot;#spanIndex&quot;),\r\n\tmessage = $(&quot;#pMessage&quot;),\r\n\ttxtMail = $(&quot;#txtMail&quot;),\r\n\tregex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g;\r\n\r\nspanIndex.text(regex.lastIndex);\r\n$('#btnValidate').on('click', function(){\r\n\tvar value = txtMail.val(),\r\n            valueText;\r\n\r\n\tif(regex.test(value)){\r\n\t    valueText = 'SI';\r\n\t}else{\r\n            valueText = 'NO';\r\n\t}\r\n        message.show().text(valueText).fadeOut();\r\n\tspanIndex.text(regex.lastIndex);\r\n});\r\n[\/code]\r\n\r\n<h3>Ejemplo en vivo:<\/h3>\r\n<iframe width=\"100%\" height=\"300\" src=\"http:\/\/jsfiddle.net\/K7w4U\/4\/embedded\/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"><\/iframe>\r\n\r\nEn el ejemplo anterior, el correo siempre es v\u00e1lido, pero \r\n<strong>\u00bfporqu\u00e9 muestra algunas veces que no lo es?<\/strong>. Esto se debe al lastIndex.\r\n\r\n<h2>Explicaci\u00f3n: <\/h2>\r\n\r\nDespu\u00e9s que se declara una expresi\u00f3n regular y se almacena en una variable con la propiedad lastIndex, este va a tomar por defecto el valor de 0.\r\n\r\n[code lang=\"javascript\"]\r\nvar regex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g;\r\nconsole.log(regex.lastIndex); \/\/0\r\n[\/code]\r\n\r\nEn primer lugar notamos que el lastIndex por defecto est\u00e1 en \"0\" y al hacer el <strong>1er click<\/strong>, valida correctamente mostrando que el <strong>correo s\u00ed es v\u00e1lido<\/strong>, pero notamos que el lastIndex se modific\u00f3 a 21 (que es la posici\u00f3n donde lo encontr\u00f3).\r\n\r\nEn segundo lugar notamos que lastIndex tiene el valor de 21 y al hacer el 2do click, notamos que vuelve a \"0\", pero <strong>muestra que el correo no es v\u00e1lido<\/strong>.\r\n\r\nEsto sucede debido a que el lastIndex (en el segundo click) tiene el valor de 21 y va a buscar a partir de esa posici\u00f3n la siguiente coincidencia, pero al estar en la \u00faltima posici\u00f3n de la cadena va a volver a \"0\", <strong>mostrando que el correo no es v\u00e1lido.<\/strong>\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/explicacion.jpg\"><img src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/explicacion.jpg\" alt=\"explicacion\" width=\"862\" height=\"500\" class=\"alignnone size-full wp-image-555\" \/><\/a>\r\n\r\nPara poder solucionar este problema y que siempre se muestre v\u00e1lido, hay que <strong>volver a asignar el valor del lastindex a \"0\"<\/strong> dentro de la funci\u00f3n click.\r\n[code lang=\"javascript\"]\r\nregex.lastIndex = 0; \/\/Aqui donde le volvemos a asignar el valor &quot;0&quot;\r\n[\/code]\r\n\r\nEl c\u00f3digo quedar\u00eda de la siguiente forma.\r\n[code lang=\"javascript\"]\r\nvar spanIndex = $(&quot;#spanIndex&quot;),\r\n    message = $(&quot;#pMessage&quot;),\r\n    txtMail = $(&quot;#txtMail&quot;),\r\n    regex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g;\r\n\r\nspanIndex.text(regex.lastIndex);\r\n$('#btnValidate').on('click', function(){\r\n\tvar value = txtMail.val(),\r\n            valueText;\r\n\r\n\tregex.lastIndex = 0; \/\/Aqui donde le volvemos a asignar el valor &quot;0&quot;\r\n\tif(regex.test(value)){\r\n\t    valueText = 'SI';\r\n\t}else{\r\n\t    valueText = 'NO';\r\n\t}\r\n        message.show().text(valueText).fadeOut();\r\n\tspanIndex.text(regex.lastIndex);\r\n});\r\n[\/code]\r\n\r\n<h3>Ejemplo en vivo:<\/h3>\r\n<iframe width=\"100%\" height=\"300\" src=\"http:\/\/jsfiddle.net\/K7w4U\/5\/embedded\/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"><\/iframe>\r\n\r\nDe esta manera solucionamos el problema de la validaci\u00f3n por expresi\u00f3n regular manipulando el lastIndex. Hay que observar que la declaraci\u00f3n de la expresi\u00f3n regular es almacenada en la variable <strong>\"regex\"<\/strong> que est\u00e1 fuera de la funci\u00f3n.\r\n\r\n[code lang=\"javascript\"]\r\nvar regex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g;\r\n[\/code]\r\n\r\nSi la variable <strong>\"regex\"<\/strong> hubiese estado dentro de la funci\u00f3n click, ya no era necesario igualar a \"0\" porque cada vez que se ejecuta la funci\u00f3n \"click\", se volver\u00e1 a declarar la variable regex por ende su lastIndex es \"0\".\r\n\r\n\r\n[code lang=\"javascript\"]\r\nvar spanIndex = $(&quot;#spanIndex&quot;),\r\n    message = $(&quot;#pMessage span&quot;),\r\n    txtMail = $(&quot;#txtMail&quot;);\r\n\r\n$('#btnValidate').on('click', function(){\r\n   \/\/ La variable regex est\u00e1 dentro de la funci\u00f3n\r\n   var value = txtMail.val(),\r\n       regex = \/^[\\w-\\.]+@[\\w-]+(\\.[A-Za-z_-]{2,4}){1,3}$\/g,\r\n       valueText;\r\n   \/\/regex.lastIndex = 0; \/\/ Ya no es necesario.\r\n   if(regex.test(value)){\r\n      valueText = 'SI'\r\n   }else{\r\n      valueText = 'NO'\r\n   }\r\n   message.show().text(valueText).fadeOut();\r\n   spanIndex.text(regex.lastIndex);\r\n});\r\n[\/code]\r\n\r\n<h3>Ejemplo en vivo:<\/h3>\r\n<iframe width=\"100%\" height=\"300\" src=\"http:\/\/jsfiddle.net\/K7w4U\/6\/embedded\/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"><\/iframe>\r\n\r\nPara aprender sobre expresiones regulares, puedes visitar este <a href=\"http:\/\/frontend-labs.com\/1621--aprender-expresiones-regulares-en-espanol-videotutorial-parte-1\" title=\"Aprender expresiones regulares\" target=\"_blank\">link<\/a> donde explica c\u00f3mo entenderlos.\r\n","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/regular.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":7,"created_at":"Mon, 21 Apr 2014 17:09:44 +0000","created_by":1,"updated_at":"Fri, 08 Aug 2014 14:12:59 +0000","updated_by":1,"published_at":"Mon, 21 Apr 2014 17:09:44 +0000","published_by":1},{"id":453,"title":"Como usar Bower","slug":"como-usar-bower-js-dependencias","markdown":"\n[Bower](http:\/\/bower.io\/ \"Bower\") es un gestor de librer\u00edas, es decir, te permite agregar, actualizar y eliminar paquetes(librer\u00edas, plugins, frameworks, etc) de las cuales depende tu proyecto. **Para instalar bower**\n-----------------------\n\n [code type=\"javascript\"] npm install -g bower [\/code] **Para obtener un paquete**\n---------------------------\n\n [code type=\"javascript\"] bower install <nombre del paquete> [\/code] En este caso quiero bajar jquery [![bower-get](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/bower-get.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/bower-get.png) Cuando bower nos indica **\"not-cached\"** es porque es la primera vez que lo a bajado y por ende no lo tiene cacheado, las dem\u00e1s lineas significa que se encontr\u00f3 el repositorio de donde bower gestiona el paquete. Adem\u00e1s vemos que cuando solo pones el nombre del paquete descarga la ultima versi\u00f3n. **\u00bfPor que veo rutas de github en la descarga ?** Porque bower se apoya de repositorios los cuales est\u00e1n versionados mediante tags, los cuales veremos m\u00e1s adelante. Para obtener una versi\u00f3n en especial\n------------------------------------\n\n [code type=\"javascript\"] bower install <nombre del paquete>#<version> [\/code] [![change version](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/change-version.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/change-version.png) En este caso, estamos intentando pasar a una versi\u00f3n m\u00e1s antigua, en este caso bower nos indica si estamos seguro y nos da la opci\u00f3n de elegir. En el caso que queramos pasar a la versi\u00f3n mas reciente pasar\u00eda el mismo flujo. Listar los paquetes administrados desde bower\n---------------------------------------------\n\n [code type=\"javascript\"] bower list [\/code] [![list](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/list.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/list.png) En la imagen anterior vemos como bower nos indica que hay una versi\u00f3n mas reciente de jquery (latest is 2.1.1-rc2) Cambiar \u00a0la ruta donde bower hace las descargas de las librerias\n----------------------------------------------------------------\n\n Por default bower crea la carpeta bower_components, la cual puede ser cambiada en el archivo de nombre\u00a0<span style=\"color: #222222;\">.bowerrc, en el caso que no exista, creela en la raiz de la carpeta donde se est\u00e1n descargando tus paquetes :D.<\/span> [code type=\"javascript\"] { \"directory\": \"public\/bower_components\" } [\/code] Por ejemplo si cambias la ruta como el siguiente ejemplo [code type=\"javascript\"] { \"directory\": \"public\/js\/libs\" } [\/code] Lo que har\u00eda bower es ir a la ruta y en el caso que no exista js \u00a0y libs crea las carpetas. Buscar paquetes\n---------------\n\n [code type=\"javascript\"] bower search <nombre del paquete> [\/code] [![search](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/search.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/search.png) El detalle al momento de buscar es que si eres muy explicito con el nombre del paquete te puede salir una lista inmensa de resultados. Eliminar un paquete\n-------------------\n\n [code type=\"javascript\"] bower uninstall <nombre del paquete> [\/code] [![eliminar paquete](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/eliminar-paquete.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/eliminar-paquete.png) En este caso lo que hace bower es eliminar las carpeta que contiene el paquete. Usar bower con zsh y que te salga 'no matches found'\n----------------------------------------------------\n\n Este fue una incidencia que me ocurri\u00f3 hace poco y ocurri\u00f3 cuando intentaba instalar una version especifica de jquery y sal\u00eda lo siguiente : [code type=\"bash\"] $bower install jquery#1.11.1 zsh: no matches found:jquery#1.11.1 [\/code] Para solucionar esto solo tenemos que agregar en nuestro archivo ~\/.zshrc lo siguiente : [code type=\"bash\"] alias bower='noglob bower' [\/code]\n","html":"<a title=\"Bower\" href=\"http:\/\/bower.io\/\" target=\"_blank\">Bower<\/a> es un gestor de librer\u00edas, es decir, te permite agregar, actualizar y eliminar paquetes(librer\u00edas, plugins, frameworks, etc) de las cuales depende tu proyecto.\r\n<h2><strong>Para instalar bower<\/strong><\/h2>\r\n\r\n[code type=\"javascript\"]\r\nnpm install -g bower\r\n[\/code]\r\n\r\n<h2><strong>Para obtener un paquete<\/strong><\/h2>\r\n\r\n[code type=\"javascript\"]\r\nbower install &lt;nombre del paquete&gt;\r\n[\/code]\r\n\r\nEn este caso quiero bajar jquery\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/bower-get.png\"><img class=\"alignnone size-full wp-image-471\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/bower-get.png\" alt=\"bower-get\" width=\"760\" height=\"206\" \/><\/a>\r\nCuando bower nos indica <strong>\"not-cached\"<\/strong> es porque es la primera vez que lo a bajado y por ende no lo tiene cacheado, las dem\u00e1s lineas significa que se encontr\u00f3 el repositorio de donde bower gestiona el paquete.\r\nAdem\u00e1s vemos que cuando solo pones el nombre del paquete descarga la ultima versi\u00f3n.\r\n<strong>\u00bfPor que veo rutas de github en la descarga ?<\/strong>\r\nPorque bower se apoya de repositorios los cuales est\u00e1n versionados mediante tags, los cuales veremos m\u00e1s adelante.\r\n<h2>Para obtener una versi\u00f3n en especial<\/h2>\r\n\r\n[code type=\"javascript\"]\r\nbower install &lt;nombre del paquete&gt;#&lt;version&gt;\r\n[\/code]\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/change-version.png\"><img class=\"alignnone size-full wp-image-485\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/change-version.png\" alt=\"change version\" width=\"780\" height=\"521\" \/><\/a>\r\nEn este caso, estamos intentando pasar a una versi\u00f3n m\u00e1s antigua, en este caso bower nos indica si estamos seguro y nos da la opci\u00f3n de elegir. En el caso que queramos pasar a la versi\u00f3n mas reciente pasar\u00eda el mismo flujo.\r\n<h2>Listar los paquetes administrados desde bower<\/h2>\r\n\r\n[code type=\"javascript\"]\r\nbower list\r\n[\/code]\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/list.png\"><img class=\"alignnone size-full wp-image-488\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/list.png\" alt=\"list\" width=\"794\" height=\"121\" \/><\/a>\r\n\r\nEn la imagen anterior vemos como bower nos indica que hay una versi\u00f3n mas reciente de jquery (latest is 2.1.1-rc2)\r\n<h2>Cambiar \u00a0la ruta donde bower hace las descargas de las librerias<\/h2>\r\nPor default bower crea la carpeta bower_components, la cual puede ser cambiada en el archivo de nombre\u00a0<span style=\"color: #222222;\">.bowerrc, en el caso que no exista, creela en la raiz de la carpeta donde se est\u00e1n descargando tus paquetes :D.<\/span>\r\n\r\n[code type=\"javascript\"]\r\n{\r\n  &quot;directory&quot;: &quot;public\/bower_components&quot;\r\n}\r\n[\/code]\r\n\r\nPor ejemplo si cambias la ruta como el siguiente ejemplo\r\n\r\n[code type=\"javascript\"]\r\n{\r\n  &quot;directory&quot;: &quot;public\/js\/libs&quot;\r\n}\r\n[\/code]\r\n\r\nLo que har\u00eda bower es ir a la ruta y en el caso que no exista js \u00a0y libs crea las carpetas.\r\n<h2>Buscar paquetes<\/h2>\r\n\r\n[code type=\"javascript\"]\r\nbower search &lt;nombre del paquete&gt;\r\n[\/code]\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/search.png\"><img class=\"alignnone size-full wp-image-501\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/search.png\" alt=\"search\" width=\"804\" height=\"442\" \/><\/a>\r\nEl detalle al momento de buscar es que si eres muy explicito con el nombre del paquete te puede salir una lista inmensa de resultados.\r\n<h2>Eliminar un paquete<\/h2>\r\n\r\n[code type=\"javascript\"]\r\nbower uninstall &lt;nombre del paquete&gt;\r\n[\/code]\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/eliminar-paquete.png\"><img class=\"alignnone size-full wp-image-504\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/eliminar-paquete.png\" alt=\"eliminar paquete\" width=\"422\" height=\"54\" \/><\/a>\r\nEn este caso lo que hace bower es eliminar las carpeta que contiene el paquete.\r\n\r\n<h2>Usar bower con zsh y que te salga 'no matches found'<\/h2>\r\nEste fue una incidencia que me ocurri\u00f3 hace poco y ocurri\u00f3 cuando intentaba instalar una version especifica de jquery y sal\u00eda lo siguiente :\r\n[code type=\"bash\"]\r\n $bower install jquery#1.11.1\r\n zsh: no matches found:jquery#1.11.1\r\n[\/code]\r\n\r\nPara solucionar esto solo tenemos que agregar en nuestro archivo ~\/.zshrc lo siguiente :\r\n[code type=\"bash\"]\r\n alias bower='noglob bower'\r\n[\/code]","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/iconbower.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":3,"created_at":"Mon, 21 Apr 2014 23:20:34 +0000","created_by":1,"updated_at":"Mon, 28 Jul 2014 12:54:55 +0000","updated_by":1,"published_at":"Mon, 21 Apr 2014 23:20:34 +0000","published_by":1},{"id":584,"title":"Como instalar Virtualbox, Vagrant y compilar Ruby en Debian Linux","slug":"como-instalar-virtualbox-vagrant-compilar-ruby-debian-linux","markdown":"\nHoy vamos a instalar [**Vagrant**](http:\/\/www.vagrantup.com\/ \"Vagrant\") en nuestro Debian Linux, para esto necesitamos tener instalado previamente [**Virtualbox**](https:\/\/www.virtualbox.org\/ \"Virtualbox\"), as\u00ed que lo vamos a instalar abriendo nuestro terminal y escribiendo lo siguiente.\n\n [code lang=\"bash\"] sudo apt-get install virtualbox [\/code] Una vez finalizada la instalaci\u00f3n de Virtualbox procedemos a instalar Vagrant escribiendo lo siguiente en nuestro terminal.\n\n [code lang=\"bash\"] sudo apt-get install vagrant [\/code] Ahora vamos a compilar Ruby a partir de su c\u00f3digo fuente, actualmente su versi\u00f3n estable es la 2.1.1. Abrimos nuestro terminal y nos dirigimos a la carpeta de descargas de la siguiente manera.\n\n [code lang=\"bash\"] cd ~\/downloads [\/code] Luego procedemos a descargar la [ultima versi\u00f3n de Ruby](https:\/\/www.ruby-lang.org\/en\/downloads\/ \"Ruby Downloads\"):\n\n [code lang=\"bash\"] wget -v http:\/\/cache.ruby-lang.org\/pub\/ruby\/2.1\/ruby-2.1.1.tar.gz [\/code] Y creamos la carpeta *applications*\n\n [code lang=\"bash\"] mkdir ~\/applications [\/code] Una vez que Ruby descarg\u00f3 por completo, entonces movemos el archivo descargado hacia la carpeta que hemos creado.\n\n [code lang=\"bash\"] mv ~\/downloads\/ruby-2.1.1.tar.gz ~\/applications [\/code] Ingresamos a nuestra nueva carpeta.\n\n [code lang=\"bash\"] cd ~\/applications [\/code] Y descomprimimos el archivo descargado.\n\n [code lang=\"bash\"] tar -zxvf ruby-2.1.1.tar.gz [\/code] Cuando a terminado de descomprimir por completo, ingresamos a la carpeta ***ruby-2.1.1***.\n\n [code lang=\"bash\"] cd ruby-2.1.1 [\/code] Configuramos\n\n [code lang=\"bash\"] .\/configure [\/code] Compilamos\n\n [code lang=\"bash\"] make [\/code] Instalamos\n\n [code lang=\"bash\"] sudo make install [\/code] Por ultimo verificamos que tengamos todo correctamente instalado, primero verificamos la versi\u00f3n de Vagrant.\n\n [code lang=\"bash\"] vagrant -v [\/code] Luego verificamos la versi\u00f3n de Ruby.\n\n [code lang=\"bash\"] ruby -v [\/code] Y finalmente abrimos nuestro Virtualbox.\n\n [code lang=\"bash\"] virtualbox [\/code] Y listo con esto ya tenemos instalado en nuestro Debian Linux **Virtualbox**, **Ruby** y **Vagrant**. Espero que este post les sirva para poder instalar cualquiera de estos 3 paquetes en Debian Linux.\n\n\n","html":"<pre>Hoy vamos a instalar <a title=\"Vagrant\" href=\"http:\/\/www.vagrantup.com\/\" target=\"_blank\"><strong>Vagrant<\/strong><\/a> en nuestro Debian Linux, para esto necesitamos tener instalado previamente <a title=\"Virtualbox\" href=\"https:\/\/www.virtualbox.org\/\" target=\"_blank\"><strong>Virtualbox<\/strong><\/a>, as\u00ed que lo vamos a instalar abriendo nuestro terminal y escribiendo lo siguiente.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\nsudo apt-get install virtualbox\r\n[\/code]\r\n\r\n<pre>Una vez finalizada la instalaci\u00f3n de Virtualbox procedemos a instalar Vagrant escribiendo lo siguiente en nuestro terminal.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\nsudo apt-get install vagrant\r\n[\/code]\r\n\r\n<pre>Ahora vamos a compilar Ruby a partir de su c\u00f3digo fuente, actualmente su versi\u00f3n estable es la 2.1.1.\r\n\r\nAbrimos nuestro terminal y nos dirigimos a la carpeta de descargas de la siguiente manera.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\ncd ~\/downloads\r\n[\/code]\r\n\r\n<pre>Luego procedemos a descargar la <a title=\"Ruby Downloads\" href=\"https:\/\/www.ruby-lang.org\/en\/downloads\/\" target=\"_blank\">ultima versi\u00f3n de Ruby<\/a>:<\/pre>\r\n\r\n[code lang=\"bash\"]\r\nwget -v http:\/\/cache.ruby-lang.org\/pub\/ruby\/2.1\/ruby-2.1.1.tar.gz\r\n[\/code]\r\n\r\n<pre>Y creamos la carpeta <em>applications<\/em><\/pre>\r\n\r\n[code lang=\"bash\"]\r\nmkdir ~\/applications\r\n[\/code]\r\n\r\n<pre>Una vez que Ruby descarg\u00f3 por completo, entonces movemos el archivo descargado hacia la carpeta que hemos creado.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\nmv ~\/downloads\/ruby-2.1.1.tar.gz ~\/applications\r\n[\/code]\r\n\r\n<pre>Ingresamos a nuestra nueva carpeta.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\ncd ~\/applications\r\n[\/code]\r\n\r\n<pre>Y descomprimimos el archivo descargado.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\ntar -zxvf ruby-2.1.1.tar.gz\r\n[\/code]\r\n\r\n<pre>Cuando a terminado de descomprimir por completo, ingresamos a la carpeta <strong><em>ruby-2.1.1<\/em><\/strong>.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\ncd ruby-2.1.1\r\n[\/code]\r\n\r\n<pre>Configuramos<\/pre>\r\n\r\n[code lang=\"bash\"]\r\n.\/configure\r\n[\/code]\r\n\r\n<pre>Compilamos<\/pre>\r\n\r\n[code lang=\"bash\"]\r\nmake\r\n[\/code]\r\n\r\n<pre>Instalamos<\/pre>\r\n\r\n[code lang=\"bash\"]\r\nsudo make install\r\n[\/code]\r\n\r\n<pre>Por ultimo verificamos que tengamos todo correctamente instalado, primero verificamos la versi\u00f3n de Vagrant.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\nvagrant -v\r\n[\/code]\r\n\r\n<pre>Luego verificamos la versi\u00f3n de Ruby.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\nruby -v\r\n[\/code]\r\n\r\n<pre>Y finalmente abrimos nuestro Virtualbox.<\/pre>\r\n\r\n[code lang=\"bash\"]\r\nvirtualbox\r\n[\/code]\r\n\r\n<pre>Y listo con esto ya tenemos instalado en nuestro Debian Linux <strong>Virtualbox<\/strong>, <strong>Ruby<\/strong> y <strong>Vagrant<\/strong>.\r\n\r\nEspero que este post les sirva para poder instalar cualquiera de estos 3 paquetes en Debian Linux.<\/pre>","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/Vagrant-original.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Wed, 23 Apr 2014 04:59:00 +0000","created_by":1,"updated_at":"Wed, 23 Jul 2014 23:47:23 +0000","updated_by":1,"published_at":"Wed, 23 Apr 2014 04:59:00 +0000","published_by":1},{"id":605,"title":"Como hacer un Check All inteligentemente","slug":"como-hacer-un-check-all-inteligentemente","markdown":"\n<span style=\"color: #000000;\">Para hacer un Check All no es necesario hacer un if para validar si el elemento esta con check o no, veamos<\/span><iframe allowfullscreen=\"allowfullscreen\" frameborder=\"0\" height=\"300\" src=\"http:\/\/jsfiddle.net\/erikfloresq\/af4mg\/embedded\/\" width=\"100%\"><\/iframe>Cuando se le bandee al\u00a0<span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">chk-parent<\/span>\u00a0(bindear dice del acto de dar una accion a algo) el click para que arranque la selecci\u00f3n todo los checks que poseen la clase<span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">chk-children<\/span>, aunque tambi\u00e9n podr\u00edamos se\u00f1alar que capture todos los inputs con\u00a0<span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">$('input:checked')<\/span>\n\n<span style=\"font-family: Times, 'Times New Roman', serif;\">Luego, seleccionamos<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0todos los label con\u00a0<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">$<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">(<\/span><span class=\"st0\" style=\"color: #489a1b; font-family: Monaco, Courier, monospace;\">'label'<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">)<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0y dentro de cada uno buscamos los\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">chk-children<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0con\u00a0<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">.<\/span><span class=\"me0\" style=\"color: #666666; font-family: Monaco, Courier, monospace;\">find<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">(<\/span><span class=\"st0\" style=\"color: #489a1b; font-family: Monaco, Courier, monospace;\">'.chk-children'<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">)<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">. <\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">y a eso le colocamos el atributo\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">checked<\/span><span style=\"font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">\u00a0<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">con<\/span><span style=\"font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">\u00a0<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">.<\/span><span class=\"me0\" style=\"color: #666666; font-family: Monaco, Courier, monospace;\">attr<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">(<\/span><span class=\"st0\" style=\"color: #489a1b; font-family: Monaco, Courier, monospace;\">'checked'<\/span><span class=\"sy0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">,<\/span><span class=\"kw1\" style=\"color: #1b609a; font-family: Monaco, Courier, monospace;\">this<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">.<\/span><span class=\"me0\" style=\"color: #666666; font-family: Monaco, Courier, monospace;\">checked<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">) <\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">, el truco es colocar\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">this.checked\u00a0<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">para que este coloque true o false, para que haga la acci\u00f3n solo con una linea de c\u00f3digo si no\u00a0pusi\u00e9ramos\u00a0eso,\u00a0tendr\u00edamos\u00a0que hacer un if para identificar cuando esta seleccionado o no seleccionado, lo que sucede es que con el\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">this<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0hacemos referencia al objeto \u00a0y con el atributo\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">checked<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0me devuelve true o false cosa que cuando hagamos el evento de checked este ya se coloca inmediatamente!<\/span>\n\n\n","html":"<span style=\"color: #000000;\">Para hacer un Check All no es necesario hacer un if para validar si el elemento esta con check o no, veamos<\/span>\r\n\r\n<iframe src=\"http:\/\/jsfiddle.net\/erikfloresq\/af4mg\/embedded\/\" width=\"100%\" height=\"300\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"><\/iframe>\r\n<p style=\"color: #000000;\">Cuando se le bandee al\u00a0<span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">chk-parent<\/span>\u00a0(bindear dice del acto de dar una accion a algo) el click para que arranque la selecci\u00f3n todo los checks que poseen la clase<span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">chk-children<\/span>, aunque tambi\u00e9n podr\u00edamos se\u00f1alar que capture todos los inputs con\u00a0<span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">$('input:checked')<\/span><\/p>\r\n<p style=\"color: #000000;\"><span style=\"font-family: Times, 'Times New Roman', serif;\">Luego, seleccionamos<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0todos los label con\u00a0<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">$<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">(<\/span><span class=\"st0\" style=\"color: #489a1b; font-family: Monaco, Courier, monospace;\">'label'<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">)<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0y dentro de cada uno buscamos los\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">chk-children<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0con\u00a0<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">.<\/span><span class=\"me0\" style=\"color: #666666; font-family: Monaco, Courier, monospace;\">find<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">(<\/span><span class=\"st0\" style=\"color: #489a1b; font-family: Monaco, Courier, monospace;\">'.chk-children'<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">)<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">. <\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">y a eso le colocamos el atributo\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">checked<\/span><span style=\"font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">\u00a0<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">con<\/span><span style=\"font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">\u00a0<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">.<\/span><span class=\"me0\" style=\"color: #666666; font-family: Monaco, Courier, monospace;\">attr<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">(<\/span><span class=\"st0\" style=\"color: #489a1b; font-family: Monaco, Courier, monospace;\">'checked'<\/span><span class=\"sy0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">,<\/span><span class=\"kw1\" style=\"color: #1b609a; font-family: Monaco, Courier, monospace;\">this<\/span><span style=\"color: #333333; font-family: Monaco, Courier, monospace;\">.<\/span><span class=\"me0\" style=\"color: #666666; font-family: Monaco, Courier, monospace;\">checked<\/span><span class=\"br0\" style=\"color: #444444; font-family: Monaco, Courier, monospace;\">) <\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">, el truco es colocar\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">this.checked\u00a0<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">para que este coloque true o false, para que haga la acci\u00f3n solo con una linea de c\u00f3digo si no\u00a0pusi\u00e9ramos\u00a0eso,\u00a0tendr\u00edamos\u00a0que hacer un if para identificar cuando esta seleccionado o no seleccionado, lo que sucede es que con el\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">this<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0hacemos referencia al objeto \u00a0y con el atributo\u00a0<\/span><span style=\"color: #aa7700; font-family: Inconsolata, Monaco, Consolas, 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\">checked<\/span><span style=\"font-family: Times, 'Times New Roman', serif;\">\u00a0me devuelve true o false cosa que cuando hagamos el evento de checked este ya se coloca inmediatamente!<\/span><\/p>","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/checkAll.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":3,"created_at":"Sun, 27 Apr 2014 13:35:33 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:18:48 +0000","updated_by":1,"published_at":"Sun, 27 Apr 2014 13:35:33 +0000","published_by":1},{"id":615,"title":"Compila y actualiza vim bajo linux\/debian","slug":"compila-y-actualiza-vim-bajo-linux-debian","markdown":"\nHola, les traigo este fabuloso articulo tra\u00eddo desde mi [blog](http:\/\/http:\/\/blogdeandru.blogspot.com\/), pero esta vez con un dato adicional, pues quieren saber de qu\u00e9? Pues bien, es f\u00e1cil. En este post indico\u00a0los pasos necesarios para que el editor leyenda llamado VIM funcione inclusive a nivel de consola y te brinde cosas alucinantes como desarrollador o persona natural que eres. OJO, VIM es s\u00f3lo un editor pero con superpoderes. Existen distintas formas de instalar VIM en nuestros ordenadores, una de ellas (creo que es la m\u00e1s adecuada) es compilarlo. Este consiste en\u00a0tomar\u00a0el c\u00f3digo fuente (lo ultimito de su repositorio) y generar el ejecutable listo para instalarlo!. **Pasos para la instalaci\u00f3n de VIM desde su c\u00f3digo fuente** Nota: Estoy bajo una distribuci\u00f3n de linux\/debian que se llama crunchbang y los pasos se llevaran en el terminal. 1. Nos ubicamos en el Home( o simbolo ~) para hacer lo necesario, e instalamos las dependencias: [code lang=\"bash\"] $ sudo apt-get install ncurses-dev build-essential mercurial [\/code] 2. Para tener en claro el repositorio de vim (donde est\u00e1 su c\u00f3digo fuente) est\u00e1 bajo el sistema de versionamiento llamado mercurial y es por eso que realizamos esas descargas, pero hacemos la descarga de otros paquetes adicionales para el soporte de clipboard para vim, sin estos no podr\u00edan funcionar bien para cuando se usa el portapapeles del sistema: [code lang=\"bash\"] $\u00a0sudo apt-get install libx11-dev libxtst-dev xorg-dev [\/code] 3. Ahora viene lo bueno, que es hacer un clon del repositorio de vim en nuestra\u00a0Home [code lang=\"bash\"] ~\u00a0$ hg clone https:\/\/vim.googlecode.com\/hg\/ vim\u00a0 [\/code] 4. Luego de que nos tome unos minutos de haber descargado nos genera una carpeta llamada vim, ingresamos a la carpeta hija llamada src [code lang=\"bash\"] ~\u00a0$ cd vim\/src [\/code] 5. Una vez estando en esa carpeta hacemos una limpieza de la configuraci\u00f3n predeterminada para compilar el codigo. [code lang=\"bash\"] ~\/vim\/src\u00a0$ make distclean [\/code] 6. \u00a0Esta l\u00ednea de comando le indicamos a la configuraci\u00f3n por defecto las cosas adicionales que tenga y generamos nuestro ejecutable: [code lang=\"bash\"] ~\/vim\/src\u00a0$ .\/configure --with-features=huge --enable-pythoninterp --enable-rubyinterp --with-x --enable-gui [\/code] 7. Como punto final ejecutamos lo generado. [code lang=\"bash\"] ~\/vim\/src\u00a0$ sudo make install [\/code] Como punto opcional ejecutamos esta linea para muchos casos poder actualizar la referencia que pudo haber tenido el editor o se haya instalado otro anteriormente\n\n<div class=\"line\"> [code lang=\"bash\"] ~\/vim\/src\u00a0$ export PATH=\/usr\/local\/bin:$PATH [\/code] **Tiempo de actualizaci\u00f3n! **Cuando pasado un tiempo queramos actualizar el vim, podemos hacer lo mismo claro, pero de esta manera: 8. Nos ubicamos en la carpeta vim que se clon\u00f3 [code lang=\"bash\"] ~\u00a0$ cd vim [\/code] 9. Traemos los \u00faltimos cambios con estos comandos [code lang=\"bash\"] ~\/vim\/src\u00a0$ hg pull ~\/vim\/src\u00a0$ hg update [\/code] Y luego seguimos desde el paso 4 al final y tenemos actualizado de manera segura nuestro editor Vim. Nota adicional: Si quieres saber la \u00faltima vez que haz compilado tu editor solo escribes en el terminal lo siguiente [code lang=\"bash\"] ~\u00a0$ vim --version [\/code] Suerte en la compilaci\u00f3n :D\n\n<\/div>\n","html":"Hola, les traigo este fabuloso articulo tra\u00eddo desde mi <a href=\"http:\/\/http:\/\/blogdeandru.blogspot.com\/\">blog<\/a>, pero esta vez con un dato adicional, pues quieren saber de qu\u00e9?\r\n\r\nPues bien, es f\u00e1cil. En este post indico\u00a0los pasos necesarios para que el editor leyenda llamado VIM funcione inclusive a nivel de consola y te brinde cosas alucinantes como desarrollador o persona natural que eres.\r\nOJO, VIM es s\u00f3lo un editor pero con superpoderes.\r\n\r\nExisten distintas formas de instalar VIM en nuestros ordenadores, una de ellas (creo que es la m\u00e1s adecuada) es compilarlo. Este consiste en\u00a0tomar\u00a0el c\u00f3digo fuente (lo ultimito de su repositorio) y generar el ejecutable listo para instalarlo!.\r\n\r\n<strong>Pasos para la instalaci\u00f3n de VIM desde su c\u00f3digo fuente<\/strong>\r\n\r\nNota: Estoy bajo una distribuci\u00f3n de linux\/debian que se llama crunchbang y los pasos se llevaran en el terminal.\r\n\r\n1. Nos ubicamos en el Home( o simbolo ~) para hacer lo necesario, e instalamos las dependencias:\r\n\r\n[code lang=\"bash\"]\r\n$ sudo apt-get install ncurses-dev build-essential mercurial\r\n[\/code]\r\n\r\n2. Para tener en claro el repositorio de vim (donde est\u00e1 su c\u00f3digo fuente) est\u00e1 bajo el sistema de versionamiento llamado mercurial y es por eso que realizamos esas descargas, pero hacemos la descarga de otros paquetes adicionales para el soporte de clipboard para vim, sin estos no podr\u00edan funcionar bien para cuando se usa el portapapeles del sistema:\r\n\r\n[code lang=\"bash\"]\r\n$\u00a0sudo apt-get install libx11-dev libxtst-dev xorg-dev\r\n[\/code]\r\n\r\n3. Ahora viene lo bueno, que es hacer un clon del repositorio de vim en nuestra\u00a0Home\r\n\r\n[code lang=\"bash\"]\r\n~\u00a0$ hg clone https:\/\/vim.googlecode.com\/hg\/ vim\u00a0\r\n[\/code]\r\n\r\n4. Luego de que nos tome unos minutos de haber descargado nos genera una carpeta llamada vim, ingresamos a la carpeta hija llamada src\r\n\r\n[code lang=\"bash\"]\r\n~\u00a0$ cd vim\/src\r\n[\/code]\r\n\r\n5. Una vez estando en esa carpeta hacemos una limpieza de la configuraci\u00f3n predeterminada para compilar el codigo.\r\n\r\n[code lang=\"bash\"]\r\n~\/vim\/src\u00a0$ make distclean\r\n[\/code]\r\n\r\n6. \u00a0Esta l\u00ednea de comando le indicamos a la configuraci\u00f3n por defecto las cosas adicionales que tenga y generamos nuestro ejecutable:\r\n\r\n[code lang=\"bash\"]\r\n~\/vim\/src\u00a0$ .\/configure --with-features=huge --enable-pythoninterp --enable-rubyinterp --with-x --enable-gui\r\n[\/code]\r\n\r\n7. Como punto final ejecutamos lo generado.\r\n\r\n[code lang=\"bash\"]\r\n~\/vim\/src\u00a0$ sudo make install\r\n[\/code]\r\n\r\nComo punto opcional ejecutamos esta linea para muchos casos poder actualizar la referencia que pudo haber tenido el editor o se haya instalado otro anteriormente\r\n<div class=\"line\">\r\n\r\n[code lang=\"bash\"]\r\n~\/vim\/src\u00a0$ export PATH=\/usr\/local\/bin:$PATH\r\n[\/code]\r\n\r\n<strong>Tiempo de actualizaci\u00f3n!\r\n<\/strong>Cuando pasado un tiempo queramos actualizar el vim, podemos hacer lo mismo claro, pero de esta manera:\r\n\r\n8. Nos ubicamos en la carpeta vim que se clon\u00f3\r\n\r\n[code lang=\"bash\"]\r\n~\u00a0$ cd vim\r\n[\/code]\r\n\r\n9. Traemos los \u00faltimos cambios con estos comandos\r\n\r\n[code lang=\"bash\"]\r\n~\/vim\/src\u00a0$ hg pull\r\n~\/vim\/src\u00a0$ hg update\r\n[\/code]\r\n\r\nY luego seguimos desde el paso 4 al final y tenemos actualizado de manera segura nuestro editor Vim.\r\n\r\nNota adicional:\r\nSi quieres saber la \u00faltima vez que haz compilado tu editor solo escribes en el terminal lo siguiente\r\n\r\n[code lang=\"bash\"]\r\n~\u00a0$ vim --version\r\n[\/code]\r\n\r\n<pre>Suerte en la compilaci\u00f3n :D<\/pre>\r\n<pre><\/pre>\r\n<\/div>","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/04\/vim.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":5,"created_at":"Tue, 29 Apr 2014 04:13:27 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:22:01 +0000","updated_by":1,"published_at":"Tue, 29 Apr 2014 04:13:27 +0000","published_by":1},{"id":678,"title":"CSS Display inline-block: eliminar espacios generados en li","slug":"css-display-inline-block-eliminar-espacios-generados-en-li","markdown":"\nEsta peculiar situaci\u00f3n me paso cuando deje de usar los \"**float:left**\" y cambie a \"**display:inline-block**\" ignorando los problemitas que me fuera a ocasionar, pero a la vez celebrando las ventajas que me diera sobre la propiedad \"**float**\" ,\u00a0 la primera desventaja que vi fue al colocar a mis listas ese atributo \"inline-block\" fue que me generaba espacio entre ellos, busque tantas soluciones y mi favorita fue esta: *Jugar con el tama\u00f1o de fuente \"**font-size**\" d\u00e1ndole \"**0**\" al contenedor padre, y coloc\u00e1ndo el tama\u00f1o de fuente requerido a los hijos. [code lang=\"css\"] ul \u00a0\u00a0 font-size 0 li display inline-block font-size 16px [\/code] Para entender mejor mostrar\u00e9 unos ejemplos breves:\n\nBotones: nav ul li\n------------------\n\n[![botones](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/Captura-de-pantalla-2014-05-06-a-las-16.12.32.png)](http:\/\/codepen.io\/xiocaro\/pen\/wigvG?editors=110) 1. Generamos nuestra maqueta en [Jade](http:\/\/jade-lang.com\/): [code lang=\"ruby\"] nav \u00a0 ul \u00a0\u00a0\u00a0\u00a0 li \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a(href=\"javascript:;\" , title=\"bot\u00f3n 1\") bot\u00f3n 1 \u00a0\u00a0\u00a0\u00a0 li \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a(href=\"javascript:;\" , title=\"bot\u00f3n 2\") bot\u00f3n 2 li \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a(href=\"javascript:;\" , title=\"bot\u00f3n 3\") bot\u00f3n 3 \u00a0\u00a0\u00a0\u00a0 li \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a(href=\"javascript:;\" , title=\"bot\u00f3n 4\") bot\u00f3n 4 [\/code] 2. Los estilos que usaremos son: [code lang=\"css\"] nav ul font-size 0 padding 0 li display inline-block font-size 16px line-height 17px text-align center width 25% a background gray border-radius 5px color #fff padding 5px 20px text-decoration none &:hover background #028b9b [\/code] Contenidos: ul li\n-----------------\n\n[![contenidos](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/Captura-de-pantalla-2014-05-06-a-las-16.14.24.png)](http:\/\/codepen.io\/xiocaro\/pen\/wigvG?editors=110) 1. Generamos nuestra maqueta en [Jade](http:\/\/jade-lang.com\/): [code lang=\"ruby\"] article ul li p Si un problema tiene soluci\u00f3n, no hace falta preocuparse. Si no tiene soluci\u00f3n, preocuparse no sirve de nada. li p Si un d\u00eda te sientes in\u00fatil y deprimido\u2026 \u00a1\u00a1\u00a1recuerda que fuiste el espermatozoide m\u00e1s veloz de todos\u2026!!! li p Nos preguntamos \u00bfqui\u00e9n me he cre\u00eddo para ser brillante, espl\u00e9ndido, talentoso, sensacional?, pero en realidad \u00bfqui\u00e9nes nos hemos cre\u00eddo para no serlo?. li p Tienes toda la vida por delante para pulir defectos, y toda la vida por detr\u00e1s para acumular virtudes. [\/code] 2. Los estilos que usaremos son: [code lang=\"css\"] article ul font-size 0 padding 0 li box-sizing border-box -moz-box-sizing border-box -webkit-box-sizing border-box display inline-block font-size 16px line-height 18px padding 10px text-align center vertical-align top width 25% min-width 200px p background url(\"PaperTexture-2.jpg\") #E1C07D border-radius 10px box-sizing border-box -moz-box-sizing border-box -webkit-box-sizing border-box margin 0 padding 20px &:hover box-shadow 0 2px 4px #333 [\/code] Contenidos de im\u00e1genes: ul li img\n---------------------------------\n\n[![contenidos imagenes](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/Captura-de-pantalla-2014-05-06-a-las-16.15.38.png)](http:\/\/codepen.io\/xiocaro\/pen\/wigvG?editors=110) 1. Generamos nuestra maqueta en [Jade](http:\/\/jade-lang.com\/) similar a las anteriores: [code lang=\"ruby\"] article ul li img(src=\"image1.jpeg\", alt=\"xio\") li img(src=\"image2.jpg\", alt=\"xio\") li img(src=\"image3.jpg\", alt=\"xio\") li img(src=\"image4.jpg\", alt=\"xio\") [\/code] 2. Los estilos que agregaremos a lo que ya tenemos son para \"**img**\" : [code lang=\"css\"] article ul li img border 5px solid #fff box-shadow 0 2px 4px #333 height auto width 80% [\/code] *Para terminar de entender y poner a prueba estos ejemplos les dejo este [link](http:\/\/codepen.io\/xiocaro\/pen\/wigvG?editors=110). See the Pen [Css Display inline-block ](http:\/\/codepen.io\/xiocaro\/pen\/wigvG\/) by Xio ([@xiocaro](http:\/\/codepen.io\/xiocaro)) on [CodePen](http:\/\/codepen.io).\n\n<script async=\"\" src=\"\/\/codepen.io\/assets\/embed\/ei.js\"><\/script>\n","html":"Esta peculiar situaci\u00f3n me paso cuando deje de usar los \"<strong style=\"color: #d08770;\">float:left<\/strong>\" y cambie a \"<strong style=\"color: #d08770;\">display:inline-block<\/strong>\" ignorando los problemitas que me fuera a ocasionar, pero a la vez celebrando las ventajas que me diera sobre la propiedad \"<strong style=\"color: #d08770;\">float<\/strong>\" ,\u00a0 la primera desventaja que vi fue al colocar a mis listas ese atributo \"inline-block\" fue que me generaba espacio entre ellos, busque tantas soluciones y mi favorita fue esta:\r\n\r\n*Jugar con el tama\u00f1o de fuente \"<strong style=\"color: #d08770;\">font-size<\/strong>\" d\u00e1ndole \"<strong style=\"color: #d08770;\">0<\/strong>\" al contenedor padre, y coloc\u00e1ndo el tama\u00f1o de fuente requerido a los hijos.\r\n\r\n[code lang=\"css\"]\r\n\r\nul\r\n\u00a0\u00a0 font-size 0\r\n   li\r\n     display inline-block\r\n     font-size 16px\r\n\r\n[\/code]\r\n\r\nPara entender mejor mostrar\u00e9 unos ejemplos breves:\r\n<h2 style=\"color: #d08770;\">Botones: nav ul li<\/h2>\r\n<a href=\"http:\/\/codepen.io\/xiocaro\/pen\/wigvG?editors=110\" target=\"_blank\"><img class=\"alignnone size-full wp-image-690\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/Captura-de-pantalla-2014-05-06-a-las-16.12.32.png\" alt=\"botones\" width=\"720\" height=\"50\" \/><\/a>\r\n\r\n1. Generamos nuestra maqueta en <a href=\"http:\/\/jade-lang.com\/\" target=\"_blank\">Jade<\/a>:\r\n\r\n[code lang=\"ruby\"]\r\n\r\nnav\r\n\u00a0  ul\r\n\u00a0\u00a0\u00a0\u00a0 li\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a(href=&quot;javascript:;&quot; , title=&quot;bot\u00f3n 1&quot;) bot\u00f3n 1\r\n\u00a0\u00a0\u00a0\u00a0 li\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a(href=&quot;javascript:;&quot; , title=&quot;bot\u00f3n 2&quot;) bot\u00f3n 2\r\n     li\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a(href=&quot;javascript:;&quot; , title=&quot;bot\u00f3n 3&quot;) bot\u00f3n 3\r\n\u00a0\u00a0\u00a0\u00a0 li\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a(href=&quot;javascript:;&quot; , title=&quot;bot\u00f3n 4&quot;) bot\u00f3n 4\r\n\r\n[\/code]\r\n\r\n2. Los estilos que usaremos son:\r\n\r\n[code lang=\"css\"]\r\nnav\r\n  ul\r\n    font-size 0\r\n    padding 0\r\n    li\r\n      display inline-block\r\n      font-size 16px\r\n      line-height 17px\r\n      text-align center\r\n      width 25%\r\n      a\r\n        background gray\r\n        border-radius 5px\r\n        color #fff\r\n        padding 5px 20px\r\n        text-decoration none\r\n        &amp;:hover\r\n          background #028b9b\r\n\r\n[\/code]\r\n\r\n<h2 style=\"color: #d08770;\">Contenidos: ul li<\/h2>\r\n<a href=\"http:\/\/codepen.io\/xiocaro\/pen\/wigvG?editors=110\" target=\"_blank\"><img class=\"alignnone size-full wp-image-692\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/Captura-de-pantalla-2014-05-06-a-las-16.14.24.png\" alt=\"contenidos\" width=\"720\" height=\"293\" \/><\/a>\r\n\r\n1. Generamos nuestra maqueta en <a href=\"http:\/\/jade-lang.com\/\" target=\"_blank\">Jade<\/a>:\r\n\r\n[code lang=\"ruby\"]\r\n\r\narticle\r\n   ul\r\n     li\r\n       p Si un problema tiene soluci\u00f3n, no hace falta preocuparse. Si no\r\n         tiene soluci\u00f3n, preocuparse no sirve de nada.\r\n     li\r\n       p Si un d\u00eda te sientes in\u00fatil y deprimido\u2026 \u00a1\u00a1\u00a1recuerda que fuiste\r\n         el espermatozoide m\u00e1s veloz de todos\u2026!!!\r\n     li\r\n       p Nos preguntamos \u00bfqui\u00e9n me he cre\u00eddo para ser brillante,\r\n         espl\u00e9ndido, talentoso, sensacional?, pero en realidad \u00bfqui\u00e9nes\r\n         nos hemos cre\u00eddo para no serlo?.\r\n     li\r\n       p Tienes toda la vida por delante para pulir defectos, y toda la\r\n         vida por detr\u00e1s para acumular virtudes.\r\n\r\n[\/code]\r\n\r\n2. Los estilos que usaremos son:\r\n\r\n[code lang=\"css\"]\r\narticle\r\n  ul\r\n    font-size 0\r\n    padding 0\r\n    li\r\n      box-sizing border-box\r\n      -moz-box-sizing border-box\r\n      -webkit-box-sizing border-box\r\n      display inline-block\r\n      font-size 16px\r\n      line-height 18px\r\n      padding 10px\r\n      text-align center\r\n      vertical-align top\r\n      width 25%\r\n      min-width 200px\r\n      p\r\n        background url(&quot;PaperTexture-2.jpg&quot;) #E1C07D\r\n        border-radius 10px\r\n        box-sizing border-box\r\n        -moz-box-sizing border-box\r\n        -webkit-box-sizing border-box\r\n        margin 0\r\n        padding 20px\r\n        &amp;:hover\r\n          box-shadow 0 2px 4px #333\r\n\r\n[\/code]\r\n\r\n<h2 style=\"color: #d08770;\">Contenidos de im\u00e1genes: ul li img<\/h2>\r\n<a href=\"http:\/\/codepen.io\/xiocaro\/pen\/wigvG?editors=110\" target=\"_blank\"><img class=\"alignnone size-full wp-image-695\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/Captura-de-pantalla-2014-05-06-a-las-16.15.38.png\" alt=\"contenidos imagenes\" width=\"720\" height=\"144\" \/><\/a>\r\n\r\n1. Generamos nuestra maqueta en <a href=\"http:\/\/jade-lang.com\/\" target=\"_blank\">Jade<\/a> similar a las anteriores:\r\n\r\n[code lang=\"ruby\"]\r\narticle\r\n   ul\r\n     li\r\n       img(src=&quot;image1.jpeg&quot;, alt=&quot;xio&quot;)\r\n     li\r\n       img(src=&quot;image2.jpg&quot;, alt=&quot;xio&quot;)\r\n     li\r\n       img(src=&quot;image3.jpg&quot;, alt=&quot;xio&quot;)\r\n     li\r\n       img(src=&quot;image4.jpg&quot;, alt=&quot;xio&quot;)\r\n[\/code]\r\n\r\n2. Los estilos que agregaremos a lo que ya tenemos son para \"<strong style=\"color: #d08770;\">img<\/strong>\" :\r\n\r\n[code lang=\"css\"]\r\narticle\r\n  ul\r\n    li\r\n      img\r\n        border 5px solid #fff\r\n        box-shadow 0 2px 4px #333\r\n        height auto\r\n        width 80%\r\n\r\n[\/code]\r\n\r\n*Para terminar de entender y poner a prueba estos ejemplos les dejo este <a href=\"http:\/\/codepen.io\/xiocaro\/pen\/wigvG?editors=110\" target=\"_blank\">link<\/a>.\r\n<p class=\"codepen\" data-height=\"368\" data-theme-id=\"0\" data-slug-hash=\"wigvG\" data-default-tab=\"result\">See the Pen <a href=\"http:\/\/codepen.io\/xiocaro\/pen\/wigvG\/\">Css Display inline-block <\/a> by Xio (<a href=\"http:\/\/codepen.io\/xiocaro\">@xiocaro<\/a>) on <a href=\"http:\/\/codepen.io\">CodePen<\/a>.<\/p>\r\n<script src=\"\/\/codepen.io\/assets\/embed\/ei.js\" async=\"\"><\/script>","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/xio_inline.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":9,"created_at":"Tue, 06 May 2014 20:05:30 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:23:43 +0000","updated_by":1,"published_at":"Tue, 06 May 2014 20:05:30 +0000","published_by":1},{"id":709,"title":"Como usar la propiedad Clip en CSS","slug":"como-usar-la-propiedad-clip-en-css","markdown":"\nLa propiedad Clip es muy interesante pero no veo que mucha gente lo use y es muy raro ya que esta propiedad esta desde CSS 2.1. Clip es una mascara que se le puede colocar a un elemento, en especial a una imagen que es donde se logra ver mejor el efecto. Para poder usar Clip se tiene que tener la siguiente l\u00ednea de c\u00f3digo: [code type=\"javascript\"] img.foto{ position: absolute; top : 5px; left: 5px; clip : rect(90px;300px;180px;100px); } [\/code] Se tiene que tener en cuenta que: - Al elemento que se le aplica el clip tiene que tener posici\u00f3n absoluta. - Definir como aplicar el Clip seg\u00fan a un conjunto de coordenadas que pueden ser en px, %, em , etc. Si tu colocas [code type=\"javascript\"] clip : rect(20px;300px;180px;100px); [\/code] A nivel gr\u00e1fico equivale a esto\n\n\u00a0[![Ejemplo Clip](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/clipExample.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/clipExample.png) Hasta ahi ya es muy \u00fatil esta propiedad, pero adem\u00e1s funciona muy bien cuando le agregamos animate de css3\n\nSee the Pen [Clip With CSS3](http:\/\/codepen.io\/erikfloresq\/pen\/DIjga\/) by Erik Flores ([@erikfloresq](http:\/\/codepen.io\/erikfloresq)) on [CodePen](http:\/\/codepen.io).\n\n<script async=\"\" src=\"\/\/codepen.io\/assets\/embed\/ei.js\"><\/script> Como se vio en el ejemplo anterior solo fue cosa de cambiar las coordenadas de la mascara al momento de hacer hover, para que el clip se anime de una manera m\u00e1s que vistosa.\n","html":"La propiedad Clip es muy interesante pero no veo que mucha gente lo use y es muy raro ya que esta propiedad esta desde CSS 2.1.\r\n\r\nClip es una mascara que se le puede colocar a un elemento, en especial a una imagen que es donde se logra ver mejor el efecto.\r\n\r\nPara poder usar Clip se tiene que tener la siguiente l\u00ednea de c\u00f3digo:\r\n\r\n[code type=\"javascript\"]\r\nimg.foto{\r\n  position: absolute;\r\n  top : 5px;\r\n  left: 5px;\r\n  clip : rect(90px;300px;180px;100px);\r\n}\r\n[\/code]\r\n\r\nSe tiene que tener en cuenta que:\r\n- Al elemento que se le aplica el clip tiene que tener posici\u00f3n absoluta.\r\n- Definir como aplicar el Clip seg\u00fan a un conjunto de coordenadas que pueden ser en px, %, em , etc.\r\n\r\nSi tu colocas\r\n\r\n[code type=\"javascript\"]\r\n  clip : rect(20px;300px;180px;100px);\r\n[\/code]\r\n\r\nA nivel gr\u00e1fico equivale a esto\r\n<pre>\u00a0<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/clipExample.png\"><img class=\"alignnone size-full wp-image-713\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/clipExample.png\" alt=\"Ejemplo Clip\" width=\"418\" height=\"345\" \/><\/a>\r\n\r\nHasta ahi ya es muy \u00fatil esta propiedad, pero adem\u00e1s funciona muy bien cuando le agregamos animate de css3\r\n\r\n<\/pre>\r\n<p class=\"codepen\" data-height=\"268\" data-theme-id=\"0\" data-slug-hash=\"DIjga\" data-default-tab=\"result\">See the Pen <a href=\"http:\/\/codepen.io\/erikfloresq\/pen\/DIjga\/\">Clip With CSS3<\/a> by Erik Flores (<a href=\"http:\/\/codepen.io\/erikfloresq\">@erikfloresq<\/a>) on <a href=\"http:\/\/codepen.io\">CodePen<\/a>.<\/p>\r\n<script src=\"\/\/codepen.io\/assets\/embed\/ei.js\" async=\"\"><\/script>\r\n\r\nComo se vio en el ejemplo anterior solo fue cosa de cambiar las coordenadas de la mascara al momento de hacer hover, para que el clip se anime de una manera m\u00e1s que vistosa.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/05\/clipExamplebanner.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":3,"created_at":"Wed, 07 May 2014 14:22:35 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:23:12 +0000","updated_by":1,"published_at":"Wed, 07 May 2014 14:22:35 +0000","published_by":1},{"id":779,"title":"Consejos b\u00e1sicos usando Git","slug":"consejos-basicos-git-tutorial-espanol-ejemplos","markdown":"\n[Git](http:\/\/git-scm.com\/ \"Git\") es un **sistema de control de versiones distribuido** dise\u00f1ado para manejar todo tipo de proyectos, desde peque\u00f1os hasta muy grandes con gran velocidad y eficiencia. Y por si fuera poco es libre y de c\u00f3digo abierto. A continuaci\u00f3n veremos\u00a0algunas buenas pr\u00e1cticas al usar Git: **1. Haz git pull con frecuencia**\n----------------------------------\n\n Una de las mejores pr\u00e1cticas al utilizar un sistema de control de versiones es **mantener nuestros archivos sincronizados**. Para lograr esto debes hacer **git pull** frecuentemente. Con esto\u00a0mantendr\u00e1s tu\u00a0repositorio al d\u00eda y tendr\u00e1s la oportunidad de combinar\u00a0tu\u00a0archivos modificados con los cambios recientes de los dem\u00e1s, esto har\u00e1 que la fusi\u00f3n(merge) sea m\u00e1s f\u00e1cil de entender y llevar a cabo. Para que esta pr\u00e1ctica logre su objetivo deber\u00e1s contar con el apoyo y compromiso de tu equipo de desarrollo, para de esta forma mitigar los conflictos entre archivos. **2.\u00a0Escribe tus commits como te gustar\u00eda que los dem\u00e1s escriban los suyos**\n----------------------------------------------------------------------------\n\n Me imagino que no te gustar\u00eda, ni servir\u00eda tener un proyecto de desarrollo con **commits** como estos no? [![bad commits](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/coomits.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/coomits.png) Por eso al escribir el mensaje\u00a0de un commit(confirmaci\u00f3n de cambios) **debemos\u00a0de especificar \u00a0una descripci\u00f3n real del cambio **o la tarea que hemos realizado, pensando en las personas que revisar\u00e1n el repositorio y pensando tambi\u00e9n en nosotros mismos y como queremos ver los commits en nuestro proyecto. No por un tema est\u00e9tico, sino cuando necesitemos realizar alg\u00fan cambio o retirar alguna tarea realizada en el proyecto, simplemente buscamos el commit y no tenemos que estar buscando en\u00a0todo el proyecto\u00a0para encontrar el c\u00f3digo de la funcionalidad, **ya que\u00a0ese commit bien descrito nos dir\u00e1 cuales son los archivos involucrados**. Tal vez puedes comenzar a aplicar esto poni\u00e9ndote un limite de palabras m\u00ednimas para un mensaje de commit como por ejemplo: **3**. **3. Haz un commit s\u00f3lo cuando tengas un cambio concreto**\n----------------------------------------------------------\n\n Un commit es una actualizaci\u00f3n granular a un proyecto,** que puede incluir uno o m\u00e1s cambios en uno o m\u00e1s archivos**. Piensen en\u00a0esto como si fuese **el registro de una unidad de trabajo realizado**, que puede ser aplicado o puede ser retirado del proyecto como un **todo l\u00f3gico**. De manera que cuando\u00a0hagamos\u00a0un commit **estamos indicando que ese commit es por un cambio o una tarea en concreto**, de esta forma imag\u00ednense si en determinado caso realizamos una tarea que involucr\u00f3 3\u00a0archivos, ese commit registrar\u00e1 todos los cambios para esa tarea. Entonces si en un futuro quisi\u00e9ramos retirar ese cambio podr\u00edamos f\u00e1cilmente regresar a ese commit y quitar esos cambios en los archivos espec\u00edficos. Es una buena pr\u00e1ctica que trae muchos beneficios pero obviamente hay casos en los que tal vez no sea posible realizarla, **a continuaci\u00f3n una propuesta** de como realizar los commits en nuestro proyecto: [![commits](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/commits.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/commits.png) Como podemos observar en nuestra propuesta: a) Escribimos\u00a0la **secci\u00f3n principal** donde se hizo el cambio seguido de 2\u00a0puntos(:). b) Luego de los 2\u00a0puntos escribimos nuestro **shortlog**\u00a0o titulo del commit. De esta forma podemos tener un commit m\u00e1s descriptivo, creanme que les ayudar\u00e1 mucho en sus proyectos de desarrollo. **4. Haz git push s\u00f3lo si los cambios que enviar\u00e1s han sido testeados**\n-----------------------------------------------------------------------\n\n Cuando hacemos un git push enviamos nuestros commits al servidor. Al\u00a0realizar esto debemos estar seguros que nuestros cambios o la tarea realizada no tiene bugs \u00f3 al menos debemos haberlo testeado lo suficiente para evitar subir errores al servidor. Esta buena pr\u00e1ctica\u00a0nos ayuda en muchos sentidos, uno muy importante es que al realizarla **nos acostumbramos a validar en local antes de cada push**, y si llegamos a encontrar alg\u00fan error en nuestra tarea volvemos a hacer el commit con la correcci\u00f3n y si todo esta bien\u00a0entonces hacemos un push. Con esto tendremos un registro de Git m\u00e1s limpio, ya que una funcionalidad o tarea especifica siempre estar\u00e1 registrada en uno o pocos commits y estos estar\u00e1n juntos,\u00a0de esta forma nos ser\u00e1 muy f\u00e1cil identificar los cambios para esta tarea, aunque haya tenido algunas correcciones porque todo estar\u00e1 agrupado en un mismo bloque de cambios. **5.\u00a0Crea ramas para separar tareas**\n-------------------------------------\n\n Una de las mayores ventajas de Git tiene sobre otros sistemas de control de versiones es que la fusi\u00f3n(merge) por lo general funciona bien, debido a que **Git elige autom\u00e1ticamente el mejor ancestro com\u00fan para realizar una fusi\u00f3n**. Es una buena pr\u00e1ctica **crear ramas locales**, de esta forma podemos trabajar funcionalidades independientemente y una vez terminado nuestro trabajo en esta rama la fusionamos con la rama principal de nuestro proyecto. Por lo general estas fusiones **son m\u00e1s limpias y no presentan ning\u00fan problema insuperable**. Si te interesaron estos consejos y quieres saber m\u00e1s sobre Git puedes pasar por el siguiente post: [Comandos Git que no debes dejar de usar](http:\/\/frontend-labs.com\/885--comandos-git-que-no-debes-dejar-de-usar-tutorial-espanol \"Comandos Git que no debes dejar de usar\"). Este post seguir\u00e1 creciendo seg\u00fan vaya encontrando m\u00e1s buenas pr\u00e1cticas que aplicar con\u00a0Git, si me pueden comentar algunas buenas pr\u00e1cticas tambi\u00e9n las puedo ir agregando, pronto har\u00e9 un post sobre comandos b\u00e1sicos con\u00a0Git. Si desean que hagamos\u00a0un post sobre alg\u00fan tema en especial, escr\u00edbannos a [code@frontend-labs.com](mailto:code@frontend-labs.com \"code@frontend-labs.com\"), hasta la pr\u00f3xima. \u00a0\n","html":"<a title=\"Git\" href=\"http:\/\/git-scm.com\/\" target=\"_blank\">Git<\/a> es un <strong>sistema de control de versiones distribuido<\/strong> dise\u00f1ado para manejar todo tipo de proyectos, desde peque\u00f1os hasta muy grandes con gran velocidad y eficiencia.\r\nY por si fuera poco es libre y de c\u00f3digo abierto.\r\n\r\nA continuaci\u00f3n veremos\u00a0algunas buenas pr\u00e1cticas al usar Git:\r\n<h2><strong>1. Haz git pull con frecuencia<\/strong><\/h2>\r\nUna de las mejores pr\u00e1cticas al utilizar un sistema de control de versiones es <strong>mantener nuestros archivos sincronizados<\/strong>. Para lograr esto debes hacer <strong>git pull<\/strong> frecuentemente.\r\n\r\nCon esto\u00a0mantendr\u00e1s tu\u00a0repositorio al d\u00eda y tendr\u00e1s la oportunidad de combinar\u00a0tu\u00a0archivos modificados con los cambios recientes de los dem\u00e1s, esto har\u00e1 que la fusi\u00f3n(merge) sea m\u00e1s f\u00e1cil de entender y llevar a cabo.\r\n\r\nPara que esta pr\u00e1ctica logre su objetivo deber\u00e1s contar con el apoyo y compromiso de tu equipo de desarrollo, para de esta forma mitigar los conflictos entre archivos.\r\n<h2><strong>2.\u00a0Escribe tus commits como te gustar\u00eda que los dem\u00e1s escriban los suyos<\/strong><\/h2>\r\nMe imagino que no te gustar\u00eda, ni servir\u00eda tener un proyecto de desarrollo con <strong>commits<\/strong> como estos no?\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/coomits.png\"><img class=\"aligncenter size-full wp-image-801\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/coomits.png\" alt=\"bad commits\" width=\"572\" height=\"266\" \/><\/a>\r\n\r\nPor eso al escribir el mensaje\u00a0de un commit(confirmaci\u00f3n de cambios) <strong>debemos\u00a0de especificar \u00a0una descripci\u00f3n real del cambio <\/strong>o la tarea que hemos realizado, pensando en las personas que revisar\u00e1n el repositorio y pensando tambi\u00e9n en nosotros mismos y como queremos ver los commits en nuestro proyecto.\r\n\r\nNo por un tema est\u00e9tico, sino cuando necesitemos realizar alg\u00fan cambio o retirar alguna tarea realizada en el proyecto, simplemente buscamos el commit y no tenemos que estar buscando en\u00a0todo el proyecto\u00a0para encontrar el c\u00f3digo de la funcionalidad, <strong>ya que\u00a0ese commit bien descrito nos dir\u00e1 cuales son los archivos involucrados<\/strong>.\r\n\r\nTal vez puedes comenzar a aplicar esto poni\u00e9ndote un limite de palabras m\u00ednimas para un mensaje de commit como por ejemplo: <strong>3<\/strong>.\r\n<h2><strong>3. Haz un commit s\u00f3lo cuando tengas un cambio concreto<\/strong><\/h2>\r\nUn commit es una actualizaci\u00f3n granular a un proyecto,<strong> que puede incluir uno o m\u00e1s cambios en uno o m\u00e1s archivos<\/strong>.\r\nPiensen en\u00a0esto como si fuese <strong>el registro de una unidad de trabajo realizado<\/strong>, que puede ser aplicado o puede ser retirado del proyecto como un <strong>todo l\u00f3gico<\/strong>.\r\n\r\nDe manera que cuando\u00a0hagamos\u00a0un commit <strong>estamos indicando que ese commit es por un cambio o una tarea en concreto<\/strong>, de esta forma imag\u00ednense si en determinado caso realizamos una tarea que involucr\u00f3 3\u00a0archivos, ese commit registrar\u00e1 todos los cambios para esa tarea.\r\n\r\nEntonces si en un futuro quisi\u00e9ramos retirar ese cambio podr\u00edamos f\u00e1cilmente regresar a ese commit y quitar esos cambios en los archivos espec\u00edficos.\r\n\r\nEs una buena pr\u00e1ctica que trae muchos beneficios pero obviamente hay casos en los que tal vez no sea posible realizarla, <strong>a continuaci\u00f3n una propuesta<\/strong> de como realizar los commits en nuestro proyecto:\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/commits.png\"><img class=\"aligncenter size-full wp-image-1051\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/commits.png\" alt=\"commits\" width=\"524\" height=\"43\" \/><\/a>\r\n\r\nComo podemos observar en nuestra propuesta:\r\n\r\na) Escribimos\u00a0la <strong>secci\u00f3n principal<\/strong> donde se hizo el cambio seguido de 2\u00a0puntos(:).\r\nb) Luego de los 2\u00a0puntos escribimos nuestro <strong>shortlog<\/strong>\u00a0o titulo del commit.\r\n\r\nDe esta forma podemos tener un commit m\u00e1s descriptivo, creanme que les ayudar\u00e1 mucho en sus proyectos de desarrollo.\r\n<h2><strong>4. Haz git push s\u00f3lo si los cambios que enviar\u00e1s han sido testeados<\/strong><\/h2>\r\nCuando hacemos un git push enviamos nuestros commits al servidor. Al\u00a0realizar esto debemos estar seguros que nuestros cambios o la tarea realizada no tiene bugs \u00f3 al menos debemos haberlo testeado lo suficiente para evitar subir errores al servidor.\r\n\r\nEsta buena pr\u00e1ctica\u00a0nos ayuda en muchos sentidos, uno muy importante es que al realizarla <strong>nos acostumbramos a validar en local antes de cada push<\/strong>, y si llegamos a encontrar alg\u00fan error en nuestra tarea volvemos a hacer el commit con la correcci\u00f3n y si todo esta bien\u00a0entonces hacemos un push.\r\n\r\nCon esto tendremos un registro de Git m\u00e1s limpio, ya que una funcionalidad o tarea especifica siempre estar\u00e1 registrada en uno o pocos commits y estos estar\u00e1n juntos,\u00a0de esta forma nos ser\u00e1 muy f\u00e1cil identificar los cambios para esta tarea, aunque haya tenido algunas correcciones porque todo estar\u00e1 agrupado en un mismo bloque de cambios.\r\n<h2><strong>5.\u00a0Crea ramas para separar tareas<\/strong><\/h2>\r\nUna de las mayores ventajas de Git tiene sobre otros sistemas de control de versiones es que la fusi\u00f3n(merge) por lo general funciona bien, debido a que <strong>Git elige autom\u00e1ticamente el mejor ancestro com\u00fan para realizar una fusi\u00f3n<\/strong>.\r\n\r\nEs una buena pr\u00e1ctica <strong>crear ramas locales<\/strong>, de esta forma podemos trabajar funcionalidades independientemente y una vez terminado nuestro trabajo en esta rama la fusionamos con la rama principal de nuestro proyecto. Por lo general estas fusiones <strong>son m\u00e1s limpias y no presentan ning\u00fan problema insuperable<\/strong>.\r\n\r\nSi te interesaron estos consejos y quieres saber m\u00e1s sobre Git puedes pasar por el siguiente post: <a title=\"Comandos Git que no debes dejar de usar\" href=\"http:\/\/frontend-labs.com\/885--comandos-git-que-no-debes-dejar-de-usar-tutorial-espanol\" target=\"_blank\">Comandos Git que no debes dejar de usar<\/a>.\r\n\r\nEste post seguir\u00e1 creciendo seg\u00fan vaya encontrando m\u00e1s buenas pr\u00e1cticas que aplicar con\u00a0Git, si me pueden comentar algunas buenas pr\u00e1cticas tambi\u00e9n las puedo ir agregando, pronto har\u00e9 un post sobre comandos b\u00e1sicos con\u00a0Git.\r\n\r\nSi desean que hagamos\u00a0un post sobre alg\u00fan tema en especial, escr\u00edbannos a <a title=\"code@frontend-labs.com\" href=\"mailto:code@frontend-labs.com\">code@frontend-labs.com<\/a>, hasta la pr\u00f3xima.\r\n\r\n&nbsp;","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/git-1.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Sat, 07 Jun 2014 01:06:37 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:29:25 +0000","updated_by":1,"published_at":"Sat, 07 Jun 2014 01:06:37 +0000","published_by":1},{"id":755,"title":"Iconos como fuente de letra con Grunt JS y Grunt Webfont","slug":"iconos-como-fuente-de-letra-con-grunt-js-y-grunt-webfont","markdown":"\nSituaci\u00f3n\n---------\n\n Como vemos hoy en d\u00eda para brindar mejor experiencia, usabilidad y estilo a una pagina web se usan iconos que facilitan al usuario entender la informaci\u00f3n mas f\u00e1cilmente. Nosotros, como desarrolladores, usualmente guardamos estos iconos en una imagen PNG ([sprite](http:\/\/www.w3schools.com\/css\/css_image_sprites.asp \"Sprite\")) donde luego ser\u00e1n llamados por medio de estilos CSS, pero **\u00bfQu\u00e9 sucede cuando vemos que se usa el mismo estilo de icono con diferente color o tama\u00f1o?** Usualmente lo ponemos en el mismo archivo PNG (icon-set.png) generando m\u00e1s peso y tama\u00f1o del mismo. Esto es un problema ya que le estar\u00edamos quitando velocidad de carga a la pagina. Soluci\u00f3n\n--------\n\n La mejor t\u00e9cnica es guardar estos iconos como archivo de fuente de texto (fuente de iconos) que nos van a permitir tener mayor **flexibilidad ** al manipularlos. ### Flexibilidad\n\n Quiere decir que con estos iconos podemos: - Cambiar de color\n- Cambiar de tama\u00f1o - **sin perder calidad**\n- Agregar sombras\n- Animarlos - Rotar, escalar, etc\n\nC\u00f3mo utilizarlos\n----------------\n\n Existen en la web, paquetes de iconos ya predefinidos que podemos usar como [Font Awesome](http:\/\/fortawesome.github.io\/Font-Awesome\/ \"Font Awesome\"), esto es una soluci\u00f3n muy r\u00e1pida para sacarnos de apuros, pero qu\u00e9 sucede cuando nosotros queremos hacer nuestros propios iconos o solo elegir lo que necesitamos. Aqu\u00ed entra [Grunt JS](http:\/\/gruntjs.com\/ \"Grunt JS\") junto con el plugin [Grunt Webfont](https:\/\/github.com\/sapegin\/grunt-webfont \"Grunt Webfont\") para simplificarnos la vida =). Lo que hace este plugin es capturar los iconos en archivos SVG independientes y crear una fuente TTF para usarlo en la web. ### Manos a la obra:\n\n Suponiendo que ya tenemos instalado Grunt JS en nuestra computadora, o de lo contrario te invito a leer este [post ](http:\/\/frontend-labs.com\/146--gruntjs-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos \"Grunt: Primeros Pasos\")para que lo puedas instalar. 1. Primero tendremos que irnos de compras o recolectar iconos que vamos a usar en nuestra p\u00e1gina web, incluso hasta lo podemos crear con cualquier programa (editor de vectores) como Ilustrador. **Es muy importante que estos archivos est\u00e9n con formato SVG.** Algunas de estos sitios web gratuitos donde puedes recolectar son: - [IconMonstr](http:\/\/iconmonstr.com\/ \"Iconmonstr\")\n- [Flaticon](http:\/\/www.flaticon.com\/ \"Flaticon\")\n- [Icon Finder](https:\/\/www.iconfinder.com \"Icon Finder\")\n\n Escogemos los iconos que queremos y los guardamos en una carpeta llamada Icons [![imageIcons1](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons1.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons1.jpg) Hay que tener en cuenta que solo vamos a necesitar los archivos *.svg 2. Segundo tenemos que preparar el proyecto para instalar paquetes de Grunt, digamos que tenemos esta estructura de carpetas. [![imageIcons2](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons2.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons2.jpg) 3. En tercer lugar vamos a instalar el plugin **Grunt Webfont** que va a capturar estos iconos *.svg y los renderizar\u00e1 en las fuentes TTF, EOT, SVG y WOFF para poder utilizarlos luego. Nos derigimos a la carpeta grunt y escribimos en consola: #### Para usuarios de linux\n\n [code lang=\"bash\"] sudo apt-get install fontforge ttfautohint npm install grunt-webfont --save-dev [\/code] #### Para usuarios de Windows\n\n [code lang=\"bash\"] npm install grunt-webfont --save-dev [\/code] 4. Ahora vamos a configurar la tarea grunt. Nos dirigimos al archivo Gruntfile.js y agregamos. [code lang=\"js\"] webfont: { icons: { src: '..\/icons\/*.svg', \/\/Ruta de los svg que van hacer convertidos dest: '..\/fonts', \/\/Ruta de destino de la compilaci\u00f3n destCss: '..\/fonts\/build', \/\/Ruta de destino donde se crear\u00e1 la hoja de estilos css y un html ejemplo options: { stylesheet: 'css', \/\/Extensi\u00f3n de la hoja de estilos, css relativeFontPath: '..\/fonts' \/\/La ruta del src - font-family que se imprime dentro de la hoja de estilos } } } [\/code] [code lang=\"js\"] grunt.loadNpmTasks('grunt-webfont'); [\/code] Quedando nuestro archivo **Gruntfile.js** de la siguiente manera. [code lang=\"js\"] module.exports = function(grunt) { \/\/ Project configuration. grunt.initConfig({ pkg: grunt.file.readJSON('package.json'), webfont: { icons: { src: '..\/icons\/*.svg', dest: '..\/fonts', destCss: '..\/fonts\/build', options: { stylesheet: 'css', relativeFontPath: '..\/fonts' } } } }); \/\/ Load the plugin that provides the \u201cuglify\u201d task. \/\/ grunt.loadNpmTasks(\u2018pluginname\u2019); grunt.loadNpmTasks('grunt-webfont'); \/\/ Default task(s). grunt.registerTask('default', ['webfont']); }; [\/code] Tambi\u00e9n nos queda el archivo **package.json** de la siguiente manera. [code lang=\"js\"] { \"name\": \"font-icons\", \"version\": \"0.1.0\", \"devDependencies\": { \"grunt\": \"^0.4.5\", \"grunt-contrib-cssmin\": \"^0.9.0\", \"grunt-contrib-jshint\": \"~0.1.1\", \"grunt-contrib-nodeunit\": \"~0.1.2\", \"grunt-webfont\": \"^0.4.2\" } } [\/code] 5. Por \u00faltimo procederemos a correr la tarea grunt, primero nos dirigimos a la **carpeta grunt** de nuestro proyecto y escribimos en consola. [code lang=\"bash\"] grunt webfont [\/code] Donde correr\u00e1 la tarea y se crear\u00e1 una nueva carpeta llamada **fonts**, quedando la estructura de carpetas de la siguiente manera [![imageIcons3](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons3.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons3.jpg) Se cre\u00f3 los archivos de fuente de texto (**TTF, EOT, SVG y WOFF**), dentro de la carpeta **\"build\"** la hoja de estilos y un **HTML de ejemplo** donde se muestra c\u00f3mo se visualiza los iconos (**icons.html**). Solo se ha usado las opciones b\u00e1sicas que nos trae grunt-webfont, pero hay mucho m\u00e1s opciones dentro del github del proyecto ([Ver proyecto](https:\/\/github.com\/sapegin\/grunt-webfont)).\n","html":"<h2>Situaci\u00f3n<\/h2>\r\nComo vemos hoy en d\u00eda para brindar mejor experiencia, usabilidad y estilo a una pagina web se usan iconos que facilitan al usuario entender la informaci\u00f3n mas f\u00e1cilmente. Nosotros, como desarrolladores, usualmente guardamos estos iconos en una imagen PNG (<a title=\"Sprite\" href=\"http:\/\/www.w3schools.com\/css\/css_image_sprites.asp\" target=\"_blank\">sprite<\/a>) donde luego ser\u00e1n llamados por medio de estilos CSS, pero <strong>\u00bfQu\u00e9 sucede cuando vemos que se usa el mismo estilo de icono con diferente color o tama\u00f1o?<\/strong>\r\n\r\nUsualmente lo ponemos en el mismo archivo PNG (icon-set.png) generando m\u00e1s peso y tama\u00f1o del mismo. Esto es un problema ya que le estar\u00edamos quitando velocidad de carga a la pagina.\r\n<h2>Soluci\u00f3n<\/h2>\r\nLa mejor t\u00e9cnica es guardar estos iconos como archivo de fuente de texto (fuente de iconos) que nos van a permitir tener mayor <strong>flexibilidad <\/strong> al manipularlos.\r\n<h3>Flexibilidad<\/h3>\r\nQuiere decir que con estos iconos podemos:\r\n<ul>\r\n\t<li>Cambiar de color<\/li>\r\n\t<li>Cambiar de tama\u00f1o - <strong>sin perder calidad<\/strong><\/li>\r\n\t<li>Agregar sombras<\/li>\r\n\t<li>Animarlos - Rotar, escalar, etc<\/li>\r\n<\/ul>\r\n<h2>C\u00f3mo utilizarlos<\/h2>\r\nExisten en la web, paquetes de iconos ya predefinidos que podemos usar como <a title=\"Font Awesome\" href=\"http:\/\/fortawesome.github.io\/Font-Awesome\/\" target=\"_blank\">Font Awesome<\/a>, esto es una soluci\u00f3n muy r\u00e1pida para sacarnos de apuros, pero qu\u00e9 sucede cuando nosotros queremos hacer nuestros propios iconos o solo elegir lo que necesitamos.\r\n\r\nAqu\u00ed entra <a title=\"Grunt JS\" href=\"http:\/\/gruntjs.com\/\" target=\"_blank\">Grunt JS<\/a> junto con el plugin <a title=\"Grunt Webfont\" href=\"https:\/\/github.com\/sapegin\/grunt-webfont\" target=\"_blank\">Grunt Webfont<\/a> para simplificarnos la vida =). Lo que hace este plugin es capturar los iconos en archivos SVG independientes y crear una fuente TTF para usarlo en la web.\r\n<h3>Manos a la obra:<\/h3>\r\nSuponiendo que ya tenemos instalado Grunt JS en nuestra computadora, o de lo contrario te invito a leer este <a href=\"http:\/\/frontend-labs.com\/146--gruntjs-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos\" title=\"Grunt: Primeros Pasos\">post <\/a>para que lo puedas instalar.\r\n\r\n1. Primero tendremos que irnos de compras o recolectar iconos que vamos a usar en nuestra p\u00e1gina web, incluso hasta lo podemos crear con cualquier programa (editor de vectores) como Ilustrador. <strong>Es muy importante que estos archivos est\u00e9n con formato SVG.<\/strong>\r\nAlgunas de estos sitios web gratuitos donde puedes recolectar son:\r\n<ul>\r\n\t<li><a title=\"Iconmonstr\" href=\"http:\/\/iconmonstr.com\/\" target=\"_blank\">IconMonstr<\/a><\/li>\r\n\t<li><a title=\"Flaticon\" href=\"http:\/\/www.flaticon.com\/\" target=\"_blank\">Flaticon<\/a><\/li>\r\n\t<li><a title=\"Icon Finder\" href=\"https:\/\/www.iconfinder.com\" target=\"_blank\">Icon Finder<\/a><\/li>\r\n<\/ul>\r\nEscogemos los iconos que queremos y los guardamos en una carpeta llamada Icons\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons1.jpg\"><img src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons1.jpg\" alt=\"imageIcons1\" width=\"334\" height=\"242\" class=\"alignnone size-full wp-image-834\" \/><\/a>\r\nHay que tener en cuenta que solo vamos a necesitar los archivos *.svg\r\n\r\n2. Segundo tenemos que preparar el proyecto para instalar paquetes de Grunt, digamos que tenemos esta estructura de carpetas.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons2.jpg\"><img src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons2.jpg\" alt=\"imageIcons2\" width=\"337\" height=\"382\" class=\"alignnone size-full wp-image-836\" \/><\/a>\r\n\r\n3. En tercer lugar vamos a instalar el plugin <strong>Grunt Webfont<\/strong> que va a capturar estos iconos *.svg y los renderizar\u00e1 en las fuentes TTF, EOT, SVG y WOFF para poder utilizarlos luego.\r\n\r\nNos derigimos a la carpeta grunt y escribimos en consola:\r\n<h4>Para usuarios de linux<\/h4>\r\n[code lang=\"bash\"]\r\nsudo apt-get install fontforge ttfautohint\r\nnpm install grunt-webfont --save-dev\r\n[\/code]\r\n\r\n<h4>Para usuarios de Windows<\/h4>\r\n[code lang=\"bash\"]\r\nnpm install grunt-webfont --save-dev\r\n[\/code]\r\n\r\n4. Ahora vamos a configurar la tarea grunt. Nos dirigimos al archivo Gruntfile.js y agregamos.\r\n[code lang=\"js\"]\r\nwebfont: {\r\n\ticons: {\r\n\t\tsrc: '..\/icons\/*.svg',\t\t\t\/\/Ruta de los svg que van hacer convertidos\r\n\t\tdest: '..\/fonts',\t\t\t\/\/Ruta de destino de la compilaci\u00f3n\r\n\t\tdestCss: '..\/fonts\/build',\t        \/\/Ruta de destino donde se crear\u00e1 la hoja de estilos css y un html ejemplo\r\n\t\toptions: {\r\n\t\t\tstylesheet: 'css',\t\t\/\/Extensi\u00f3n de la hoja de estilos, css\r\n\t\t\trelativeFontPath: '..\/fonts'\t\/\/La ruta del src - font-family que se imprime dentro de la hoja de estilos\r\n\t\t}\r\n\t}\r\n}\r\n[\/code]\r\n[code lang=\"js\"]\r\ngrunt.loadNpmTasks('grunt-webfont');\r\n[\/code]\r\n\r\nQuedando nuestro archivo <strong>Gruntfile.js<\/strong> de la siguiente manera.\r\n[code lang=\"js\"]\r\nmodule.exports = function(grunt) {\r\n\t\/\/ Project configuration.\r\n\tgrunt.initConfig({\r\n\t\tpkg: grunt.file.readJSON('package.json'),\r\n\t\twebfont: {\r\n\t\t\ticons: {\r\n\t\t\t\tsrc: '..\/icons\/*.svg',\r\n\t\t\t\tdest: '..\/fonts',\r\n\t\t\t\tdestCss: '..\/fonts\/build',\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tstylesheet: 'css',\r\n\t\t\t\t\trelativeFontPath: '..\/fonts'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t\/\/ Load the plugin that provides the \u201cuglify\u201d task.\r\n\t\/\/ grunt.loadNpmTasks(\u2018pluginname\u2019);\r\n\tgrunt.loadNpmTasks('grunt-webfont');\r\n\t\/\/ Default task(s).\r\n\tgrunt.registerTask('default', ['webfont']);\r\n};\r\n[\/code]\r\n\r\nTambi\u00e9n nos queda el archivo <strong>package.json<\/strong> de la siguiente manera.\r\n[code lang=\"js\"]\r\n{\r\n  &quot;name&quot;: &quot;font-icons&quot;,\r\n  &quot;version&quot;: &quot;0.1.0&quot;,\r\n  &quot;devDependencies&quot;: {\r\n    &quot;grunt&quot;: &quot;^0.4.5&quot;,\r\n    &quot;grunt-contrib-cssmin&quot;: &quot;^0.9.0&quot;,\r\n    &quot;grunt-contrib-jshint&quot;: &quot;~0.1.1&quot;,\r\n    &quot;grunt-contrib-nodeunit&quot;: &quot;~0.1.2&quot;,\r\n    &quot;grunt-webfont&quot;: &quot;^0.4.2&quot;\r\n  }\r\n}\r\n[\/code]\r\n\r\n5. Por \u00faltimo procederemos a correr la tarea grunt, primero nos dirigimos a la <strong>carpeta grunt<\/strong> de nuestro proyecto y escribimos en consola.\r\n[code lang=\"bash\"]\r\ngrunt webfont\r\n[\/code]\r\n\r\nDonde correr\u00e1 la tarea y se crear\u00e1 una nueva carpeta llamada <strong>fonts<\/strong>, quedando la estructura de carpetas de la siguiente manera\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons3.jpg\"><img src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/imageIcons3.jpg\" alt=\"imageIcons3\" width=\"499\" height=\"580\" class=\"alignnone size-full wp-image-845\" \/><\/a>\r\n\r\nSe cre\u00f3 los archivos de fuente de texto (<strong>TTF, EOT, SVG y WOFF<\/strong>), dentro de la carpeta <strong>\"build\"<\/strong> la hoja de estilos y un <strong>HTML de ejemplo<\/strong> donde se muestra c\u00f3mo se visualiza los iconos (<strong>icons.html<\/strong>).\r\n\r\nSolo se ha usado las opciones b\u00e1sicas que nos trae grunt-webfont, pero hay mucho m\u00e1s opciones dentro del github del proyecto (<a href=\"https:\/\/github.com\/sapegin\/grunt-webfont\">Ver proyecto<\/a>).","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/bannerWebfont.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":7,"created_at":"Sun, 08 Jun 2014 01:35:18 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:25:36 +0000","updated_by":1,"published_at":"Sun, 08 Jun 2014 01:35:18 +0000","published_by":1},{"id":832,"title":"\u00bfEl correo puede ser responsive?","slug":"el-correo-puede-ser-responsive-2","markdown":"\n![correo responsive web design](http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/05\/responsive-web-design-300x155.jpg) Hoy en d\u00eda, el correo electr\u00f3nico tiene una gran importancia\u00a0en los medios de comunicaci\u00f3n, debido a que es una herramienta vital para casi todos los negocios, la cual ayuda a comunicarse con el cliente. Por ejemplo en el \u00e1rea de marketing, el correo permite\u00a0llegar a una audiencia masiva y de manera cada vez m\u00e1s personal, lo cual permite fidelizar a los clientes. Mucho de estos correos (m\u00e1s del 50%) son abiertos por dispositivos m\u00f3viles. Por lo tanto, cada vez es m\u00e1s importante, que al momento de \u00a0dise\u00f1ar un correo electr\u00f3nico html, asegurarnos que este se visualice de manera correcta en todo dispositivo. El dise\u00f1o de correos electr\u00f3nicos con html es parecido a\u00a0dise\u00f1ar p\u00e1ginas webs\u00a0en el pasado, donde exist\u00edan varios dolores de cabeza como usar tablas... y tablas dentro de otras tablas; no existe un est\u00e1ndar real entre distintos clientes de correo electr\u00f3nico; se necesita muchos hacks para verse correctamente\u00a0incluso si esta bien dise\u00f1ado; no funciona el javascript (por temas de seguridad)\u00a0 y para agregar estilos es necesario insertarlos directamente al html. **\u00bfC\u00f3mo funciona\u00a0un correo electr\u00f3nico?**\n-----------------------------------------\n\n En primer lugar, explicaremos como hacer un correo electr\u00f3nico antes de explicar como hacerlo\u00a0responsive. Para dise\u00f1ar un correo se debe identificar primero que herramientas son necesarias. Es decir, no contamos con varias etiquetas html como el div, section, header, footer, article, nav, entre otros. Adem\u00e1s, se cuenta con una limitada lista de atributos css, los cuales deben ser insertados dentro de las etiquetas html. Aqu\u00ed tenemos un claro ejemplo de como se ver\u00eda un correo electr\u00f3nico bien estructurado. <span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><<\/span>table <\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellpadding<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellspacing<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>100%<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><span style=\"color: #800080;\">><\/span><\/span><\/span><span class=\"token tag\" style=\"font-weight: inherit; color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><<\/span>tr<\/span><span class=\"token punctuation\"><span style=\"color: #800080;\">><\/span><\/span><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><<\/span>td <\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">bgcolor<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>#333333<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\"><span style=\"color: #800080;\">><\/span><\/span><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><<\/span>div <\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">align<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>center<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">style<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>padding: 0px 15px 0px 15px;<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\"><span style=\"color: #800080;\">><\/span><\/span><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><<\/span>table<\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellpadding<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellspacing<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>500<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">class<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>wrapper<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\"><span style=\"color: #800080;\">><\/span><\/span><span class=\"token tag\" style=\"font-weight: inherit; color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\"><span style=\"color: #800080;\">><\/span><\/span><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">><\/span><\/span><span style=\"color: #000000;\">\u2026Content\u2026<\/span><span class=\"token tag\"><span class=\"token tag\" style=\"font-weight: inherit; color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><\/<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\"><span style=\"color: #800080;\">><\/span><\/span><\/span><span style=\"color: #800080;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><\/<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">> <\/span><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><\/<\/span>table<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">> <\/span><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><\/<\/span>div<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">> <\/span><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><\/<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">><\/span><\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\"><\/span><span style=\"color: #800080;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><\/<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">> <\/span><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\"><\/<\/span>table<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">> <\/span><\/span>**ejemplo tomado de\u00a0[alistapart.com ](http:\/\/alistapart.com\/article\/can-email-be-responsive \"alistapart\")* Se puede\u00a0notar como se anidan\u00a0las tablas entre si y el uso de los atributos **border**, **cellpadding** y **cellspacing** con el fin de asegurar que no haya brechas innecesarias en el dise\u00f1o. El **bgcolor** es aplicado sobre la etiqueta **td**, el cual es m\u00e1s confiable que el background o el background-color<span style=\"color: #222222;\">. Por otro lado, se esta usando la etiqueta **div** para centrar el contenido, pero solo se recomienda usar el div para este fin y no para la estructura principal del correo.<\/span> Por otro lado, el uso de las im\u00e1genes en los correos es muy similar al de la web. Sin embargo, en los correos electr\u00f3nicos la muestra autom\u00e1tica de im\u00e1genes es deshabilitada por defecto, por lo tanto en vez de ver un correo ordenado el suscriptor puede visualizar un correo algo dif\u00edcil de entender. [](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/can-email-be-responsive-1.png) [![correo responsive 1](http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/06\/can-email-be-responsive-1.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/can-email-be-responsive-1.png)**ejemplo tomado de\u00a0[alistapart.com ](http:\/\/alistapart.com\/article\/can-email-be-responsive \"alistapart\")* Mientras no haya una manera autom\u00e1tica de habilitar estas im\u00e1genes, podemos mejorar la situaci\u00f3n con el uso\u00a0del atributo** alt**\u00a0para agregar\u00a0informaci\u00f3n a las im\u00e1genes\u00a0que no se visualizan. Es m\u00e1s, podr\u00edamos agregar algunos estilos en linea al **alt** de la etiqueta **img** para para darle un estilo similar al dise\u00f1o del correo**.\u00a0***[](http:\/\/alistapart.com\/article\/can-email-be-responsive \"alistapart\")*<span class=\"token tag\" style=\"color: #990055;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><<\/span>img<\/span><span class=\"token attr-name\" style=\"color: #669900;\">src<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>img\/fluid-images.jpg<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>240<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">height<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>130<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">style<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>display: block; color: #666666; font-family: Helvetica, arial, sans-serif; font-size: 13px; width: 240px; height: 130px;<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">alt<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>Fluid images<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">class<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>img-max<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\" style=\"color: #999999;\">><\/span>**ejemplo tomado de\u00a0[alistapart.com ](http:\/\/alistapart.com\/article\/can-email-be-responsive \"alistapart\")* Usando el c\u00f3digo de arriba, nuestras im\u00e1genes faltantes ahora tienen un poco m\u00e1s de orden. [](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/can-email-be-responsive-2.png) [![correo responsive 2](http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/06\/can-email-be-responsive-2.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/can-email-be-responsive-2.png)**ejemplo tomado de\u00a0[alistapart.com](http:\/\/alistapart.com\/article\/can-email-be-responsive \"alistapart\")* \u00a0 **\u00bfC\u00f3mo funciona\u00a0el correo electr\u00f3nico\u00a0responsive\u00a0?**\n-----------------------------------------------------\n\n Igual que las p\u00e1ginas webs responsive, existen tres pincipales componentes para hacer un correo responsive:\u00a0<span style=\"color: #222222;\">flexible images<\/span><span style=\"color: #222222;\">,\u00a0<\/span><span style=\"color: #222222;\">flexible layouts<\/span><span style=\"color: #222222;\">, y\u00a0<\/span><span style=\"color: #222222;\">media queries<\/span><span style=\"color: #222222;\">.<\/span> Las \u00fanicas diferencias\u00a0del uso de estas t\u00e9cnicas estan en\u00a0su manera de ser implementadas. Al momento de dise\u00f1ar correos electr\u00f3nicos, no hay que olvidar que se tiene un repertorio limitado de html y css. Lo que se usa generalmente en web como <span style=\"color: #222222;\">margins, floats, y\u00a0ems no funciona en muchos clientes de correo. Por lo tanto, tenemos que pensar en alternativas.<\/span>### Flexible Images\n\n Si bien es cierto lo usual es usar el width 100% para lograrlo, en este ambiente dicha soluci\u00f3n presenta varios descuadres en distintos clientes de correo.Por lo tanto primero debemos indicarle las dimensiones especificas para luego redifinirlas. El primer paso es asegurarse de que las im\u00e1genes est\u00e9n bien codificadas. <span class=\"token tag\" style=\"color: #990055;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><<\/span>img <\/span><span class=\"token attr-name\" style=\"color: #669900;\">src<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>responsive-email.jpg<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>500<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">height<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>200<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">alt<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>Can an email really be responsive?<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">style<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>display: block; padding: 0; color: #666666; text-decoration: none; font-family: Helvetica, arial, sans-serif; font-size: 16px;<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">class<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>img-max<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\" style=\"color: #999999;\">><\/span> Podemos observar que la propiedad **display** se encuentra incluida dentro de la etiqueta img. Este un\u00a0 ejemplo de los distintos hacks que son requeridos para lidiar con los diversos clientes de correo. Muchos de estos clientes de correo electr\u00f3nico agregan un espacio alrededor de las im\u00e1genes tratando de arreglar los problemas que puede ocasionar el line-height, por eso se recomienda\u00a0agregar el display block para eliminar los espacios extras de las im\u00e1genes y asi proteger la estrucutra de tu dise\u00f1o. Ahora, cuando necesitemos tener im\u00e1genes fluidas, podemos insertar el media query en el head de nuestro correo: <span class=\"token selector\" style=\"color: #669900;\">img[class=\"img-max\u201d] <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span><span class=\"token property\" style=\"color: #990055;\">width<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\">100% <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span><span class=\"token property\" style=\"color: #990055;\">height<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\"> auto <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span><span class=\"token punctuation\" style=\"color: #999999;\">}<\/span> No todas las im\u00e1genes necesitan ser fluidas. Los elementos como logos e iconos sociales suelen tener el mismo tama\u00f1o sin importar el dispositivo donde es visualizado, por lo que utilizaremos una clase para indicar que im\u00e1genes necesitaran ser\u00a0fluidas. Debido a que usamos estilos en linea, tenemos que usar la declaraci\u00f3n **!important **para asegurarnos que los estilos ser\u00e1n asignados cuando el documento sea renderizado. ### Flexible Layout\n\nMuchos de los dise\u00f1adores web est\u00e1n familiarizados con el dise\u00f1o de p\u00e1ginas webs responsive usando los tama\u00f1os de los elementos sem\u00e1nticos con unidades relativas como porcentajes, ems y rems. Sin embargo, en el desarrollo de correos electr\u00f3nicos nos vemos limitados al uso porcentajes para un dise\u00f1o flexible, estos ser\u00e1n usados en linea\u00a0sobre las tablas sujeto a algunas limitaciones.\n\nCasi todas nuestras tablas emplear\u00e1n porcentaje para sus anchos. La \u00fanica excepci\u00f3n es la tabla del contenedor, la cual tendra dimensiones espec\u00edficas para evitar conflictos con los clientes de correo que no manejen de manera correcta los porcentajes, usualmente la mayoria de versiones de Microsoft Outlook.\n\n<span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><<\/span>table<\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellpadding<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellspacing<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>500<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">class<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>wrapper<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">><\/span><\/span>\n\n<span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">><\/span><\/span>\n\n<span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">><\/span><\/span><span style=\"color: #000000;\">\u2026Content\u2026<\/span><span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><\/<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">><\/span><\/span>\n\n<span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><\/<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">><\/span><\/span>\n\n<span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><\/<\/span>table<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">><\/span><\/span>\n\n Acorde al c\u00f3digo de arriba se puede ver que establecemos un ancho espec\u00edfico de 500 pixeles. Este contenedor tendr\u00e1 todas las tablas a utilizar en el correo. Ahora podemos usar de manera segura los porcentajes para el tama\u00f1o de las tablas de adentro. ### Media Queries\n\nEn los correos, los media queries funcionan igual que en la web.\u00a0 Al incluirlos en el head de nuestro correo, podemos enlazarlo con las etiquetas por medio de una clase.\n\n Sin complicar las cosas, enlazaremos los viewports con un max-width de 525 pixeles. Luego, sobrescribiremos la clase wrapper con un width de 100% para forzar a que tome toda la pantalla del dispositivo m<span class=\"st\">\u00f3v<\/span>il. <span class=\"token atrule\" style=\"color: #0077aa;\">@media screen and (max-width:525px) <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span>\n\n<span class=\"token selector\" style=\"color: #669900;\">table[class=\u201cwrapper\u201d] <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span>\n\n<span class=\"token property\" style=\"color: #990055;\">width<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\">100% <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span>\n\n<span class=\"token punctuation\" style=\"color: #999999;\">}<\/span>\n\n<span class=\"token punctuation\" style=\"color: #999999;\">}<\/span>\n\nTambi\u00e9n, podemos enlazar cualquier tabla o elemento anidada al contenedor con el fin de mejorar la experiencia en los dispositivos\u00a0m<span class=\"st\">\u00f3v<\/span>iles. Es mas, no seria mala idea redimensionar los tama\u00f1os de la letra y de los botones en los m\u00f3viles.\n\n<span class=\"token atrule\" style=\"color: #0077aa;\">@media screen and (max-width:525px) <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span>\n\n<span class=\"token selector\" style=\"color: #669900;\">body, table, td, a <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span>\n\n<span class=\"token property\" style=\"color: #990055;\">font-size<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\">16px <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span>\n\n<span class=\"token punctuation\" style=\"color: #999999;\">}<\/span>\n\n<span class=\"token selector\" style=\"color: #669900;\">table[id=\u201cresponsive-table\u201d] <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span>\n\n<span class=\"token property\" style=\"color: #990055;\">width<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\">100% <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span>\n\n<span class=\"token punctuation\" style=\"color: #999999;\">}<\/span>\n\n<span class=\"token punctuation\" style=\"color: #999999;\">}<\/span>\n\n El principal inconveniente de usar media queries es que no son soportados port todos. Mientras que los clientes de correo basados en WebKit como iOS Mail y el correo default de Android funcionan correctamente, en los dispositivos mas antiguos de Blackberry, Windows Phone 8 y la app de Gmail son indifirentes al uso de media queries. Afortunadamente, iOS y Android tiene la mayor parte de los clientes que usan el m\u00f3vil para revisar su correo, as\u00ed que puedes tener la confianza que la mayor\u00eda de tus suscriptores visualizaran tu correo responsive de manera correcta. **Conclusiones y Recomendaciones **Las t\u00e9cnicas descritas en este articulo es solo el comienzo. Varios dise\u00f1adores de correos est\u00e1n explorando la manera de usar web fonts, SVG y las animaciones CSS3 en los correos. Sin duda, el dise\u00f1o de correos electr\u00f3nicos es dif\u00edcil, pero no por eso debemos detenernos en explorar y en experimentar en t\u00e9cnicas avanzadas para ver que funciona y que no en los distintos clientes de correo que tenemos.\n\n \u00a0Existen varias herramientas que puede ser de gran utilidad para el dise\u00f1o de estos correos: Enlaces de inter\u00e9s:\n\n[Zurb](http:\/\/zurb.com\/playground\/responsive-email-templates \"Zurb\"): En esta pagina puedes encontrar distintas plantillas. [PutsMail](http:\/\/putsmail.com\/ \"Puts Mail\"): Aqui podras probar tus correos envi\u00e1ndolos a diferentes clientes de correo Fuentes Este articulo es como una traduccion (digo \"como una traducci\u00f3n\", porque no esta traducido al pie de la letra) del post de Jason Rodriguez en A List Apart Enlace del post:[ http:\/\/alistapart.com\/article\/can-email-be-responsive](\/\/alistapart.com\/article\/can-email-be-responsive \"a list apart\") \u00a0\n","html":"<img class=\"alignright wp-image-730 size-medium\" src=\"http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/05\/responsive-web-design-300x155.jpg\" alt=\"correo responsive web design\" width=\"300\" height=\"155\" \/>\r\n\r\nHoy en d\u00eda, el correo electr\u00f3nico tiene una gran importancia\u00a0en los medios de comunicaci\u00f3n, debido a que es una herramienta vital para casi todos los negocios, la cual ayuda a comunicarse con el cliente. Por ejemplo en el \u00e1rea de marketing, el correo permite\u00a0llegar a una audiencia masiva y de manera cada vez m\u00e1s personal, lo cual permite fidelizar a los clientes. Mucho de estos correos (m\u00e1s del 50%) son abiertos por dispositivos m\u00f3viles. Por lo tanto, cada vez es m\u00e1s importante, que al momento de \u00a0dise\u00f1ar un correo electr\u00f3nico html, asegurarnos que este se visualice de manera correcta en todo dispositivo.\r\n\r\nEl dise\u00f1o de correos electr\u00f3nicos con html es parecido a\u00a0dise\u00f1ar p\u00e1ginas webs\u00a0en el pasado, donde exist\u00edan varios dolores de cabeza como usar tablas... y tablas dentro de otras tablas; no existe un est\u00e1ndar real entre distintos clientes de correo electr\u00f3nico; se necesita muchos hacks para verse correctamente\u00a0incluso si esta bien dise\u00f1ado; no funciona el javascript (por temas de seguridad)\u00a0 y para agregar estilos es necesario insertarlos directamente al html.\r\n<h2><strong>\u00bfC\u00f3mo funciona\u00a0un correo electr\u00f3nico?<\/strong><\/h2>\r\nEn primer lugar, explicaremos como hacer un correo electr\u00f3nico antes de explicar como hacerlo\u00a0responsive. Para dise\u00f1ar un correo se debe identificar primero que herramientas son necesarias. Es decir, no contamos con varias etiquetas html como el div, section, header, footer, article, nav, entre otros. Adem\u00e1s, se cuenta con una limitada lista de atributos css, los cuales deben ser insertados dentro de las etiquetas html.\r\n\r\nAqu\u00ed tenemos un claro ejemplo de como se ver\u00eda un correo electr\u00f3nico bien estructurado.\r\n\r\n<span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;<\/span>table <\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellpadding<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellspacing<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>100%<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\"><span style=\"color: #800080;\">&gt;<\/span>\r\n<\/span><\/span><span class=\"token tag\" style=\"font-weight: inherit; color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;<\/span>tr<\/span><span class=\"token punctuation\"><span style=\"color: #800080;\">&gt;<\/span>\r\n<\/span><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;<\/span>td <\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">bgcolor<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>#333333<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\"><span style=\"color: #800080;\">&gt;<\/span>\r\n<\/span><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;<\/span>div <\/span><span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">align<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>center<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">style<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>padding: 0px 15px 0px 15px;<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\"><span style=\"color: #800080;\">&gt;<\/span>\r\n<\/span><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;<\/span>table<\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellpadding<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellspacing<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>500<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">class<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>wrapper<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\"><span style=\"color: #800080;\">&gt;<\/span>\r\n<\/span><span class=\"token tag\" style=\"font-weight: inherit; color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\"><span style=\"color: #800080;\">&gt;<\/span>\r\n<\/span><span class=\"token tag\" style=\"color: #800080;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">&gt;<\/span><\/span><span style=\"color: #000000;\">\u2026Content\u2026<\/span><span class=\"token tag\"><span class=\"token tag\" style=\"font-weight: inherit; color: #800080;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;\/<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\"><span style=\"color: #800080;\">&gt;<\/span>\r\n<\/span><\/span><span style=\"color: #800080;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;\/<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">&gt;\r\n<\/span><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;\/<\/span>table<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">&gt;\r\n<\/span><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;\/<\/span>div<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">&gt;\r\n<\/span><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;\/<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">&gt;<\/span><\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">\r\n<\/span><span style=\"color: #800080;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;\/<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">&gt;\r\n<\/span><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit;\">&lt;\/<\/span>table<\/span><span class=\"token punctuation\" style=\"font-weight: inherit;\">&gt;\r\n<\/span><\/span>\r\n<em>*ejemplo tomado de\u00a0<a title=\"alistapart\" href=\"http:\/\/alistapart.com\/article\/can-email-be-responsive\" target=\"_blank\">alistapart.com\r\n<\/a><\/em>\r\n\r\nSe puede\u00a0notar como se anidan\u00a0las tablas entre si y el uso de los atributos <strong>border<\/strong>, <strong>cellpadding<\/strong> y <strong>cellspacing<\/strong> con el fin de asegurar que no haya brechas innecesarias en el dise\u00f1o. El <strong>bgcolor<\/strong> es aplicado sobre la etiqueta <strong>td<\/strong>, el cual es m\u00e1s confiable que el background o el background-color<span style=\"color: #222222;\">. Por otro lado, se esta usando la etiqueta <strong>div<\/strong> para centrar el contenido, pero solo se recomienda usar el div para este fin y no para la estructura principal del correo.<\/span>\r\n\r\nPor otro lado, el uso de las im\u00e1genes en los correos es muy similar al de la web. Sin embargo, en los correos electr\u00f3nicos la muestra autom\u00e1tica de im\u00e1genes es deshabilitada por defecto, por lo tanto en vez de ver un correo ordenado el suscriptor puede visualizar un correo algo dif\u00edcil de entender.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/can-email-be-responsive-1.png\">\r\n<\/a><a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/can-email-be-responsive-1.png\"><img class=\"alignnone wp-image-764 size-full\" src=\"http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/06\/can-email-be-responsive-1.png\" alt=\"correo responsive 1\" width=\"500\" height=\"594\" \/><\/a><em>*ejemplo tomado de\u00a0<a title=\"alistapart\" href=\"http:\/\/alistapart.com\/article\/can-email-be-responsive\" target=\"_blank\">alistapart.com\r\n<\/a><\/em>\r\n\r\nMientras no haya una manera autom\u00e1tica de habilitar estas im\u00e1genes, podemos mejorar la situaci\u00f3n con el uso\u00a0del atributo<strong> alt<\/strong>\u00a0para agregar\u00a0informaci\u00f3n a las im\u00e1genes\u00a0que no se visualizan. Es m\u00e1s, podr\u00edamos agregar algunos estilos en linea al <strong>alt<\/strong> de la etiqueta <strong>img<\/strong> para para darle un estilo similar al dise\u00f1o del correo<strong>.\u00a0<\/strong><em><a title=\"alistapart\" href=\"http:\/\/alistapart.com\/article\/can-email-be-responsive\" target=\"_blank\">\r\n<\/a><\/em>\r\n\r\n<span class=\"token tag\" style=\"color: #990055;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&lt;<\/span>img<\/span><span class=\"token attr-name\" style=\"color: #669900;\">src<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>img\/fluid-images.jpg<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>240<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">height<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>130<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">style<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>display: block; color: #666666; font-family: Helvetica, arial, sans-serif; font-size: 13px; width: 240px; height: 130px;<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">alt<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>Fluid images<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">class<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>img-max<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\" style=\"color: #999999;\">&gt;<\/span>\r\n\r\n<em>*ejemplo tomado de\u00a0<a title=\"alistapart\" href=\"http:\/\/alistapart.com\/article\/can-email-be-responsive\" target=\"_blank\">alistapart.com\r\n<\/a><\/em>\r\n\r\nUsando el c\u00f3digo de arriba, nuestras im\u00e1genes faltantes ahora tienen un poco m\u00e1s de orden.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/can-email-be-responsive-2.png\">\r\n<\/a><a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/can-email-be-responsive-2.png\"><img class=\"alignnone wp-image-768 size-full\" src=\"http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/06\/can-email-be-responsive-2.png\" alt=\"correo responsive 2\" width=\"500\" height=\"594\" \/><\/a>\r\n\r\n<em>*ejemplo tomado de\u00a0<a title=\"alistapart\" href=\"http:\/\/alistapart.com\/article\/can-email-be-responsive\" target=\"_blank\">alistapart.com<\/a><\/em>\r\n\r\n&nbsp;\r\n<h2><strong>\u00bfC\u00f3mo funciona\u00a0el correo electr\u00f3nico\u00a0responsive\u00a0?<\/strong><\/h2>\r\nIgual que las p\u00e1ginas webs responsive, existen tres pincipales componentes para hacer un correo responsive:\u00a0<span style=\"color: #222222;\">flexible images<\/span><span style=\"color: #222222;\">,\u00a0<\/span><span style=\"color: #222222;\">flexible layouts<\/span><span style=\"color: #222222;\">, y\u00a0<\/span><span style=\"color: #222222;\">media queries<\/span><span style=\"color: #222222;\">.<\/span>\r\n\r\nLas \u00fanicas diferencias\u00a0del uso de estas t\u00e9cnicas estan en\u00a0su manera de ser implementadas.\r\n\r\nAl momento de dise\u00f1ar correos electr\u00f3nicos, no hay que olvidar que se tiene un repertorio limitado de html y css. Lo que se usa generalmente en web como <span style=\"color: #222222;\">margins, floats, y\u00a0ems no funciona en muchos clientes de correo. Por lo tanto, tenemos que pensar en alternativas.<\/span>\r\n<h3>Flexible Images<\/h3>\r\nSi bien es cierto lo usual es usar el width 100% para lograrlo, en este ambiente dicha soluci\u00f3n presenta varios descuadres en distintos clientes de correo.Por lo tanto primero debemos indicarle las dimensiones especificas para luego redifinirlas.\r\n\r\nEl primer paso es asegurarse de que las im\u00e1genes est\u00e9n bien codificadas.\r\n\r\n<span class=\"token tag\" style=\"color: #990055;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&lt;<\/span>img <\/span><span class=\"token attr-name\" style=\"color: #669900;\">src<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>responsive-email.jpg<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>500<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">height<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>200<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">alt<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>Can an email really be responsive?<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">style<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>display: block; padding: 0; color: #666666; text-decoration: none; font-family: Helvetica, arial, sans-serif; font-size: 16px;<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token attr-name\" style=\"color: #669900;\">class<\/span><span class=\"token attr-value\" style=\"color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>img-max<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\" style=\"color: #999999;\">&gt;<\/span>\r\n\r\nPodemos observar que la propiedad <strong>display<\/strong> se encuentra incluida dentro de la etiqueta img. Este un\u00a0 ejemplo de los distintos hacks que son requeridos para lidiar con los diversos clientes de correo. Muchos de estos clientes de correo electr\u00f3nico agregan un espacio alrededor de las im\u00e1genes tratando de arreglar los problemas que puede ocasionar el line-height, por eso se recomienda\u00a0agregar el display block para eliminar los espacios extras de las im\u00e1genes y asi proteger la estrucutra de tu dise\u00f1o.\r\n\r\nAhora, cuando necesitemos tener im\u00e1genes fluidas, podemos insertar el media query en el head de nuestro correo:\r\n\r\n<span class=\"token selector\" style=\"color: #669900;\">img[class=\"img-max\u201d] <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span>\r\n\r\n<span class=\"token property\" style=\"color: #990055;\">width<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\">100% <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span>\r\n\r\n<span class=\"token property\" style=\"color: #990055;\">height<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\"> auto <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span>\r\n\r\n<span class=\"token punctuation\" style=\"color: #999999;\">}<\/span>\r\n\r\nNo todas las im\u00e1genes necesitan ser fluidas. Los elementos como logos e iconos sociales suelen tener el mismo tama\u00f1o sin importar el dispositivo donde es visualizado, por lo que utilizaremos una clase para indicar que im\u00e1genes necesitaran ser\u00a0fluidas.\r\n\r\nDebido a que usamos estilos en linea, tenemos que usar la declaraci\u00f3n <strong>!important <\/strong>para asegurarnos que los estilos ser\u00e1n asignados cuando el documento sea renderizado.\r\n<h3>Flexible Layout<\/h3>\r\n<p style=\"color: #222222;\">Muchos de los dise\u00f1adores web est\u00e1n familiarizados con el dise\u00f1o de p\u00e1ginas webs responsive usando los tama\u00f1os de los elementos sem\u00e1nticos con unidades relativas como porcentajes, ems y rems. Sin embargo, en el desarrollo de correos electr\u00f3nicos nos vemos limitados al uso porcentajes para un dise\u00f1o flexible, estos ser\u00e1n usados en linea\u00a0sobre las tablas sujeto a algunas limitaciones.<\/p>\r\n<p style=\"color: #222222;\">Casi todas nuestras tablas emplear\u00e1n porcentaje para sus anchos. La \u00fanica excepci\u00f3n es la tabla del contenedor, la cual tendra dimensiones espec\u00edficas para evitar conflictos con los clientes de correo que no manejen de manera correcta los porcentajes, usualmente la mayoria de versiones de Microsoft Outlook.<\/p>\r\n<p style=\"color: #222222;\"><span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&lt;<\/span>table<\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">border<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellpadding<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">cellspacing<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>0<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">width<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>500<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span> <span class=\"token attr-name\" style=\"font-weight: inherit; color: #669900;\">class<\/span><span class=\"token attr-value\" style=\"font-weight: inherit; color: #0077aa;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">=<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span>wrapper<span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">\"<\/span><\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&gt;<\/span><\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&lt;<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&gt;<\/span><\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&lt;<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&gt;<\/span><\/span><span style=\"color: #000000;\">\u2026Content\u2026<\/span><span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&lt;\/<\/span>td<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&gt;<\/span><\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&lt;\/<\/span>tr<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&gt;<\/span><\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token tag\" style=\"color: #990055;\"><span class=\"token tag\" style=\"font-weight: inherit;\"><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&lt;\/<\/span>table<\/span><span class=\"token punctuation\" style=\"font-weight: inherit; color: #999999;\">&gt;<\/span><\/span><\/p>\r\nAcorde al c\u00f3digo de arriba se puede ver que establecemos un ancho espec\u00edfico de 500 pixeles.\r\n\r\nEste contenedor tendr\u00e1 todas las tablas a utilizar en el correo. Ahora podemos usar de manera segura los porcentajes para el tama\u00f1o de las tablas de adentro.\r\n<h3>Media Queries<\/h3>\r\n<p style=\"color: #222222;\">En los correos, los media queries funcionan igual que en la web.\u00a0 Al incluirlos en el head de nuestro correo, podemos enlazarlo con las etiquetas por medio de una clase.<\/p>\r\nSin complicar las cosas, enlazaremos los viewports con un max-width de 525 pixeles. Luego, sobrescribiremos la clase wrapper con un width de 100% para forzar a que tome toda la pantalla del dispositivo m<span class=\"st\">\u00f3v<\/span>il.\r\n<p style=\"color: #222222;\"><span class=\"token atrule\" style=\"color: #0077aa;\">@media screen and (max-width:525px) <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token selector\" style=\"color: #669900;\">table[class=\u201cwrapper\u201d] <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token property\" style=\"color: #990055;\">width<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\">100% <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token punctuation\" style=\"color: #999999;\">}<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token punctuation\" style=\"color: #999999;\">}<\/span><\/p>\r\n<p style=\"color: #222222;\">Tambi\u00e9n, podemos enlazar cualquier tabla o elemento anidada al contenedor con el fin de mejorar la experiencia en los dispositivos\u00a0m<span class=\"st\">\u00f3v<\/span>iles. Es mas, no seria mala idea redimensionar los tama\u00f1os de la letra y de los botones en los m\u00f3viles.<\/p>\r\n<p style=\"color: #222222;\"><span class=\"token atrule\" style=\"color: #0077aa;\">@media screen and (max-width:525px) <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token selector\" style=\"color: #669900;\">body, table, td, a <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token property\" style=\"color: #990055;\">font-size<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\">16px <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token punctuation\" style=\"color: #999999;\">}<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token selector\" style=\"color: #669900;\">table[id=\u201cresponsive-table\u201d] <\/span><span class=\"token punctuation\" style=\"color: #999999;\">{<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token property\" style=\"color: #990055;\">width<\/span><span class=\"token punctuation\" style=\"color: #999999;\">:<\/span><span style=\"color: #000000;\">100% <\/span><span class=\"token important\" style=\"font-weight: bold; color: #ee9900;\">!important<\/span><span class=\"token punctuation\" style=\"color: #999999;\">;<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token punctuation\" style=\"color: #999999;\">}<\/span><\/p>\r\n<p style=\"color: #222222;\"><span class=\"token punctuation\" style=\"color: #999999;\">}<\/span><\/p>\r\nEl principal inconveniente de usar media queries es que no son soportados port todos. Mientras que los clientes de correo basados en WebKit como iOS Mail y el correo default de Android funcionan correctamente, en los dispositivos mas antiguos de Blackberry, Windows Phone 8 y la app de Gmail son indifirentes al uso de media queries.\r\n\r\nAfortunadamente, iOS y Android tiene la mayor parte de los clientes que usan el m\u00f3vil para revisar su correo, as\u00ed que puedes tener la confianza que la mayor\u00eda de tus suscriptores visualizaran tu correo responsive de manera correcta.\r\n\r\n<strong>Conclusiones y Recomendaciones\r\n<\/strong>\r\n<p style=\"color: #222222;\">Las t\u00e9cnicas descritas en este articulo es solo el comienzo. Varios dise\u00f1adores de correos est\u00e1n explorando la manera de usar web fonts, SVG y las animaciones CSS3 en los correos. Sin duda, el dise\u00f1o de correos electr\u00f3nicos es dif\u00edcil, pero no por eso debemos detenernos en explorar y en experimentar en t\u00e9cnicas avanzadas para ver que funciona y que no en los distintos clientes de correo que tenemos.<\/p>\r\n\u00a0Existen varias herramientas que puede ser de gran utilidad para el dise\u00f1o de estos correos:\r\n<p style=\"color: #222222;\">Enlaces de inter\u00e9s:<\/p>\r\n<a title=\"Zurb\" href=\"http:\/\/zurb.com\/playground\/responsive-email-templates\" target=\"_blank\">Zurb<\/a>: En esta pagina puedes encontrar distintas plantillas.\r\n<a title=\"Puts Mail\" href=\"http:\/\/putsmail.com\/\" target=\"_blank\">PutsMail<\/a>: Aqui podras probar tus correos envi\u00e1ndolos a diferentes clientes de correo\r\n\r\nFuentes\r\n\r\nEste articulo es como una traduccion (digo \"como una traducci\u00f3n\", porque no esta traducido al pie de la letra) del post de Jason Rodriguez en A List Apart\r\nEnlace del post:<a title=\"a list apart\" href=\"\/\/alistapart.com\/article\/can-email-be-responsive\" target=\"_blank\"> http:\/\/alistapart.com\/article\/can-email-be-responsive<\/a>\r\n\r\n&nbsp;","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/responsive1.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Sun, 08 Jun 2014 11:41:22 +0000","created_by":1,"updated_at":"Thu, 24 Jul 2014 17:11:47 +0000","updated_by":1,"published_at":"Sun, 08 Jun 2014 11:41:22 +0000","published_by":1},{"id":887,"title":"Selenium para las Pruebas Funcionales con Python  ","slug":"pruebas-funcionales-con-python-y-selenium","markdown":"\nEn t\u00e9rminos simples, las pruebas funcionales se encargan de constatar que la funcionalidad del sistema este de acuerdo a lo solicitado. Estas pruebas son conocidas tambi\u00e9n como pruebas de caja negra, ya que solo se encargan de verificar que todo funcione bien sin importar el c\u00f3digo detr\u00e1s de este. Para dichas pruebas tenemos diversas herramientas y una de estas es Selenium.\n\n\u00bfQu\u00e9 es Selenium y c\u00f3mo instalarlo?\n-----------------------------------\n\n Selenium automatiza los pasos que uno hace en los navegadores. Por ejemplo, Selenium puede guardar un script con los pasos que uno realiza en un registro de usuario y luego usarlo para repetir dichos pasos las veces que se desee \u00a0en el navegador que se desee de manera autom\u00e1tica. Para instalar Selenium IDE se debe abrir **Firefox**\u00a0y\u00a0[hacer clic a este enlace](http:\/\/release.seleniumhq.org\/selenium-ide\/2.5.0\/selenium-ide-2.5.0.xpi \"Addon Selenium IDE\")\u00a0en caso de hacerlo en otro navegador descargar\u00e1 el addon y no lo instalar\u00e1 como debe ser. Puede\u00a0entrar a la web de [Selenium](http:\/\/docs.seleniumhq.org\/download\/ \"Selenium\")\u00a0e instalarlo seg\u00fan lo que usted necesite. Si has hecho clic en el addon y tambi\u00e9n en la opci\u00f3n \"allow\/permitir\" que aparece en la parte superior izquierda de tu navegador te\u00a0saldr\u00e1 una ventana como la que se muestra a continuaci\u00f3n. [![1 instalar selenium](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/1_instalar_selenium.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/1_instalar_selenium.png) \u00a0 Luego de la instalaci\u00f3n, un icono aparecer\u00e1 al lado derecho del navegador que dice 'Se' en color blanco. [![2 instalar selenium](http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/06\/2_instalar_selenium-e1403219799269.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/2_instalar_selenium-e1403219799269.png) Finalmente, si logran visualizar este icono la instalaci\u00f3n de Selenium IDE ha sido exitosa. \u00bfComo usar Selenium IDE?\n------------------------\n\n En primer lugar, debes dirigirte a la p\u00e1gina web que quieras automatizar. Luego, se hace clic en el icono de Selenium IDE y aparecer\u00e1 un cuadro como el que se muestra a continuaci\u00f3n el cual ya se encuentra capturando las acciones que realices en la pagina seleccionada. [![3 instalar selenium](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/3_instalar_selenium1.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/3_instalar_selenium1.png) A continuaci\u00f3n, se debe empezar a realizar las acciones que se \u00a0desee registrar en el navegador. Finalmente, al visualizar de nuevo la ventana del Selenium IDE obtendremos algo parecido a lo siguiente. [![4 instalar selenium](http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/06\/4_instalar_selenium.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/4_instalar_selenium.png) Podemos observar que se ha registrado las acciones realizadas en la p\u00e1gina. Ahora hacemos clic en el circulo rojo para detener la grabaci\u00f3n y guardamos la prueba funcional realizada. \u00a0 \u00bfC\u00f3mo se usa Python con Selenium?\n---------------------------------\n\n En caso que no conozcan mucho de python pueden revisar el[ tutorial b\u00e1sico de python](http:\/\/frontend-labs.com\/1122--tutorial-basico-de-python-i \"Tutorial B\u00e1sico de Python \u2013 Parte I \u2013 Definici\u00f3n, Operadores y Tipos\"). Antes de comenzar se debe ejecutar la siguiente linea de comando en la consola. [sourcecode language=\"bash\"] sudo apt-get install python-pip sudo pip install selenium [\/sourcecode] El objetivo de este paso es verificar que se est\u00e1n mostrando todos los mensajes de errores correspondientes a cada campo seg\u00fan el valor ingresado. Primero debemos exportar el archivo que creamos en el Selenium IDE desde File \/ Export Test Case as \/ Python 2 - Unitest - WebDriver y le asignaremos el nombre de **test_case.py** Luego de tener nuestro script, el siguiente paso es reutilizarlo\u00a0y en base a este crear todos los escenarios posibles que necesiten ser probados. En este caso crearemos una lista con todos los valores a ser probados con su mensaje de error correspondiente. Para agilizar el proceso de creaci\u00f3n de registros a ser probados dentro del formulario se puede utilizar la siguiente clase. [sourcecode language=\"python\"] # -*- coding: utf-8 -*- class CreateForm(): def __init__(self, fields): self.fields = dict() self.fields['is_error'] = False for key in fields.keys(): self.fields[key] = fields[key] self.errors = list() def addError(self, item, message, value): assert item in self.fields.keys(), \"The item '%s' was not found in key's dict\" % item error = dict() error['location'] = item error['message'] = message error['value'] = value self.errors.append(error) def getList(self): registers = list() c = 1 for error in self.errors: register = dict() for item in self.fields.keys(): register[item] = self.fields[item] register['cod'] = 'test_%d' % c register[error['location']] = error['value'] register['is_error'] = True register['error'] = error registers.append(register) c += 1 return registers [\/sourcecode] La clase se debe guardar con el nombre de **form_test.py.**\u00a0Luego creamos otro archivo con el nombre de **form_keys****.py\u00a0**en el cual se ingresar\u00e1 los id's de los campos del formulario. [sourcecode language=\"python\"] # -*- coding: utf-8 -*- FIELD_NAME = 'txtName' FIELD_LASTNAME = 'txtLastName' FIELD_EMAIL = 'txtEmail' FIELD_PASSWORD = 'txtPassword1' FIELD_CONFIRM = 'txtRepeatPassword' FIELD_DOCUMENT = 'txtDocument' SELECT_DOCUMENT = 'selDocument' SUBMIT_REGISTER = 'sbmRegister' [\/sourcecode] Ahora creamos el archivo **form_input_data.py** en el cual registraremos los valores por defecto que tendr\u00e1 el formulario y los errores que se van a verificar. [sourcecode language=\"python\"] # -*- coding: utf-8 -*- from form_keys import * from form_test import CreateForm # Declaro mensajes a repetirse MESSAGE_REQUIRED = u'Este campo es requerido.' MESSAGE_MAX = u'La longitud m\u00e1xima es de %d caracteres.' MESSAGE_MIN = u'La longitud m\u00ednima es de %d caracteres.' MESSAGE_ONLY_NUMBERS = u'Ingrese solo n\u00fameros.' MESSAGE_BAD_NAME = u'Solo letras, espacios y guiones (-)' # Registramos los valores por defecto que tendra el formulario, cuando el campo sea un select le asignamos un diccionario como valor default = dict() default[FIELD_NAME] = 'Nombre de Prueba' default[FIELD_LASTNAME] = 'Apellido de prueba' default[FIELD_EMAIL] = 'correo@demo.com' default[FIELD_PASSWORD] = 'probando123' default[FIELD_CONFIRM] = 'probando123' default[FIELD_DOCUMENT] = {'DNI':'54264895','RUC':'254152458963','Pasaporte':'4587DA45','Carn\u00e9 de Extranjer\u00eda':'584E4E5D5'} # Declaramos los errores # item : campo a ser testeado # message : el mensaje de error que deberia mostrar # value : el valor erroneo a ser ingresado txtNameBadSpell = {'item': FIELD_NAME, 'message': MESSAGE_BAD_NAME, 'value': u'FULAN0000'} txtNameMinCharacters = {'item': FIELD_NAME, 'message': MESSAGE_MIN % 2, 'value': 'C'} txtNameRequired = {'item': FIELD_NAME, 'message': MESSAGE_REQUIRED, 'value': ''} txtLastNameBadSpell = {'item': FIELD_LASTNAME, 'message': MESSAGE_BAD_NAME, 'value': u'PEP3$$$$'} txtLastNameMinCharacters = {'item': FIELD_LASTNAME, 'message': MESSAGE_MIN % 2, 'value': 'C'} txtLastNameRequired = {'item': FIELD_LASTNAME, 'message': MESSAGE_REQUIRED, 'value': ''} txtEmailBadSpell = {'item': FIELD_EMAIL, 'message': u'Ingrese un email v\u00e1lido.', 'value': u'demo.pe'} txtEmailRequired = {'item': FIELD_EMAIL, 'message': MESSAGE_REQUIRED, 'value': u''} txtDocumentDniMin = {'item': FIELD_DOCUMENT, 'message': u'El DNI debe ser de 8 d\u00edgitos', 'value':{'DNI': '21587'} } txtDocumentRucMin = {'item': FIELD_DOCUMENT, 'message': u'El RUC debe ser de 11 d\u00edgitos', 'value': {'RUC': '12857'} } # Registramos los errores register = CreateForm(default) register.addError(**txtNameBadSpell) register.addError(**txtNameMinCharacters) register.addError(**txtNameRequired) register.addError(**txtLastNameBadSpell) register.addError(**txtLastNameMinCharacters) register.addError(**txtLastNameRequired) register.addError(**txtEmailBadSpell) register.addError(**txtEmailRequired) register.addError(**txtDocumentDniMin) register.addError(**txtDocumentRucMin) [\/sourcecode] Ahora que tenemos toda la estructura de las pruebas procedemos a modificar el archivo **test_case.py** para acoplarlo a lo que hemos realizado. Es necesario resaltar que la intenci\u00f3n de estos pasos es mostrar el modelo de trabajo con selenium y python. Los datos ingresados en estos archivos est\u00e1n basados en la prueba funcional que yo he realizado. El archivo obtenido por Selenium ser\u00e1 editado manualmente. Se insertar\u00e1 un for el cual recorrer\u00e1 la lista de los errores agregados a este. [sourcecode language=\"python\"] for data in register.getList(): print u'--> Probando la prueba: %s ' % data['cod'] driver.find_element_by_id(FIELD_NAME).clear() driver.find_element_by_id(FIELD_NAME).send_keys(data[FIELD_NAME]) self.printText( 'nombre ingresado') [\/sourcecode] Al finalizar el for se agregar\u00e1 el **assert\u00a0**el cual tiene como funci\u00f3n comprobar que el error mostrado es el indicado. [sourcecode language=\"python\"] if data['is_error']: driver.find_element_by_id(SUBMIT_REGISTER).click() error_id = driver.find_element_by_id(data['error']['location']).get_attribute('data-parsley-id') message = driver.find_element_by_css_selector('#parsley-id-%s > li' % error_id).text assert data['error']['message'] == message, u'Mensaje erroneo en la prueba: %s , %s == %s' % (data['cod'], data['error']['message'], message) print u'--> Exito en %s el campo %s dio como mensaje %s al ingresar %s' % (data['cod'], data['error']['location'], data['error']['message'], data['error']['value']) [\/sourcecode] Finalmente, nuestro archivo **test_case.py** deberia quedar algo asi. [sourcecode language=\"python\"] # -*- coding: utf-8 -*- from form_input_data import register from selenium import webdriver from form_keys import * from selenium.webdriver.support.ui import Select from selenium.common.exceptions import NoSuchElementException, NoAlertPresentException import unittest class PruebasDeRegistro(unittest.TestCase): def setUp(self): self.driver = webdriver.Firefox() self.base_url = \"http:\/\/paginadeprueba.pe\/registro\" self.verificationErrors = [] self.accept_next_alert = False self.debug = False def printText(self, text): if self.debug: print text def test_pruebas_de_registro(self): driver = self.driver driver.get(self.base_url + \"\/\") for data in register.getList(): print u'--> Probando la prueba: %s ' % data['cod'] driver.find_element_by_id(FIELD_NAME).clear() driver.find_element_by_id(FIELD_NAME).send_keys(data[FIELD_NAME]) self.printText( 'nombre ingresado') driver.find_element_by_id(FIELD_LASTNAME).clear() driver.find_element_by_id(FIELD_LASTNAME).send_keys(data[FIELD_LASTNAME]) self.printText('apellido ingresado') driver.find_element_by_css_selector(FIELD_EMAIL).clear() driver.find_element_by_css_selector(FIELD_EMAIL).send_keys(data[FIELD_EMAIL]) self.printText( 'correo ingresado' ) driver.find_element_by_id(FIELD_PASSWORD).clear() driver.find_element_by_id(FIELD_PASSWORD).send_keys(data[FIELD_PASSWORD]) self.printText( 'contrase\u00f1a ingresado') driver.find_element_by_id(FIELD_CONFIRM).clear() driver.find_element_by_id(FIELD_CONFIRM).send_keys(data[FIELD_CONFIRM]) self.printText( 'contrase\u00f1a repetida ingresado') Select(driver.find_element_by_id(SELECT_DOCUMENT)).select_by_visible_text(data[FIELD_DOCUMENT].keys()[0]) driver.find_element_by_id(FIELD_DOCUMENT).clear() driver.find_element_by_id(FIELD_DOCUMENT).send_keys(data[FIELD_DOCUMENT][data[FIELD_DOCUMENT].keys()[0]]) self.printText( 'documento ingresado') if data['is_error']: driver.find_element_by_id(SUBMIT_REGISTER).click() error_id = driver.find_element_by_id(data['error']['location']).get_attribute('data-parsley-id') message = driver.find_element_by_css_selector('#parsley-id-%s > li' % error_id).text assert data['error']['message'] == message, u'Mensaje erroneo en la prueba: %s , %s == %s' % (data['cod'], data['error']['message'], message) print u'--> Exito en %s el campo %s dio como mensaje %s al ingresar %s' % (data['cod'], data['error']['location'], data['error']['message'], data['error']['value']) def is_element_present(self, how, what): try: self.driver.find_element(by=how, value=what) except NoSuchElementException, e: return False return True def is_alert_present(self): try: self.driver.switch_to_alert() except NoAlertPresentException, e: return False return True def close_alert_and_get_its_text(self): try: alert = self.driver.switch_to_alert() alert_text = alert.text if self.accept_next_alert: alert.accept() else: alert.dismiss() return alert_text finally: self.accept_next_alert = True def tearDown(self): self.driver.quit() self.assertEqual([], self.verificationErrors) if __name__ == \"__main__\": unittest.main() [\/sourcecode] El esquema explicado aqu\u00ed sirve mas que nada para probar si el formulario muestra el mensaje de error correspondiente al valor ingresado. Sin embargo, Selenium sirve para validar diversos flujos que tiene un sistema web. Para mayor informaci\u00f3n pueden visitar la [documentaci\u00f3n de Selenium](http:\/\/selenium-python.readthedocs.org\/ \"Documentaci\u00f3n de Selenium\").\n","html":"En t\u00e9rminos simples, las pruebas funcionales se encargan de constatar que la funcionalidad del sistema este de acuerdo a lo solicitado. Estas pruebas son conocidas tambi\u00e9n como pruebas de caja negra, ya que solo se encargan de verificar que todo funcione bien sin importar el c\u00f3digo detr\u00e1s de este. Para dichas pruebas tenemos diversas herramientas y una de estas es Selenium.\r\n<h2>\u00bfQu\u00e9 es Selenium y c\u00f3mo instalarlo?<\/h2>\r\nSelenium automatiza los pasos que uno hace en los navegadores. Por ejemplo, Selenium puede guardar un script con los pasos que uno realiza en un registro de usuario y luego usarlo para repetir dichos pasos las veces que se desee \u00a0en el navegador que se desee de manera autom\u00e1tica.\r\n\r\nPara instalar Selenium IDE se debe abrir <strong>Firefox<\/strong>\u00a0y\u00a0<a title=\"Addon Selenium IDE\" href=\"http:\/\/release.seleniumhq.org\/selenium-ide\/2.5.0\/selenium-ide-2.5.0.xpi\">hacer clic a este enlace<\/a>\u00a0en caso de hacerlo en otro navegador descargar\u00e1 el addon y no lo instalar\u00e1 como debe ser. Puede\u00a0entrar a la web de <a title=\"Selenium\" href=\"http:\/\/docs.seleniumhq.org\/download\/\">Selenium<\/a>\u00a0e instalarlo seg\u00fan lo que usted necesite.\r\n\r\nSi has hecho clic en el addon y tambi\u00e9n en la opci\u00f3n \"allow\/permitir\" que aparece en la parte superior izquierda de tu navegador te\u00a0saldr\u00e1 una ventana como la que se muestra a continuaci\u00f3n.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/1_instalar_selenium.png\"><img class=\"alignnone wp-image-895 size-full\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/1_instalar_selenium.png\" alt=\"1 instalar selenium\" width=\"602\" height=\"386\" \/><\/a>\r\n\r\n&nbsp;\r\n\r\nLuego de la instalaci\u00f3n, un icono aparecer\u00e1 al lado derecho del navegador que dice 'Se' en color blanco.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/2_instalar_selenium-e1403219799269.png\"><img class=\"alignnone wp-image-896 size-full\" src=\"http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/06\/2_instalar_selenium-e1403219799269.png\" alt=\"2 instalar selenium\" width=\"179\" height=\"31\" \/><\/a>\r\n\r\nFinalmente, si logran visualizar este icono la instalaci\u00f3n de Selenium IDE ha sido exitosa.\r\n<h2>\u00bfComo usar Selenium IDE?<\/h2>\r\nEn primer lugar, debes dirigirte a la p\u00e1gina web que quieras automatizar. Luego, se hace clic en el icono de Selenium IDE y aparecer\u00e1 un cuadro como el que se muestra a continuaci\u00f3n el cual ya se encuentra capturando las acciones que realices en la pagina seleccionada.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/3_instalar_selenium1.png\"><img class=\"alignnone wp-image-900 size-full\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/3_instalar_selenium1.png\" alt=\"3 instalar selenium\" width=\"555\" height=\"542\" \/><\/a>\r\n\r\nA continuaci\u00f3n, se debe empezar a realizar las acciones que se \u00a0desee registrar en el navegador. Finalmente, al visualizar de nuevo la ventana del Selenium IDE obtendremos algo parecido a lo siguiente.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/4_instalar_selenium.png\"><img class=\"alignnone wp-image-901 size-full\" src=\"http:\/\/frontend-labs.com\/wp-content\/\/uploads\/2014\/06\/4_instalar_selenium.png\" alt=\"4 instalar selenium\" width=\"552\" height=\"542\" \/><\/a>\r\n\r\nPodemos observar que se ha registrado las acciones realizadas en la p\u00e1gina. Ahora hacemos clic en el circulo rojo para detener la grabaci\u00f3n y guardamos la prueba funcional realizada.\r\n\r\n&nbsp;\r\n<h2>\u00bfC\u00f3mo se usa Python con Selenium?<\/h2>\r\nEn caso que no conozcan mucho de python pueden revisar el<a title=\"Tutorial B\u00e1sico de Python \u2013 Parte I \u2013 Definici\u00f3n, Operadores y Tipos\" href=\"http:\/\/frontend-labs.com\/1122--tutorial-basico-de-python-i\" target=\"_blank\"> tutorial b\u00e1sico de python<\/a>.\r\n\r\nAntes de comenzar se debe ejecutar la siguiente linea de comando en la consola.\r\n\r\n[sourcecode language=\"bash\"]\r\nsudo apt-get install python-pip\r\nsudo pip install selenium\r\n[\/sourcecode]\r\n\r\nEl objetivo de este paso es verificar que se est\u00e1n mostrando todos los mensajes de errores correspondientes a cada campo seg\u00fan el valor ingresado.\r\n\r\nPrimero debemos exportar el archivo que creamos en el Selenium IDE desde File \/ Export Test Case as \/ Python 2 - Unitest - WebDriver y le asignaremos el nombre de <strong>test_case.py<\/strong>\r\n\r\nLuego de tener nuestro script, el siguiente paso es reutilizarlo\u00a0y en base a este crear todos los escenarios posibles que necesiten ser probados. En este caso crearemos una lista con todos los valores a ser probados con su mensaje de error correspondiente.\r\n\r\nPara agilizar el proceso de creaci\u00f3n de registros a ser probados dentro del formulario se puede utilizar la siguiente clase.\r\n\r\n[sourcecode language=\"python\"]\r\n# -*- coding: utf-8 -*-\r\n\r\nclass CreateForm():\r\n    def __init__(self, fields):\r\n        self.fields = dict()\r\n        self.fields['is_error'] = False\r\n        for key in fields.keys():\r\n            self.fields[key] = fields[key]\r\n        self.errors = list()\r\n\r\n    def addError(self, item, message, value):\r\n        assert item in self.fields.keys(), &quot;The item '%s' was not found in key's dict&quot; % item\r\n        error = dict()\r\n        error['location'] = item\r\n        error['message'] = message\r\n        error['value'] = value\r\n        self.errors.append(error)\r\n\r\n    def getList(self):\r\n        registers = list()\r\n        c = 1\r\n        for error in self.errors:\r\n            register = dict()\r\n            for item in self.fields.keys():\r\n                register[item] = self.fields[item]\r\n            register['cod'] = 'test_%d' % c\r\n            register[error['location']] = error['value']\r\n            register['is_error'] = True\r\n            register['error'] = error\r\n            registers.append(register)\r\n            c += 1\r\n        return registers\r\n[\/sourcecode]\r\n\r\nLa clase se debe guardar con el nombre de <strong>form_test.py.<\/strong>\u00a0Luego creamos otro archivo con el nombre de <strong>form_keys<\/strong><strong>.py\u00a0<\/strong>en el cual se ingresar\u00e1 los id's de los campos del formulario.\r\n\r\n[sourcecode language=\"python\"]\r\n# -*- coding: utf-8 -*-\r\n\r\nFIELD_NAME        = 'txtName'\r\nFIELD_LASTNAME    = 'txtLastName'\r\nFIELD_EMAIL       = 'txtEmail'\r\nFIELD_PASSWORD    = 'txtPassword1'\r\nFIELD_CONFIRM     = 'txtRepeatPassword'\r\nFIELD_DOCUMENT    = 'txtDocument'\r\nSELECT_DOCUMENT   = 'selDocument'\r\nSUBMIT_REGISTER   = 'sbmRegister'\r\n[\/sourcecode]\r\n\r\nAhora creamos el archivo <strong>form_input_data.py<\/strong> en el cual registraremos los valores por defecto que tendr\u00e1 el formulario y los errores que se van a verificar.\r\n\r\n[sourcecode language=\"python\"]\r\n# -*- coding: utf-8 -*-\r\nfrom form_keys import *\r\nfrom form_test import CreateForm\r\n\r\n# Declaro mensajes a repetirse\r\nMESSAGE_REQUIRED = u'Este campo es requerido.'\r\nMESSAGE_MAX = u'La longitud m\u00e1xima es de %d caracteres.'\r\nMESSAGE_MIN = u'La longitud m\u00ednima es de %d caracteres.'\r\nMESSAGE_ONLY_NUMBERS = u'Ingrese solo n\u00fameros.'\r\nMESSAGE_BAD_NAME = u'Solo letras, espacios y guiones (-)'\r\n\r\n# Registramos los valores por defecto que tendra el formulario, cuando el campo sea un select le asignamos un diccionario como valor\r\ndefault = dict()\r\ndefault[FIELD_NAME] = 'Nombre de Prueba'\r\ndefault[FIELD_LASTNAME] = 'Apellido de prueba'\r\ndefault[FIELD_EMAIL] = 'correo@demo.com'\r\ndefault[FIELD_PASSWORD] = 'probando123'\r\ndefault[FIELD_CONFIRM] = 'probando123'\r\ndefault[FIELD_DOCUMENT] = {'DNI':'54264895','RUC':'254152458963','Pasaporte':'4587DA45','Carn\u00e9 de Extranjer\u00eda':'584E4E5D5'}\r\n\r\n# Declaramos los errores\r\n# item : campo a ser testeado\r\n# message : el mensaje de error que deberia mostrar\r\n# value : el valor erroneo a ser ingresado\r\ntxtNameBadSpell = {'item': FIELD_NAME, 'message': MESSAGE_BAD_NAME, 'value': u'FULAN0000'}\r\ntxtNameMinCharacters = {'item': FIELD_NAME, 'message': MESSAGE_MIN % 2, 'value': 'C'}\r\ntxtNameRequired = {'item': FIELD_NAME, 'message': MESSAGE_REQUIRED, 'value': ''}\r\n\r\ntxtLastNameBadSpell = {'item': FIELD_LASTNAME, 'message': MESSAGE_BAD_NAME, 'value': u'PEP3$$$$'}\r\ntxtLastNameMinCharacters = {'item': FIELD_LASTNAME, 'message': MESSAGE_MIN % 2, 'value': 'C'}\r\ntxtLastNameRequired = {'item': FIELD_LASTNAME, 'message': MESSAGE_REQUIRED, 'value': ''}\r\n\r\ntxtEmailBadSpell = {'item': FIELD_EMAIL, 'message': u'Ingrese un email v\u00e1lido.', 'value': u'demo.pe'}\r\ntxtEmailRequired = {'item': FIELD_EMAIL, 'message': MESSAGE_REQUIRED, 'value': u''}\r\n\r\ntxtDocumentDniMin = {'item': FIELD_DOCUMENT, 'message': u'El DNI debe ser de 8 d\u00edgitos', 'value':{'DNI': '21587'} }\r\ntxtDocumentRucMin = {'item': FIELD_DOCUMENT, 'message': u'El RUC debe ser de 11 d\u00edgitos', 'value': {'RUC': '12857'} }\r\n\r\n# Registramos los errores\r\nregister = CreateForm(default)\r\nregister.addError(**txtNameBadSpell)\r\nregister.addError(**txtNameMinCharacters)\r\nregister.addError(**txtNameRequired)\r\nregister.addError(**txtLastNameBadSpell)\r\nregister.addError(**txtLastNameMinCharacters)\r\nregister.addError(**txtLastNameRequired)\r\nregister.addError(**txtEmailBadSpell)\r\nregister.addError(**txtEmailRequired)\r\nregister.addError(**txtDocumentDniMin)\r\nregister.addError(**txtDocumentRucMin)\r\n[\/sourcecode]\r\n\r\nAhora que tenemos toda la estructura de las pruebas procedemos a modificar el archivo <strong>test_case.py<\/strong> para acoplarlo a lo que hemos realizado. Es necesario resaltar que la intenci\u00f3n de estos pasos es mostrar el modelo de trabajo con selenium y python. Los datos ingresados en estos archivos est\u00e1n basados en la prueba funcional que yo he realizado.\r\n\r\nEl archivo obtenido por Selenium ser\u00e1 editado manualmente. Se insertar\u00e1 un for el cual recorrer\u00e1 la lista de los errores agregados a este.\r\n\r\n[sourcecode language=\"python\"]\r\nfor data in register.getList():\r\n    print u'--&gt; Probando la prueba: %s ' % data['cod']\r\n    driver.find_element_by_id(FIELD_NAME).clear()\r\n    driver.find_element_by_id(FIELD_NAME).send_keys(data[FIELD_NAME])\r\n    self.printText( 'nombre ingresado')\r\n[\/sourcecode]\r\n\r\nAl finalizar el for se agregar\u00e1 el <strong>assert\u00a0<\/strong>el cual tiene como funci\u00f3n comprobar que el error mostrado es el indicado.\r\n\r\n[sourcecode language=\"python\"]\r\nif data['is_error']:\r\n    driver.find_element_by_id(SUBMIT_REGISTER).click()\r\n    error_id = driver.find_element_by_id(data['error']['location']).get_attribute('data-parsley-id')\r\n    message = driver.find_element_by_css_selector('#parsley-id-%s &gt; li' % error_id).text\r\n    assert data['error']['message'] == message, u'Mensaje erroneo en la prueba: %s , %s == %s' % (data['cod'], data['error']['message'], message)\r\n    print u'--&gt; Exito en %s el campo %s dio como mensaje %s al ingresar %s' % (data['cod'], data['error']['location'], data['error']['message'], data['error']['value'])\r\n[\/sourcecode]\r\n\r\nFinalmente, nuestro archivo <strong>test_case.py<\/strong> deberia quedar algo asi.\r\n\r\n[sourcecode language=\"python\"]\r\n# -*- coding: utf-8 -*-\r\nfrom form_input_data import register\r\nfrom selenium import webdriver\r\nfrom form_keys import *\r\nfrom selenium.webdriver.support.ui import Select\r\nfrom selenium.common.exceptions import NoSuchElementException, NoAlertPresentException\r\nimport unittest\r\n\r\nclass PruebasDeRegistro(unittest.TestCase):\r\n    def setUp(self):\r\n        self.driver = webdriver.Firefox()\r\n        self.base_url = &quot;http:\/\/paginadeprueba.pe\/registro&quot;\r\n        self.verificationErrors = []\r\n        self.accept_next_alert = False\r\n        self.debug = False\r\n\r\n    def printText(self, text):\r\n        if self.debug:\r\n            print text\r\n\r\n    def test_pruebas_de_registro(self):\r\n        driver = self.driver\r\n        driver.get(self.base_url + &quot;\/&quot;)\r\n\r\n        for data in register.getList():\r\n            print u'--&gt; Probando la prueba: %s ' % data['cod']\r\n            driver.find_element_by_id(FIELD_NAME).clear()\r\n            driver.find_element_by_id(FIELD_NAME).send_keys(data[FIELD_NAME])\r\n            self.printText( 'nombre ingresado')\r\n\r\n            driver.find_element_by_id(FIELD_LASTNAME).clear()\r\n            driver.find_element_by_id(FIELD_LASTNAME).send_keys(data[FIELD_LASTNAME])\r\n            self.printText('apellido ingresado')\r\n\r\n            driver.find_element_by_css_selector(FIELD_EMAIL).clear()\r\n            driver.find_element_by_css_selector(FIELD_EMAIL).send_keys(data[FIELD_EMAIL])\r\n            self.printText( 'correo ingresado' )\r\n\r\n            driver.find_element_by_id(FIELD_PASSWORD).clear()\r\n            driver.find_element_by_id(FIELD_PASSWORD).send_keys(data[FIELD_PASSWORD])\r\n            self.printText( 'contrase\u00f1a ingresado')\r\n\r\n            driver.find_element_by_id(FIELD_CONFIRM).clear()\r\n            driver.find_element_by_id(FIELD_CONFIRM).send_keys(data[FIELD_CONFIRM])\r\n            self.printText( 'contrase\u00f1a repetida ingresado')\r\n\r\n            Select(driver.find_element_by_id(SELECT_DOCUMENT)).select_by_visible_text(data[FIELD_DOCUMENT].keys()[0])\r\n            driver.find_element_by_id(FIELD_DOCUMENT).clear()\r\n            driver.find_element_by_id(FIELD_DOCUMENT).send_keys(data[FIELD_DOCUMENT][data[FIELD_DOCUMENT].keys()[0]])\r\n            self.printText( 'documento ingresado')\r\n\r\n            if data['is_error']:\r\n                driver.find_element_by_id(SUBMIT_REGISTER).click()\r\n                error_id = driver.find_element_by_id(data['error']['location']).get_attribute('data-parsley-id')\r\n                message = driver.find_element_by_css_selector('#parsley-id-%s &gt; li' % error_id).text\r\n                assert data['error']['message'] == message, u'Mensaje erroneo en la prueba: %s , %s == %s' % (data['cod'], data['error']['message'], message)\r\n                print u'--&gt; Exito en %s el campo %s dio como mensaje %s al ingresar %s' % (data['cod'], data['error']['location'], data['error']['message'], data['error']['value'])\r\n\r\n    def is_element_present(self, how, what):\r\n        try: self.driver.find_element(by=how, value=what)\r\n        except NoSuchElementException, e: return False\r\n        return True\r\n\r\n    def is_alert_present(self):\r\n        try: self.driver.switch_to_alert()\r\n        except NoAlertPresentException, e: return False\r\n        return True\r\n\r\n    def close_alert_and_get_its_text(self):\r\n        try:\r\n            alert = self.driver.switch_to_alert()\r\n            alert_text = alert.text\r\n            if self.accept_next_alert:\r\n                alert.accept()\r\n            else:\r\n                alert.dismiss()\r\n            return alert_text\r\n        finally: self.accept_next_alert = True\r\n\r\n    def tearDown(self):\r\n        self.driver.quit()\r\n        self.assertEqual([], self.verificationErrors)\r\n\r\nif __name__ == &quot;__main__&quot;:\r\n    unittest.main()\r\n[\/sourcecode]\r\n\r\nEl esquema explicado aqu\u00ed sirve mas que nada para probar si el formulario muestra el mensaje de error correspondiente al valor ingresado. Sin embargo, Selenium sirve para validar diversos flujos que tiene un sistema web.\r\n\r\nPara mayor informaci\u00f3n pueden visitar la <a title=\"Documentaci\u00f3n de Selenium\" href=\"http:\/\/selenium-python.readthedocs.org\/\" target=\"_blank\">documentaci\u00f3n de Selenium<\/a>.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/selenium_pruebas_funcionales.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Fri, 20 Jun 2014 15:49:46 +0000","created_by":1,"updated_at":"Thu, 24 Jul 2014 12:21:41 +0000","updated_by":1,"published_at":"Fri, 20 Jun 2014 15:49:46 +0000","published_by":1},{"id":940,"title":"La importancia del comando \"Git stash\" en un proyecto","slug":"la-importancia-del-comando-git-stash-en-un-proyecto","markdown":"\nEn el desarrollo de un proyecto es necesario utilizar un sistema de control de versiones como [Git ](http:\/\/git-scm.com\/) para tener un orden en las modificaciones que se dan por parte de los miembros del equipo. Muchas veces en proyectos grandes intervienen varios desarrolladores, donde se modifican o crean archivos para atender los requerimientos que se solicitan en el proyecto. Con el uso del Git, que es un gestor de versiones, se usa el concepto de ramas que son utilizadas para desarrollar funcionalidades aisladas unas de otras.\n\nGit stash\n---------\n\n Git nos brinda muchos comandos para controlar estas ramas, una de ellas es el \"[git stash](http:\/\/git-scm.com\/docs\/git-stash)\", que guarda las modificaciones locales en temporal y vuelve el directorio de trabajo a un estado inicial (como si no se hubiese hecho ning\u00fan cambio en la rama). \u00bfEn qu\u00e9 casos usarlo?\n---------------------\n\n Supongamos que estamos en un proyecto con una funcionalidad que est\u00e1 en una rama diferente (rama hija de master), siendo **master **la rama principal de nuestro proyecto. - task#01 : Funcionalidad 1\n\n[![git stash](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/git-stash.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/git-stash.jpg) Ya hemos estado haciendo cambios en la rama **\"task#01\"** y de pronto sucede que esta funcionalidad se debe interrumpir para hacer un cambio de \u00faltimo minuto en la rama **\"master\"**, con esto **git** muchas veces no me va permitir cambiar de rama hasta que halla un commit confirmando mis cambios, entonces **\u00bfQu\u00e9 hago?**. Uno pensar\u00eda, \"\u00a1F\u00e1cil!, hago un commit de mis cambios, cambio de rama y sigo con el flujo\", pero esto es lo que **no se debe hacer**, ya que por **buenas practicas yo no debo hacer un commit hasta haber terminado mi requerimiento**. Es aqu\u00ed donde entra el poder del **\"git stash\"**. ### Git stash:\n\n - Estamos actualmente en la rama task#01 y hago un \"**git status**\" para ver mis cambios. [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git status On branch task#01 Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git checkout -- <file>...\" to discard changes in working directory) modified: index.html no changes added to commit (use \"git add\" and\/or \"git commit -a\") [\/sourcecode] - Como vemos tenemos un cambio en el index.html y para cambiar de rama sin ningun problema debo hacer un \"**git stash**\" [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash Saved working directory and index state WIP on task#01: 0ef3c38 Git : registrando el proyecto en el repositorio git HEAD is now at 0ef3c38 Git : registrando el proyecto en el repositorio git [\/sourcecode] Con esto guardo los cambios de mi rama en un stash temporal - Luego reviso si efectivamente la rama est\u00e1 limpia sin cambios, con \"**git status**\" [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git st On branch task#01 nothing to commit, working directory clean [\/sourcecode] =O! \u00a1No hay cambios! y puedo facilmente cambiar de rama, pero ***\u00bfEn donde est\u00e1n mis cambios?***### Git stash list:\n\n - Para poder visualizar una lista de stash debo hacer un \"**git stash list**\" [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash list stash@{0}: WIP on task#01: 0ef3c38 Git : registrando el proyecto en el repositorio (END) [\/sourcecode] Como vemos nos muestra una lista de los stash que tenemos, donde: - stash@{0}: - Es el ID del stash\n- WIP on task#01: - Es el nombre de la rama donde est\u00e1\n- 0ef3c38 Git : registrando el proyecto en el repositorio - Es el nombre del stash\n\n Actualmente solo tenemos un stash que toma como nombre el \u00faltimo commit, pero ***\u00bfSi quiero asignarle un nombre a mi stash?***### Git stash save:\n\n - Para asignar un nombre debo hacer un **git stash save \"nombre de mi stash\" **. Primero hago un cambio en otro archivo, luego tipeo \"**git status**\" para ver mis cambios y al final \"**git stash save**\". [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git st On branch task#01 Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git checkout -- <file>...\" to discard changes in working directory) modified: dia.css no changes added to commit (use \"git add\" and\/or \"git commit -a\") [\/sourcecode] [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash save \"requerimiento 2\" Saved working directory and index state On task#01: requerimiento 2 HEAD is now at 0ef3c38 Git : registrando el proyecto en el repositorio git [\/sourcecode] En este caso estoy guardando el **git stash** con el nombre de \"**Requerimiento 2**\" - Para ver mi lista de stash, hago un \"**git stash list**\" [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash list stash@{0}: On task#01: requerimiento 2 stash@{1}: WIP on task#01: 0ef3c38 Git : registrando el proyecto en el repositor (END) [\/sourcecode] Como vemos se cre\u00f3 el segundo stash con el nombre que le asign\u00e9 y siempre el nuevo **stash** lo toma como indice 0 (**stash@{0}**). Una vez que me fu\u00ed a otra rama y termine con el otro cambio que me ped\u00edan, volviendo a la rama task#01 ***\u00bfC\u00f3mo recupero mis cambios de un stash que hice?***### Git stash pop: \n\n Para aplicar los cambios de un stash se usa **git stash pop** y se puede aplicar de dos formas: - **git stash pop** - Que por defecto toma el indice cero (0) del **stash list**.\n- **git stash pop stash@{0}** - En este caso antepongo la palabra stash@ y le asigno el ID del stash dentro de llaves, esto me permite poner cualquier **ID del stash list** 0,1,2 .. en caso de que quiera especificar el stash que quiera aplicar\n\n [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/Biblioteca Xen\/www\/PaginaWeb (task#01) $ git stash pop On branch task#01 Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git checkout -- <file>...\" to discard changes in working directory) modified: dia.css no changes added to commit (use \"git add\" and\/or \"git commit -a\") [\/sourcecode] Como vemos se aplicaron los cambios del \u00faltimo stash que hice, listo para continuar con mis cambios. Realizo un **stash list** para ver mi lista actual de stash [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash list stash@{0}: WIP on task#01: 0ef3c38 Git : registro del proyecto en el repositor (END) [\/sourcecode] Como vemos solo tengo un stash en la lista con el indice cero {0} y se elimin\u00f3 el \u00faltimo stash con el nombre de \"**requerimiento 2**\", a esto de nos viene otra pregunta: ***\u00bfC\u00f3mo hago para ver los cambios de un stash antes de aplicarlo a mi rama?***### Git stash show: \n\n Para ver los cambios de un stash se usa **git stash show stash@{0} -u**, donde especifico el indice del stash que en este caso es cero{0} [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash show stash@{0} -u diff --git a\/index.html b\/index.html index b39bdee..cbd8100 100644 --- a\/index.html +++ b\/index.html @@ -70,6 +70,10 @@ *\/ }); + var newMethod = function (){ + return false; + } + [\/sourcecode] De esta manera puedo ver los cambios de un stash, pero si quiero aplicar el stash sin eliminarlo del **stash list** \u00bfC\u00f3mo hago?. ### Git stash apply:\n\n Este comando nos ayuda a aplicar un stash sin eliminarlo de la lista de stash y se puede aplicar de dos formas: - **git stash apply** - Que por defecto toma el indice cero (0) del **stash list**.\n- **git stash apply - - 0**\u00a0- En este caso antepongo dos guiones \"- -\" y le asigno el ID del stash, esto me permite poner cualquier **ID del stash list** 0,1,2 .. en caso de que quiera especificar el stash que quiera aplicar\n\n [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash apply On branch task#01 Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git checkout -- <file>...\" to discard changes in working directory) modified: dia.css modified: index.html no changes added to commit (use \"git add\" and\/or \"git commit -a\") [\/sourcecode] Luego esto reviso la lista de stash con git stash list [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash list stash@{0}: WIP on task#01: 0ef3c38 Git : registro del proyecto en el repositor (END) [\/sourcecode] Con esto comprobamos que aplicamos los cambios del stash a nuestra rama sin eliminarlo de la lista. ### Git stash drop:\n\n Para eliminar un stash de lista debemos poner **git stash drop -q stash@{0}**, donde le asignamos el indice del stash [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash drop -q stash@{0} [\/sourcecode] Luego reviso la lsita de stash [sourcecode language=\"bash\"] Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $ git stash list Xen@XEN-PC \/D\/www\/PaginaWeb (task#01) $_ [\/sourcecode] Como vemos ya no se encuentra el stash en al lista. Les invito a leer la documentaci\u00f3n del git stash, en [este enlace](http:\/\/git-scm.com\/docs\/git-stash) para mayor informaci\u00f3n.\n","html":"En el desarrollo de un proyecto es necesario utilizar un sistema de control de versiones como <a href=\"http:\/\/git-scm.com\/\">Git <\/a> para tener un orden en las modificaciones que se dan por parte de los miembros del equipo.\r\n\r\nMuchas veces en proyectos grandes intervienen varios desarrolladores, donde se modifican o crean archivos para atender los requerimientos que se solicitan en el proyecto. Con el uso del Git, que es un gestor de versiones, se usa el concepto de ramas que son utilizadas para desarrollar funcionalidades aisladas unas de otras.\r\n<h2>Git stash<\/h2>\r\nGit nos brinda muchos comandos para controlar estas ramas, una de ellas es el \"<a href=\"http:\/\/git-scm.com\/docs\/git-stash\">git stash<\/a>\", que guarda las modificaciones locales en temporal y vuelve el directorio de trabajo a un estado inicial (como si no se hubiese hecho ning\u00fan cambio en la rama).\r\n<h2>\u00bfEn qu\u00e9 casos usarlo?<\/h2>\r\nSupongamos que estamos en un proyecto con una funcionalidad que est\u00e1 en una rama diferente (rama hija de master), siendo <strong>master <\/strong>la rama principal de nuestro proyecto.\r\n<ul>\r\n\t<li>task#01 : Funcionalidad 1<\/li>\r\n<\/ul>\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/git-stash.jpg\"><img class=\"alignnone size-full wp-image-945\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/git-stash.jpg\" alt=\"git stash\" width=\"499\" height=\"146\" \/><\/a>\r\n\r\nYa hemos estado haciendo cambios en la rama <strong>\"task#01\"<\/strong> y de pronto sucede que esta funcionalidad se debe interrumpir para hacer un cambio de \u00faltimo minuto en la rama <strong>\"master\"<\/strong>, con esto <strong>git<\/strong> muchas veces no me va permitir cambiar de rama hasta que halla un commit confirmando mis cambios, entonces <strong>\u00bfQu\u00e9 hago?<\/strong>.\r\n\r\nUno pensar\u00eda, \"\u00a1F\u00e1cil!, hago un commit de mis cambios, cambio de rama y sigo con el flujo\", pero esto es lo que <strong style=\"color: red;\">no se debe hacer<\/strong>, ya que por <strong>buenas practicas yo no debo hacer un commit hasta haber terminado mi requerimiento<\/strong>. Es aqu\u00ed donde entra el poder del <strong>\"git stash\"<\/strong>.\r\n<h3>Git stash:<\/h3>\r\n- Estamos actualmente en la rama task#01 y hago un \"<strong>git status<\/strong>\" para ver mis cambios.\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git status\r\nOn branch task#01\r\nChanges not staged for commit:\r\n  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)\r\n  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)\r\n\r\n        modified:   index.html\r\n\r\nno changes added to commit (use &quot;git add&quot; and\/or &quot;git commit -a&quot;)\r\n[\/sourcecode]\r\n\r\n- Como vemos tenemos un cambio en el index.html y para cambiar de rama sin ningun problema debo hacer un \"<strong>git stash<\/strong>\"\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash\r\nSaved working directory and index state WIP on task#01: 0ef3c38 Git : registrando el proyecto en el repositorio git\r\nHEAD is now at 0ef3c38 Git : registrando el proyecto en el repositorio git\r\n[\/sourcecode]\r\n\r\nCon esto guardo los cambios de mi rama en un stash temporal\r\n\r\n- Luego reviso si efectivamente la rama est\u00e1 limpia sin cambios, con \"<strong>git status<\/strong>\"\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git st\r\nOn branch task#01\r\nnothing to commit, working directory clean\r\n[\/sourcecode]\r\n\r\n=O! \u00a1No hay cambios! y puedo facilmente cambiar de rama, pero <strong><em>\u00bfEn donde est\u00e1n mis cambios?<\/em><\/strong>\r\n<h3>Git stash list:<\/h3>\r\n- Para poder visualizar una lista de stash debo hacer un \"<strong>git stash list<\/strong>\"\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash list\r\nstash@{0}: WIP on task#01: 0ef3c38 Git : registrando el proyecto en el repositorio\r\n(END)\r\n[\/sourcecode]\r\n\r\nComo vemos nos muestra una lista de los stash que tenemos, donde:\r\n<ul>\r\n\t<li>stash@{0}: - Es el ID del stash<\/li>\r\n\t<li>WIP on task#01: - Es el nombre de la rama donde est\u00e1<\/li>\r\n\t<li>0ef3c38 Git : registrando el proyecto en el repositorio - Es el nombre del stash<\/li>\r\n<\/ul>\r\nActualmente solo tenemos un stash que toma como nombre el \u00faltimo commit, pero <strong><em>\u00bfSi quiero asignarle un nombre a mi stash?<\/em><\/strong>\r\n<h3>Git stash save:<\/h3>\r\n- Para asignar un nombre debo hacer un <strong>git stash save \"nombre de mi stash\" <\/strong>.\r\nPrimero hago un cambio en otro archivo, luego tipeo \"<strong>git status<\/strong>\" para ver mis cambios y al final \"<strong>git stash save<\/strong>\".\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git st\r\nOn branch task#01\r\nChanges not staged for commit:\r\n  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)\r\n  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)\r\n\r\n        modified:   dia.css\r\n\r\nno changes added to commit (use &quot;git add&quot; and\/or &quot;git commit -a&quot;)\r\n[\/sourcecode]\r\n\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash save &quot;requerimiento 2&quot;\r\nSaved working directory and index state On task#01: requerimiento 2\r\nHEAD is now at 0ef3c38 Git : registrando el proyecto en el repositorio git\r\n[\/sourcecode]\r\n\r\nEn este caso estoy guardando el <strong>git stash<\/strong> con el nombre de \"<strong>Requerimiento 2<\/strong>\"\r\n\r\n- Para ver mi lista de stash, hago un \"<strong>git stash list<\/strong>\"\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash list\r\nstash@{0}: On task#01: requerimiento 2\r\nstash@{1}: WIP on task#01: 0ef3c38 Git : registrando el proyecto en el repositor\r\n(END)\r\n[\/sourcecode]\r\n\r\nComo vemos se cre\u00f3 el segundo stash con el nombre que le asign\u00e9 y siempre el nuevo <strong>stash<\/strong> lo toma como indice 0 (<strong>stash@{0}<\/strong>). Una vez que me fu\u00ed a otra rama y termine con el otro cambio que me ped\u00edan, volviendo a la rama task#01 <strong><em>\u00bfC\u00f3mo recupero mis cambios de un stash que hice?<\/em><\/strong>\r\n<h3>Git stash pop: <\/h3>\r\nPara aplicar los cambios de un stash se usa <strong>git stash pop<\/strong> y se puede aplicar de dos formas:\r\n<ul>\r\n\t<li><strong>git stash pop<\/strong> - Que por defecto toma el indice cero (0) del <strong>stash list<\/strong>.<\/li>\r\n\t<li><strong>git stash pop stash@{0}<\/strong> - En este caso antepongo la palabra stash@ y le asigno el ID del stash dentro de llaves, esto me permite poner cualquier <strong>ID del stash list<\/strong> 0,1,2 .. en caso de que quiera especificar el stash que quiera aplicar<\/li>\r\n<\/ul>\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/Biblioteca Xen\/www\/PaginaWeb (task#01)\r\n$ git stash pop\r\nOn branch task#01\r\nChanges not staged for commit:\r\n  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)\r\n  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)\r\n\r\n        modified:   dia.css\r\n\r\nno changes added to commit (use &quot;git add&quot; and\/or &quot;git commit -a&quot;)\r\n[\/sourcecode]\r\n\r\nComo vemos se aplicaron los cambios del \u00faltimo stash que hice, listo para continuar con mis cambios.\r\nRealizo un <strong>stash list<\/strong> para ver mi lista actual de stash\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash list\r\nstash@{0}: WIP on task#01: 0ef3c38 Git : registro del proyecto en el repositor\r\n(END)\r\n[\/sourcecode]\r\n\r\nComo vemos solo tengo un stash en la lista con el indice cero {0} y se elimin\u00f3 el \u00faltimo stash con el nombre de \"<strong>requerimiento 2<\/strong>\", a esto de nos viene otra pregunta: <strong><em>\u00bfC\u00f3mo hago para ver los cambios de un stash antes de aplicarlo a mi rama?<\/em><\/strong>\r\n<h3>Git stash show: <\/h3>\r\nPara ver los cambios de un stash se usa <strong>git stash show stash@{0} -u<\/strong>, donde especifico el indice del stash que en este caso es cero{0}\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash show stash@{0} -u\r\ndiff --git a\/index.html b\/index.html\r\nindex b39bdee..cbd8100 100644\r\n--- a\/index.html\r\n+++ b\/index.html\r\n@@ -70,6 +70,10 @@\r\n                                *\/\r\n                        });\r\n\r\n+                       var newMethod = function (){\r\n+                               return false;\r\n+                       }\r\n+\r\n[\/sourcecode]\r\n\r\nDe esta manera puedo ver los cambios de un stash, pero si quiero aplicar el stash sin eliminarlo del <strong>stash list<\/strong> \u00bfC\u00f3mo hago?.\r\n<h3>Git stash apply:<\/h3>\r\nEste comando nos ayuda a aplicar un stash sin eliminarlo de la lista de stash y se puede aplicar de dos formas:\r\n<ul>\r\n\t<li><strong>git stash apply<\/strong> - Que por defecto toma el indice cero (0) del <strong>stash list<\/strong>.<\/li>\r\n\t<li><strong>git stash apply - - 0<\/strong>\u00a0- En este caso antepongo dos guiones \"- -\" y le asigno el ID del stash, esto me permite poner cualquier <strong>ID del stash list<\/strong> 0,1,2 .. en caso de que quiera especificar el stash que quiera aplicar<\/li>\r\n<\/ul>\r\n\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash apply\r\nOn branch task#01\r\nChanges not staged for commit:\r\n  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)\r\n  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)\r\n\r\n        modified:   dia.css\r\n        modified:   index.html\r\n\r\nno changes added to commit (use &quot;git add&quot; and\/or &quot;git commit -a&quot;)\r\n[\/sourcecode]\r\nLuego esto reviso la lista de stash con git stash list\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash list\r\nstash@{0}: WIP on task#01: 0ef3c38 Git : registro del proyecto en el repositor\r\n(END)\r\n[\/sourcecode]\r\nCon esto comprobamos que aplicamos los cambios del stash a nuestra rama sin eliminarlo de la lista.\r\n\r\n<h3>Git stash drop:<\/h3>\r\nPara eliminar un stash de lista debemos poner <strong>git stash drop -q stash@{0}<\/strong>, donde le asignamos el indice del stash\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash drop -q stash@{0}\r\n[\/sourcecode]\r\nLuego reviso la lsita de stash\r\n[sourcecode language=\"bash\"]\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$ git stash list\r\n\r\nXen@XEN-PC \/D\/www\/PaginaWeb (task#01)\r\n$_\r\n[\/sourcecode]\r\nComo vemos ya no se encuentra el stash en al lista.\r\n\r\nLes invito a leer la documentaci\u00f3n del git stash, en <a href=\"http:\/\/git-scm.com\/docs\/git-stash\">este enlace<\/a> para mayor informaci\u00f3n.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/bannerGit.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":7,"created_at":"Sun, 22 Jun 2014 22:38:49 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:28:45 +0000","updated_by":1,"published_at":"Sun, 22 Jun 2014 22:38:49 +0000","published_by":1},{"id":985,"title":"Paquetes de Sublime Text para acelerar tu trabajo","slug":"paquetes-de-sublime-text-para-acelerar-tu-trabajo","markdown":"\nSublime Text\u00a0 es uno de los editores de c\u00f3digo\u00a0m\u00e1s r\u00e1pidos que ha surgido en los \u00faltimos a\u00f1os. Cuenta con una gran comunidad \u00a0que produce muchos paquetes (o plugins) para acelerar el desarrollo de nuestros proyectos. Soporta las plataformas de\u00a0OS X, Linux y Windows. Si a\u00fan no est\u00e1s utilizando Sublime Text\u00a0puedes encontrar m\u00e1s informaci\u00f3n y descargar la versi\u00f3n 2 [aqu\u00ed](http:\/\/www.sublimetext.com\/)\u00a0o la versi\u00f3n 3 (beta) [aqu\u00ed](http:\/\/www.sublimetext.com\/3).\u00a0El d\u00eda de hoy veremos algunos tips y paquetes que te pueden ser de mucha utilidad:\n\nAtajos de teclado\n=================\n\n Todas las combinaciones de teclado que vienen por defecto con Sublime se encuentran en el men\u00fa Preferences -> Key Binding - Default [![Captura de pantalla 2014-03-17 a la(s) 16.06.28](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.06.28.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.06.28.png) Para editar o agregar alg\u00fan atajo tendremos que ubicar y copiar la parte de c\u00f3digo que queremos personalizar desde el archivo \"Key Bindings - Default\" y luego pegarla en el archivo \"Key Bindings - User\", del mismo men\u00fa. Por ejemplo si quisi\u00e9ramos agregar este atajo \"ctrl+alt+c\" para poder \u00a0comentar bloques de c\u00f3digo con nuestro teclado tendr\u00edamos que poner las siguientes l\u00edneas (en \"Key Bindings - User\"): [code lang=\"javascript\"] { \"keys\": [\"ctrl+\/\"], \"command\": \"toggle_comment\", \"args\": { \"block\": false } }, { \"keys\": [\"ctrl+shift+c\"], \"command\": \"toggle_comment\", \"args\": { \"block\": true } }, [\/code] Otra de las funciones ocultas y que ahorra tiempo es el de copiar una l\u00ednea de c\u00f3digo. No necesitamos seleccionar toda la l\u00ednea, simplemente ubicar el cursor en cualquier parte de \u00e9sta y pulsar \"ctrl+c\". Paquetes\n========\n\n Para poder instalar paquetes necesitas instalar el \"Package control\", s\u00f3lo tienes que copiar un bloque de c\u00f3digo en la consola de Sublime (men\u00fa View -> Show console). Entra a [este link](https:\/\/sublime.wbond.net\/installation) para las instrucciones. Una vez que ya tengas el Package Control, puedes ir al men\u00fa Preferences -> Package Control -> Install Package o usar el atajo \"ctrl+shift+p\" para empezar a buscar cualquiera los paquetes que listo abajo. [![Captura de pantalla 2014-03-17 a la(s) 16.41.46](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.41.46.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.41.46.png) [SideBarEnhancements](https:\/\/github.com\/titoBouzout\/SideBarEnhancements) Agrega mejoras \u00a0a los archivos y carpetas de la barra lateral, opciones muy usadas como \"Abrir con...\", \"Buscar en proyecto\", \"Renombrar\", \"Abrir en explorador\", etc [![Captura de pantalla 2014-03-17 a la(s) 16.09.06](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.09.06.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.09.06.png) [BracketHighligter](https:\/\/github.com\/facelessuser\/BracketHighlighter) Bracket Highlighter resalta una variedad de llaves y etiquetas como: `[]`, `()`, `{}`, `\"\"`, `''`, `<tag><\/tag>`, para identificar el inicio y fin de l\u00edneas de c\u00f3digo de forma m\u00e1s r\u00e1pida. ![](https:\/\/github-camo.global.ssl.fastly.net\/771f9df16f29a134369cbcb0913f55932d156983\/687474703a2f2f646c2e64726f70626f782e636f6d2f752f3334323639382f427261636b6574486967686c6967687465722f4578616d706c65312e706e67)[Emmet](http:\/\/docs.emmet.io\/) Emmet te permite escribir grandes bloques de c\u00f3digo en HTML a la velocidad de la luz, todo lo que tienes que usar son los ya conocidos selectores CSS. [GitGutter](https:\/\/github.com\/jisaacks\/GitGutter) Este paquete muestra un icono en el \u00e1rea izquierda de la ventana de sublime, indicando si una linea de c\u00f3digo ha sido insertada, modificada o borrada. ![](https:\/\/raw.github.com\/jisaacks\/GitGutter\/master\/screenshot.png)[HTMLBeautify](https:\/\/github.com\/rareyman\/HTMLBeautify) Da formato (indentaci\u00f3n) a c\u00f3digo HTML haciendo que sea m\u00e1s f\u00e1cil de leer. [JsFormat](https:\/\/github.com\/jdc0589\/JsFormat) Este es tambi\u00e9n un paquete para dar formato a c\u00f3digo en Javascript. [Sublimerge Pro](http:\/\/www.sublimerge.com\/) Busca diferencias entre dos archivos, resaltando los cambios y l\u00edneas con colores y de manera muy intuitiva. Para usarlo tendr\u00e1s que usar \"ctrl+alt+d\". ![](http:\/\/www.sublimerge.com\/Images\/sublimerge-pro-linux.png)Temas\n=====\n\n[Theme - Nil](https:\/\/github.com\/nilium\/st2-nil-theme)![](https:\/\/github.com\/nilium\/st2-nil-theme\/raw\/master\/dark.png)[Theme - Spacegray](http:\/\/kkga.github.io\/spacegray\/)![](http:\/\/kkga.github.io\/spacegray\/assets\/spacegray.png)[Theme - Soda](https:\/\/github.com\/buymeasoda\/soda-theme\/)![](https:\/\/github-camo.global.ssl.fastly.net\/39feeec102d65ccd7a5b7d10bcf3acc674c8705b\/687474703a2f2f6275796d6561736f64612e6769746875622e636f6d2f736f64612d7468656d652f696d616765732f73637265656e73686f74732f736f64612d322d6461726b2d7468656d652e706e673f763d32) Si conoces m\u00e1s paquetes o tips para Sublime Text, puedes compartirlos en los comentarios :)\n","html":"Sublime Text\u00a0 es uno de los editores de c\u00f3digo\u00a0m\u00e1s r\u00e1pidos que ha surgido en los \u00faltimos a\u00f1os. Cuenta con una gran comunidad \u00a0que produce muchos paquetes (o plugins) para acelerar el desarrollo de nuestros proyectos. Soporta las plataformas de\u00a0OS X, Linux y Windows.\r\n\r\nSi a\u00fan no est\u00e1s utilizando Sublime Text\u00a0puedes encontrar m\u00e1s informaci\u00f3n y descargar la versi\u00f3n 2 <a href=\"http:\/\/www.sublimetext.com\/\" target=\"_blank\">aqu\u00ed<\/a>\u00a0o la versi\u00f3n 3 (beta) <a href=\"http:\/\/www.sublimetext.com\/3\" target=\"_blank\">aqu\u00ed<\/a>.\u00a0El d\u00eda de hoy veremos algunos tips y paquetes que te pueden ser de mucha utilidad:\r\n<h1>Atajos de teclado<\/h1>\r\nTodas las combinaciones de teclado que vienen por defecto con Sublime se encuentran en el men\u00fa Preferences -&gt; Key Binding - Default\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.06.28.png\"><img class=\"alignnone size-full wp-image-120\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.06.28.png\" alt=\"Captura de pantalla 2014-03-17 a la(s) 16.06.28\" width=\"451\" height=\"338\" \/><\/a>\r\nPara editar o agregar alg\u00fan atajo tendremos que ubicar y copiar la parte de c\u00f3digo que queremos personalizar desde el archivo \"Key Bindings - Default\" y luego pegarla en el archivo \"Key Bindings - User\", del mismo men\u00fa. Por ejemplo si quisi\u00e9ramos agregar este atajo \"ctrl+alt+c\" para poder \u00a0comentar bloques de c\u00f3digo con nuestro teclado tendr\u00edamos que poner las siguientes l\u00edneas (en \"Key Bindings - User\"):\r\n\r\n[code lang=\"javascript\"]\r\n{ &quot;keys&quot;: [&quot;ctrl+\/&quot;], &quot;command&quot;: &quot;toggle_comment&quot;, &quot;args&quot;: { &quot;block&quot;: false } },\r\n{ &quot;keys&quot;: [&quot;ctrl+shift+c&quot;], &quot;command&quot;: &quot;toggle_comment&quot;, &quot;args&quot;: { &quot;block&quot;: true } },\r\n[\/code]\r\n\r\nOtra de las funciones ocultas y que ahorra tiempo es el de copiar una l\u00ednea de c\u00f3digo. No necesitamos seleccionar toda la l\u00ednea, simplemente ubicar el cursor en cualquier parte de \u00e9sta y pulsar \"ctrl+c\".\r\n<h1>Paquetes<\/h1>\r\nPara poder instalar paquetes necesitas instalar el \"Package control\", s\u00f3lo tienes que copiar un bloque de c\u00f3digo en la consola de Sublime (men\u00fa View -&gt; Show console). Entra a <a href=\"https:\/\/sublime.wbond.net\/installation\" target=\"_blank\">este link<\/a> para las instrucciones.\r\n\r\nUna vez que ya tengas el Package Control, puedes ir al men\u00fa Preferences -&gt; Package Control -&gt; Install Package o usar el atajo \"ctrl+shift+p\" para empezar a buscar cualquiera los paquetes que listo abajo.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.41.46.png\"><img class=\"alignnone size-full wp-image-126\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.41.46.png\" alt=\"Captura de pantalla 2014-03-17 a la(s) 16.41.46\" width=\"630\" height=\"268\" \/><\/a>\r\n\r\n<a href=\"https:\/\/github.com\/titoBouzout\/SideBarEnhancements\" target=\"_blank\">SideBarEnhancements<\/a>\r\n\r\nAgrega mejoras \u00a0a los archivos y carpetas de la barra lateral, opciones muy usadas como \"Abrir con...\", \"Buscar en proyecto\", \"Renombrar\", \"Abrir en explorador\", etc\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.09.06.png\"><img class=\"alignnone size-full wp-image-121\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/Captura-de-pantalla-2014-03-17-a-las-16.09.06.png\" alt=\"Captura de pantalla 2014-03-17 a la(s) 16.09.06\" width=\"275\" height=\"749\" \/><\/a>\r\n\r\n<a href=\"https:\/\/github.com\/facelessuser\/BracketHighlighter\">BracketHighligter<\/a>\r\n\r\nBracket Highlighter resalta una variedad de llaves y etiquetas como: <code>[]<\/code>, <code>()<\/code>, <code>{}<\/code>, <code>\"\"<\/code>, <code>''<\/code>, <code>&lt;tag&gt;&lt;\/tag&gt;<\/code>, para identificar el inicio y fin de l\u00edneas de c\u00f3digo de forma m\u00e1s r\u00e1pida.\r\n\r\n<img class=\"alignnone\" src=\"https:\/\/github-camo.global.ssl.fastly.net\/771f9df16f29a134369cbcb0913f55932d156983\/687474703a2f2f646c2e64726f70626f782e636f6d2f752f3334323639382f427261636b6574486967686c6967687465722f4578616d706c65312e706e67\" alt=\"\" width=\"769\" height=\"270\" \/>\r\n\r\n<a href=\"http:\/\/docs.emmet.io\/\">Emmet<\/a>\r\n\r\nEmmet te permite escribir grandes bloques de c\u00f3digo en HTML a la velocidad de la luz, todo lo que tienes que usar son los ya conocidos selectores CSS.\r\n\r\n<a href=\"https:\/\/github.com\/jisaacks\/GitGutter\">GitGutter<\/a>\r\n\r\nEste paquete muestra un icono en el \u00e1rea izquierda de la ventana de sublime, indicando si una linea de c\u00f3digo ha sido insertada, modificada o borrada.\r\n\r\n<img class=\"alignnone\" src=\"https:\/\/raw.github.com\/jisaacks\/GitGutter\/master\/screenshot.png\" alt=\"\" width=\"291\" height=\"177\" \/>\r\n\r\n<a href=\"https:\/\/github.com\/rareyman\/HTMLBeautify\">HTMLBeautify<\/a>\r\n\r\nDa formato (indentaci\u00f3n) a c\u00f3digo HTML haciendo que sea m\u00e1s f\u00e1cil de leer.\r\n\r\n<a href=\"https:\/\/github.com\/jdc0589\/JsFormat\">JsFormat<\/a>\r\n\r\nEste es tambi\u00e9n un paquete para dar formato a c\u00f3digo en Javascript.\r\n\r\n<a href=\"http:\/\/www.sublimerge.com\/\">Sublimerge Pro<\/a>\r\n\r\nBusca diferencias entre dos archivos, resaltando los cambios y l\u00edneas con colores y de manera muy intuitiva. Para usarlo tendr\u00e1s que usar \"ctrl+alt+d\".\r\n\r\n<img class=\"alignnone\" src=\"http:\/\/www.sublimerge.com\/Images\/sublimerge-pro-linux.png\" alt=\"\" width=\"767\" height=\"481\" \/>\r\n<h1>Temas<\/h1>\r\n<a href=\"https:\/\/github.com\/nilium\/st2-nil-theme\">Theme - Nil<\/a>\r\n\r\n<img class=\"alignnone\" src=\"https:\/\/github.com\/nilium\/st2-nil-theme\/raw\/master\/dark.png\" alt=\"\" width=\"1690\" height=\"1352\" \/>\r\n\r\n<a href=\"http:\/\/kkga.github.io\/spacegray\/\" target=\"_blank\">Theme - Spacegray<\/a>\r\n\r\n<img class=\"alignnone\" src=\"http:\/\/kkga.github.io\/spacegray\/assets\/spacegray.png\" alt=\"\" width=\"2560\" height=\"1548\" \/>\r\n\r\n<a href=\"https:\/\/github.com\/buymeasoda\/soda-theme\/\" target=\"_blank\">Theme - Soda<\/a>\r\n\r\n<img class=\"alignnone\" src=\"https:\/\/github-camo.global.ssl.fastly.net\/39feeec102d65ccd7a5b7d10bcf3acc674c8705b\/687474703a2f2f6275796d6561736f64612e6769746875622e636f6d2f736f64612d7468656d652f696d616765732f73637265656e73686f74732f736f64612d322d6461726b2d7468656d652e706e673f763d32\" alt=\"\" width=\"850\" height=\"637\" \/>\r\n\r\nSi conoces m\u00e1s paquetes o tips para Sublime Text, puedes compartirlos en los comentarios :)","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/03\/original-sublime.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":2,"created_at":"Mon, 23 Jun 2014 12:28:53 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:30:14 +0000","updated_by":1,"published_at":"Mon, 23 Jun 2014 12:28:53 +0000","published_by":1},{"id":885,"title":"Git: Comandos b\u00e1sicos que no debes dejar de usar","slug":"git-comandos-basicos-tutorial-espanol","markdown":"\nGit es un sistema de control de versiones distribuido muy usado en el mundo y en este post\u00a0mencionaremos a\u00a0grosso modo algunos **comandos Git muy \u00fatiles** al momento de utilizar este controlador de versiones. A continuaci\u00f3n\u00a0vamos a ver algunos de los\u00a0comandos Git que no debes dejar de usar:\n\n**1.\u00a0git commit --amend**\n-------------------------\n\n Sirve para modificar el log de un\u00a0commit, por ejemplo imag\u00ednate que escribiste mal un commit, con este comando tienes la oportunidad de corregirlo. Modificando el log del \u00faltimo commit que hayamos realizado: \tgit commit --amend\n\n Luego podremos editar el \u00faltimo commit y si deseamos corregir alg\u00fan error que hayamos cometido. **2.\u00a0git merge\u00a0--abort**\n------------------------\n\n Sirve para **abortar un merge en curso**, se usa para deshacer un merge fallido, lo que quiere decir es que solo puedes abortar un merge y regresar todo a la normalidad cuando el merge ha fallado y tiene conflictos. \tgit merge --abort\n\n Ten en cuenta que si el merge a sido exitoso este comando no realizar\u00e1 ninguna acci\u00f3n. **3.\u00a0git branch**\n-----------------\n\n Sirve para crear,\u00a0listar, eliminar ramas y algunas opciones m\u00e1s. Creando una\u00a0rama local: \tgit branch nombre_rama\n\n Listando ramas locales: \tgit branch\n\n Listando ramas remotas: \tgit branch -r\n\n Eliminando\u00a0una rama\u00a0local: \tgit branch -d nombre_rama\n\n Forzar la eliminaci\u00f3n de una rama\u00a0local: \tgit branch -D nombre_rama\n\n Cambiar de nombre a una rama local, estando en\u00a0la misma rama: \tgit branch -m nombre_nuevo\n\n Cambiar de nombre a una rama local, estando en otra rama: \tgit branch -m nombre_anterior nombre_nuevo\n\n**4.\u00a0git\u00a0stash**\n----------------\n\n Sirve para guardar el estado actual de tus cambios sin tener que realizar un commit en tu proyecto, al usarlo regresas el puntero hacia el ultimo commit realizado como si nada hubiera pasado. Asi los cambios que realizaste se han guardado en una rama temporal de Git y los puedes recuperar cuando desees con los comandos: **\"git stash apply\"** o **\"git stash pop\"**. Guardando o escondiendo mis cambios: \tgit stash\n\n Recuperando mis\u00a0cambios\u00a0guardados o escondidos anteriormente: \tgit stash apply\n\n Para mayor informaci\u00f3n sobre como usar git stash, puedes pasar por nuestro\u00a0art\u00edculo: [La importancia del comando \u201cGit stash\u201d en un proyecto](http:\/\/frontend-labs.com\/940--la-importancia-del-comando-git-stash-en-un-proyecto \"La importancia del comando \u201cGit stash\u201d en un proyecto\"). **5.\u00a0git\u00a0tags**\n---------------\n\n Git tiene la habilidad de etiquetar (tag) puntos espec\u00edficos o importantes en la historia. Generalmente la gente usa esta funcionalidad para marcar puntos donde se ha lanzado alguna versi\u00f3n (v1.0, y as\u00ed sucesivamente). Listando tus etiquetas(lo hace alfab\u00e9ticamente por defecto): \tgit tag\n\n Buscando una etiqueta de acuerdo a un patr\u00f3n en particular: \tgit tag -l 'v3.4.*'\n\n Creando una nueva etiqueta: \tgit tag -a v1.0.0 -m \"Flux: Agregando el m\u00f3dulo para Stylus\"\n\n Enviando una\u00a0etiqueta al servidor: \tgit push origin tag v1.0.0\n\n**6.\u00a0git show**\n---------------\n\n Muestra informaci\u00f3n de varios tipos de objetos Git. Mostrando la informaci\u00f3n del tag v1.0.0 en forma corta(-s de short): \tgit show v1.0.0 -s\n\n**7.\u00a0git\u00a0config**\n-----------------\n\n A trav\u00e9s de este comando podemos leer y escribir\u00a0las configuraciones de\u00a0Git para el sistema, por usuario y\/o por repositorio. Definiendo el nombre con que ser\u00e1 identificado la persona que realiza los commits(a.k.a commiter): \tgit config --global user.name \"Juan Perez\"\n\n Definiendo el email del commiter: \tgit config --global user.email \"email@dominio.com\"\n\n Definiendo el editor de texto con el que trabajar\u00e1 Git(en este caso elijo vim): \tgit config --global core.editor vim\n\n Definiendo [**meld**](http:\/\/meldmerge.org\/ \"Meld merge\") como herramienta para la soluci\u00f3n de conflictos en un merge: \tgit config --global merge.tool meld\n\n Definiendo el alias \"st\" para Git: \tgit config --global alias.st status\n\n Con esto he definido el alias \"st\", para que en vez de escribir: \tgit status\n\n Tan solo escriba: \tgit st\n\n Estoy seguro que estos pocos, pero valiosos comandos Git te servir\u00e1n m\u00e1s\u00a0de una vez, y si est\u00e1s interesado en ver algo m\u00e1s sobre Git puedes pasar por el siguiente post: [Consejos b\u00e1sicos usando Git](http:\/\/frontend-labs.com\/779--consejos-basicos-git-tutorial-espanol-ejemplos \"Consejos b\u00e1sicos usando Git\").\n","html":"Git es un sistema de control de versiones distribuido muy usado en el mundo y en este post\u00a0mencionaremos a\u00a0grosso modo algunos <strong>comandos Git muy \u00fatiles<\/strong> al momento de utilizar este controlador de versiones.\r\n\r\nA continuaci\u00f3n\u00a0vamos a ver algunos de los\u00a0comandos Git que no debes dejar de usar:\r\n<h2><strong>1.\u00a0git commit --amend<\/strong><\/h2>\r\nSirve para modificar el log de un\u00a0commit, por ejemplo imag\u00ednate que escribiste mal un commit, con este comando tienes la oportunidad de corregirlo.\r\n\r\nModificando el log del \u00faltimo commit que hayamos realizado:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit commit --amend\r\n<\/code>\r\n<\/pre>\r\n\r\nLuego podremos editar el \u00faltimo commit y si deseamos corregir alg\u00fan error que hayamos cometido.\r\n<h2><strong>2.\u00a0git merge\u00a0--abort<\/strong><\/h2>\r\nSirve para <strong>abortar un merge en curso<\/strong>, se usa para deshacer un merge fallido, lo que quiere decir es que solo puedes abortar un merge y regresar todo a la normalidad cuando el merge ha fallado y tiene conflictos.\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit merge --abort\r\n<\/code>\r\n<\/pre>\r\n\r\nTen en cuenta que si el merge a sido exitoso este comando no realizar\u00e1 ninguna acci\u00f3n.\r\n<h2><strong>3.\u00a0git branch<\/strong><\/h2>\r\nSirve para crear,\u00a0listar, eliminar ramas y algunas opciones m\u00e1s.\r\n\r\nCreando una\u00a0rama local:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit branch nombre_rama\r\n<\/code>\r\n<\/pre>\r\n\r\nListando ramas locales:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit branch\r\n<\/code>\r\n<\/pre>\r\n\r\nListando ramas remotas:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit branch -r\r\n<\/code>\r\n<\/pre>\r\n\r\nEliminando\u00a0una rama\u00a0local:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit branch -d nombre_rama\r\n<\/code>\r\n<\/pre>\r\n\r\nForzar la eliminaci\u00f3n de una rama\u00a0local:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit branch -D nombre_rama\r\n<\/code>\r\n<\/pre>\r\n\r\nCambiar de nombre a una rama local, estando en\u00a0la misma rama:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit branch -m nombre_nuevo\r\n<\/code>\r\n<\/pre>\r\n\r\nCambiar de nombre a una rama local, estando en otra rama:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit branch -m nombre_anterior nombre_nuevo\r\n<\/code>\r\n<\/pre>\r\n\r\n<h2><strong>4.\u00a0git\u00a0stash<\/strong><\/h2>\r\nSirve para guardar el estado actual de tus cambios sin tener que realizar un commit en tu proyecto, al usarlo regresas el puntero hacia el ultimo commit realizado como si nada hubiera pasado.\r\nAsi los cambios que realizaste se han guardado en una rama temporal de Git y los puedes recuperar cuando desees con los comandos: <strong>\"git stash apply\"<\/strong> o <strong>\"git stash pop\"<\/strong>.\r\n\r\nGuardando o escondiendo mis cambios:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit stash\r\n<\/code>\r\n<\/pre>\r\n\r\nRecuperando mis\u00a0cambios\u00a0guardados o escondidos anteriormente:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit stash apply\r\n<\/code>\r\n<\/pre>\r\n\r\nPara mayor informaci\u00f3n sobre como usar git stash, puedes pasar por nuestro\u00a0art\u00edculo: <a title=\"La importancia del comando \u201cGit stash\u201d en un proyecto\" href=\"http:\/\/frontend-labs.com\/940--la-importancia-del-comando-git-stash-en-un-proyecto\" target=\"_blank\">La importancia del comando \u201cGit stash\u201d en un proyecto<\/a>.\r\n<h2><strong>5.\u00a0git\u00a0tags<\/strong><\/h2>\r\nGit tiene la habilidad de etiquetar (tag) puntos espec\u00edficos o importantes en la historia. Generalmente la gente usa esta funcionalidad para marcar puntos donde se ha lanzado alguna versi\u00f3n (v1.0, y as\u00ed sucesivamente).\r\n\r\nListando tus etiquetas(lo hace alfab\u00e9ticamente por defecto):\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit tag\r\n<\/code>\r\n<\/pre>\r\n\r\nBuscando una etiqueta de acuerdo a un patr\u00f3n en particular:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit tag -l 'v3.4.*'\r\n<\/code>\r\n<\/pre>\r\n\r\nCreando una nueva etiqueta:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit tag -a v1.0.0 -m \"Flux: Agregando el m\u00f3dulo para Stylus\"\r\n<\/code>\r\n<\/pre>\r\n\r\nEnviando una\u00a0etiqueta al servidor:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit push origin tag v1.0.0\r\n<\/code>\r\n<\/pre>\r\n\r\n<h2><strong>6.\u00a0git show<\/strong><\/h2>\r\nMuestra informaci\u00f3n de varios tipos de objetos Git.\r\n\r\nMostrando la informaci\u00f3n del tag v1.0.0 en forma corta(-s de short):\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit show v1.0.0 -s\r\n<\/code>\r\n<\/pre>\r\n\r\n<h2><strong>7.\u00a0git\u00a0config<\/strong><\/h2>\r\nA trav\u00e9s de este comando podemos leer y escribir\u00a0las configuraciones de\u00a0Git para el sistema, por usuario y\/o por repositorio.\r\n\r\nDefiniendo el nombre con que ser\u00e1 identificado la persona que realiza los commits(a.k.a commiter):\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit config --global user.name \"Juan Perez\"\r\n<\/code>\r\n<\/pre>\r\n\r\nDefiniendo el email del commiter:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit config --global user.email \"email@dominio.com\"\r\n<\/code>\r\n<\/pre>\r\n\r\nDefiniendo el editor de texto con el que trabajar\u00e1 Git(en este caso elijo vim):\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit config --global core.editor vim\r\n<\/code>\r\n<\/pre>\r\n\r\nDefiniendo <a title=\"Meld merge\" href=\"http:\/\/meldmerge.org\/\" target=\"_blank\"><strong>meld<\/strong><\/a> como herramienta para la soluci\u00f3n de conflictos en un merge:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit config --global merge.tool meld\r\n<\/code>\r\n<\/pre>\r\n\r\nDefiniendo el alias \"st\" para Git:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit config --global alias.st status\r\n<\/code>\r\n<\/pre>\r\n\r\nCon esto he definido el alias \"st\", para que en vez de escribir:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit status\r\n<\/code>\r\n<\/pre>\r\n\r\nTan solo escriba:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\ngit st\r\n<\/code>\r\n<\/pre>\r\n\r\nEstoy seguro que estos pocos, pero valiosos comandos Git te servir\u00e1n m\u00e1s\u00a0de una vez, y si est\u00e1s interesado en ver algo m\u00e1s sobre Git puedes pasar por el siguiente post: <a title=\"Consejos b\u00e1sicos usando Git\" href=\"http:\/\/frontend-labs.com\/779--consejos-basicos-git-tutorial-espanol-ejemplos\" target=\"_blank\">Consejos b\u00e1sicos usando Git<\/a>.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/git2-1.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Mon, 30 Jun 2014 22:00:35 +0000","created_by":1,"updated_at":"Wed, 22 Oct 2014 16:33:39 +0000","updated_by":1,"published_at":"Mon, 30 Jun 2014 22:00:35 +0000","published_by":1},{"id":1055,"title":"Se un colaborador en FrontEnd Labs","slug":"frontend-labs","markdown":"\n[![FrontEnd Labs](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/posteaya.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/posteaya.png) \u00a0 Hola chicos, FrontEnd Labs naci\u00f3 con el fin de compartir experiencias buenas y malas sobre todo lo que un desarrollador va pasando para lograr sus objetivos. Por ello es que los invitamos a compartir sus experiencias en este medio que tenemos en com\u00fan, estaremos pendientes de sus tweets, comentarios y\/o mails. [@frontendlabs](https:\/\/twitter.com\/frontendlabs) [\/frontendlabs.peru](https:\/\/www.facebook.com\/frontendlabs.peru) [code@frontend-labs.com](mailto:code@frontend-labs.com) Gracias.\n","html":"<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/posteaya.png\"><img class=\"alignnone size-full wp-image-1056\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/posteaya.png\" alt=\"FrontEnd Labs\" width=\"800\" height=\"600\" \/><\/a>\r\n\r\n&nbsp;\r\n\r\nHola chicos,\r\n\r\nFrontEnd Labs naci\u00f3 con el fin de compartir experiencias buenas y malas sobre todo lo que un desarrollador va pasando para lograr sus objetivos. Por ello es que los invitamos a compartir sus experiencias en este medio que tenemos en com\u00fan, estaremos pendientes de sus tweets, comentarios y\/o mails.\r\n\r\n<a href=\"https:\/\/twitter.com\/frontendlabs\" target=\"_blank\">@frontendlabs<\/a>\r\n<a href=\"https:\/\/www.facebook.com\/frontendlabs.peru\" target=\"_blank\">\/frontendlabs.peru<\/a>\r\n<a href=\"mailto:code@frontend-labs.com\" target=\"_blank\">code@frontend-labs.com<\/a>\r\n\r\nGracias.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/frontend.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":9,"created_at":"Wed, 02 Jul 2014 15:43:43 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:31:29 +0000","updated_by":1,"published_at":"Wed, 02 Jul 2014 15:43:43 +0000","published_by":1},{"id":1070,"title":"SEO: Conceptos B\u00e1sicos para ayudar al posicionamiento web","slug":"seo-conceptos-basicos-para-ayudar-al-posicionamiento-web","markdown":"\nPara obtener un an\u00e1lisis inicial positivo sobre nuestro sitio web tendremos en cuenta lo siguiente:\n\n1. Definici\u00f3n de URL (Uniform Resource Locator)\n-----------------------------------------------\n\n Al crearla debemos usar **<span class=\"bold\">\u201cpalabras claves\u201d <\/span>**estrat\u00e9gicas que correspondan perfectamente al contenido del sitio web. Que no sea extensa, es cierto que no hay ning\u00fan l\u00edmite para la longitud de una URL pero es recomendable que esta sea corta tanto por usabilidad como optimizaci\u00f3n SEO. Evita utilizar en tus URL **<span class=\"bold\">\u201cpalabras vac\u00edas\u201d <\/span>**como **\u201cla\u201d**, **\u201cde\u201d**. Para separar palabras en una URL te sugiero usar guiones, por ejm: **www.nombredominio.com\/usa-guiones-para-separar-palabras\/**2. T\u00edtulo a las Etiquetas (o Tags)\n----------------------------------\n\n La etiqueta m\u00e1s importante es la **<span class=\"bold\"><h1><\/span>**, ya que es la que transmite el contenido de una p\u00e1gina particular dentro de tu sitio web. Solo debes usarla una vez por p\u00e1gina, tambi\u00e9n evita que estos t\u00edtulos compuesto por palabras claves no tenga demasiados caracteres. ### a) Uso de etiquetas <h1> a <h6>\n\n La etiqueta **<span class=\"bold\"><h> <\/span>**viene acompa\u00f1ada de un n\u00famero, desde el 1 hasta el 6, predefiniendo \u00e9stos el tama\u00f1o e importancia del encabezado. As\u00ed, **<span class=\"bold\"><h1> <\/span>**ser\u00eda el encabezado m\u00e1s grande mientras que **<span class=\"bold\"><h6> <\/span>**ser\u00eda el m\u00e1s peque\u00f1o. [code lang=\"html\"] <h1>Reglas B\u00e1sicas de SEO (Search Engine Optimization)<\/h1> [\/code] 3. Title y Descripci\u00f3n de etiquetas Meta\n----------------------------------------\n\n Es cierto que su importancia es min\u00fascula en el posicionamiento SEO (no ayuda en los ranking de posicionamiento) pero es parte de las reglas b\u00e1sicas. Las etiquetas que se mostrar\u00e1n en los resultados son <span class=\"bold\">Title <\/span>y <span class=\"bold\">Description.<\/span>[![snippet](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-07-04-a-las-15.14.02.png)](http:\/\/frontend-labs.com\/) Estas etiquetas b\u00e1sicas debes colocar en el c\u00f3digo HTML de la p\u00e1gina dentro de la secci\u00f3n **<span class=\"bold\"><Head><\/span>** [code lang=\"html\"] <meta name=\"title\" content=\"T\u00edtulo para el site el cual si es visible para el usuario\"\/> [\/code] [code lang=\"html\"] <meta name=\"nombre de la etiqueta\" content=\"contenido de la etiqueta\"\/> [\/code] ### a) Meta description\n\n La utilizamos para describir la p\u00e1gina en la que nos encontramos para buscadores y navegadores web, este contenido no es visible al usuario que visita tu sitio. Como resultado nos ayuda a decirle al usuario de qu\u00e9 trata la p\u00e1gina con un texto persuasivo, si no lo llenas, Google se encargar\u00e1 de extraer fragmento textual de tu sitio web el cual no siempre por no decir nunca es lo que necesitamos que se muestre en el snippet generado. [code lang=\"html\"] <meta name=\"description\" content=\"Descripci\u00f3n para el site\"\/> [\/code] ### b) Meta keywords\n\n Usamos <span class=\"bold\">palabras claves <\/span>para resumir el contenido de un site, aunque los buscadores ya no lo toman en cuenta debido al mal uso de ellos. Entonces dir\u00e1n - **mejor no lo pongo** - pero por conceptos b\u00e1sicos mejor siguiendo el sistema lo ponemos, 10 items permitidos. [code lang=\"html\"] <meta name=\"keywords\" content=\"frontend, seo, reglas, posicionamiento, html, css\"\/> [\/code] ### c) Meta robots\n\n Esta etiqueta da instrucciones a los buscadores por ende es muy <span class=\"bold\">importante<\/span>, creamos un archivo <span class=\"bold\">robots.txt <\/span>donde declaramos las p\u00e1ginas, directorios completos y todo tipo de archivos alojados en tu servidor (html, carpetas, etc) que no queremos que aparezcan en los \u00edndices del buscador (las excluimos de ser rastreados), a la vez indicas d\u00f3nde est\u00e1 alojado el <span class=\"bold\">sitemap <\/span>de tu sitio. [code lang=\"html\"] <meta name=\"robots\" content=\"noindex,nofollow\"\/> [\/code] ### d) Metaetiquetas Adicionales\n\n Existen mucho m\u00e1s tags, pero solo mencionaremos los m\u00e1s comunes: **Author** \u2013 Colocamos el nombre de la persona o entidad que ha creado el contenido de la p\u00e1gina; de este modo es f\u00e1cil de encontrar la persona responsable de una p\u00e1gina web. [code lang=\"html\"] <meta name=\"author\", content=\"FrontEnd Labs\"\/> [\/code] **Subject **\u2013 Algo parecido a la meta descripci\u00f3n, pero m\u00e1s breve. [code lang=\"html\"] <meta name=\"subject\" content=\"el tema de tu site\"\/> [\/code] **Generator **\u2013 Colocamos el editor HTML o el gestor de contenidos con el que se ha creado el site. [code lang=\"html\"] <meta name=\"generator\" content=\"Sublime Text2\"\/> [\/code] **Language **\u2013 Colocamos el idioma en el que est\u00e1 escrito el site. [code lang=\"html\"] <meta name=\"language\" content=\"es\"\/> [\/code] 4. Im\u00e1genes y links\n-------------------\n\n En todas las im\u00e1genes y links que usemos en los sites, debemos poner un nombre en el atributo <span class=\"bold\">**\"alt\"** para im\u00e1genes\u00a0<\/span> este texto ser\u00e1 la informaci\u00f3n (recomendable no excederse a 150 caracteres) que salga en tu site cuando no se haya cargado la imagen asignada; <span class=\"bold\">y** \"title\"** para los links.<\/span> [code lang=\"html\"] <img src=\"images\/seo.jpg\" alt=\"Reglas B\u00e1sicas de SEO\"> <a href=\"http:\/\/frontend-labs.com\/\" title=\"FronEnd Labs\">FronEnd Labs<\/a> [\/code] 5. Usar tus archivos CSS y JAVASCRIPT de modo externo\n-----------------------------------------------------\n\n Los motores de b\u00fasqueda suelen ignorar archivos CSS y JavaScript, pero incluso si no lo hacen (cambios de algoritmo de Google), colocando el CSS \/ JavaScript en archivos externos ayudar\u00e1n al rastreador encontrar tu contenido m\u00e1s r\u00e1pido. [code lang=\"html\"] <link rel=\"stylesheet\" href=\"style.css\" type=\"text\/css\" media=\"screen\" \/> <script src=\"scripts.js\" type=\"text\/JavaScript\" charset=\"utf-8\"><\/script> [\/code] 6. Crea un archivo sitemap.xml para Google\n------------------------------------------\n\n Para asegurarse de que sus p\u00e1ginas est\u00e1n indexadas y almacenan en cach\u00e9 de forma r\u00e1pida en Google, puede crear un archivo sitemap.xml. Es un archivo XML que contiene una lista con todas las p\u00e1ginas de su sitio. Puedes generarlo desde [aqu\u00ed](http:\/\/www.xml-sitemaps.com \"aqu\u00ed\"). [code lang=\"html\"] <?xml version=\"1.0\" encoding=\"UTF-8\"?> <urlset xmlns=\"http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9 http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9\/sitemap.xsd\"> <!-- created with Free Online Sitemap Generator www.xml-sitemaps.com --> <url> <loc>http:\/\/frontend-labs.com\/<\/loc> <changefreq>always<\/changefreq> <\/url> <\/urlset> [\/code] 7. Hacer un Mapa de Sitio\n-------------------------\n\n Debes hacer una p\u00e1gina HTML sitemap detallada que enlaza con todas las p\u00e1ginas en su sitio. Recuerda que mientras menos clics que se necesita para llegar a una p\u00e1gina es mejor. Puedes generarlo desde [aqu\u00ed](http:\/\/astuteo.com\/slickmap\/ \"aqu\u00ed\"). 8. Utilice Breadcrumb Navigation\n--------------------------------\n\n Considere el uso de Breadcrumb como una ayuda a la navegaci\u00f3n secundaria. Esto hace que sea m\u00e1s f\u00e1cil para los usuarios moverse alrededor de su sitio web. Aseg\u00farese de que el texto en sus enlaces breadcrumb describe con precisi\u00f3n el contenido de la p\u00e1gina correspondiente. [![breadcrumb](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-07-04-a-las-16.35.55.png)](http:\/\/frontend-labs.com\/category\/codigo)9. Plantear un dise\u00f1o de Footer efectivo\n----------------------------------------\n\n Use los enlaces de pie de p\u00e1gina para ayudar a los motores de b\u00fasqueda navegar a trav\u00e9s de su sitio, replicando su navegaci\u00f3n principal y la vinculaci\u00f3n a las p\u00e1ginas m\u00e1s importantes de su sitio. 10. Cree una P\u00e1gina de error Informativo\n----------------------------------------\n\n Si un usuario escribe un error url equivocada o incorrecta, se mostrar\u00e1 una p\u00e1gina de servidor por defecto con un mensaje de error interno. Ese mensaje no es muy \u00fatil, por lo que en lugar debes crear una p\u00e1gina de error 404 f\u00e1cil de usar que une de nuevo a la p\u00e1gina de inicio, muestra las alternativas para la navegaci\u00f3n o enlaces a contenido posiblemente relacionados. P.D. Para hacer una evaluaci\u00f3n b\u00e1sica de nuestros sites te recomiendo: [http:\/\/seoquake.com](http:\/\/www.seoquake.com\/)\n","html":"Para obtener un an\u00e1lisis inicial positivo sobre nuestro sitio web tendremos en cuenta lo siguiente:\r\n<h2 style=\"color: #319292;\">1. Definici\u00f3n de URL (Uniform Resource Locator)<\/h2>\r\nAl crearla debemos usar <strong><span class=\"bold\">\u201cpalabras claves\u201d <\/span><\/strong>estrat\u00e9gicas que correspondan perfectamente al contenido del sitio web. Que no sea extensa, es cierto que no hay ning\u00fan l\u00edmite para la longitud de una URL pero es recomendable que esta sea corta tanto por usabilidad como optimizaci\u00f3n SEO.\r\n\r\nEvita utilizar en tus URL <strong><span class=\"bold\">\u201cpalabras vac\u00edas\u201d <\/span><\/strong>como <strong>\u201cla\u201d<\/strong>, <strong>\u201cde\u201d<\/strong>. Para separar palabras en una URL te sugiero usar guiones, por ejm: <strong>www.nombredominio.com\/usa-guiones-para-separar-palabras\/<\/strong>\r\n<h2 style=\"color: #319292;\">2. T\u00edtulo a las Etiquetas (o Tags)<\/h2>\r\nLa etiqueta m\u00e1s importante es la <strong><span class=\"bold\">&lt;h1&gt;<\/span><\/strong>, ya que es la que transmite el contenido de una p\u00e1gina particular dentro de tu sitio web. Solo debes usarla una vez por p\u00e1gina, tambi\u00e9n evita que estos t\u00edtulos compuesto por palabras claves no tenga demasiados caracteres.\r\n<h3 style=\"margin-bottom: 0;\">a) Uso de etiquetas &lt;h1&gt; a &lt;h6&gt;<\/h3>\r\nLa etiqueta <strong><span class=\"bold\">&lt;h&gt; <\/span><\/strong>viene acompa\u00f1ada de un n\u00famero, desde el 1 hasta el 6, predefiniendo \u00e9stos el tama\u00f1o e importancia del encabezado. As\u00ed, <strong><span class=\"bold\">&lt;h1&gt; <\/span><\/strong>ser\u00eda el encabezado m\u00e1s grande mientras que <strong><span class=\"bold\">&lt;h6&gt; <\/span><\/strong>ser\u00eda el m\u00e1s peque\u00f1o.\r\n\r\n[code lang=\"html\"]\r\n&lt;h1&gt;Reglas B\u00e1sicas de SEO (Search Engine Optimization)&lt;\/h1&gt;\r\n[\/code]\r\n\r\n<h2 style=\"color: #319292;\">3. Title y Descripci\u00f3n de etiquetas Meta<\/h2>\r\nEs cierto que su importancia es min\u00fascula en el posicionamiento SEO (no ayuda en los ranking de posicionamiento) pero es parte de las reglas b\u00e1sicas. Las etiquetas que se mostrar\u00e1n en los resultados son <span class=\"bold\">Title <\/span>y <span class=\"bold\">Description.<\/span>\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/\" target=\"_blank\"><img class=\"alignnone size-full wp-image-1090\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-07-04-a-las-15.14.02.png\" alt=\"snippet\" width=\"543\" height=\"91\" \/><\/a>\r\n\r\nEstas etiquetas b\u00e1sicas debes colocar en el c\u00f3digo HTML de la p\u00e1gina dentro de la secci\u00f3n <strong><span class=\"bold\">&lt;Head&gt;<\/span><\/strong>\r\n\r\n[code lang=\"html\"]\r\n&lt;meta name=&quot;title&quot; content=&quot;T\u00edtulo para el site el cual si es visible para el usuario&quot;\/&gt;\r\n[\/code]\r\n\r\n\r\n[code lang=\"html\"]\r\n&lt;meta name=&quot;nombre de la etiqueta&quot; content=&quot;contenido de la etiqueta&quot;\/&gt;\r\n[\/code]\r\n\r\n<h3 style=\"margin-bottom: 0;\">a) Meta description<\/h3>\r\nLa utilizamos para describir la p\u00e1gina en la que nos encontramos para buscadores y navegadores web, este contenido no es visible al usuario que visita tu sitio. Como resultado nos ayuda a decirle al usuario de qu\u00e9 trata la p\u00e1gina con un texto persuasivo, si no lo llenas, Google se encargar\u00e1 de extraer fragmento textual de tu sitio web el cual no siempre por no decir nunca es lo que necesitamos que se muestre en el snippet generado.\r\n\r\n[code lang=\"html\"]\r\n&lt;meta name=&quot;description&quot; content=&quot;Descripci\u00f3n para el site&quot;\/&gt;\r\n[\/code]\r\n\r\n<h3 style=\"margin-bottom: 0;\">b) Meta keywords<\/h3>\r\nUsamos <span class=\"bold\">palabras claves <\/span>para resumir el contenido de un site, aunque los buscadores ya no lo toman en cuenta debido al mal uso de ellos. Entonces dir\u00e1n - <strong>mejor no lo pongo<\/strong> - pero por conceptos b\u00e1sicos mejor siguiendo el sistema lo ponemos, 10 items permitidos.\r\n\r\n[code lang=\"html\"]\r\n&lt;meta name=&quot;keywords&quot; content=&quot;frontend, seo, reglas, posicionamiento, html, css&quot;\/&gt;\r\n[\/code]\r\n\r\n<h3 style=\"margin-bottom: 0;\">c) Meta robots<\/h3>\r\nEsta etiqueta da instrucciones a los buscadores por ende es muy <span class=\"bold\">importante<\/span>, creamos un archivo <span class=\"bold\">robots.txt <\/span>donde declaramos las p\u00e1ginas, directorios completos y todo tipo de archivos alojados en tu servidor (html, carpetas, etc) que no queremos que aparezcan en los \u00edndices del buscador (las excluimos de ser rastreados), a la vez indicas d\u00f3nde est\u00e1 alojado el <span class=\"bold\">sitemap <\/span>de tu sitio.\r\n\r\n[code lang=\"html\"]\r\n&lt;meta name=&quot;robots&quot; content=&quot;noindex,nofollow&quot;\/&gt;\r\n[\/code]\r\n\r\n<h3 style=\"margin-bottom: 0;\">d) Metaetiquetas Adicionales<\/h3>\r\nExisten mucho m\u00e1s tags, pero solo mencionaremos los m\u00e1s comunes:\r\n\r\n<strong>Author<\/strong> \u2013 Colocamos el nombre de la persona o entidad que ha creado el contenido de la p\u00e1gina; de este modo es f\u00e1cil de encontrar la persona responsable de una p\u00e1gina web.\r\n\r\n[code lang=\"html\"]\r\n&lt;meta name=&quot;author&quot;, content=&quot;FrontEnd Labs&quot;\/&gt;\r\n[\/code]\r\n\r\n<strong>Subject <\/strong>\u2013 Algo parecido a la meta descripci\u00f3n, pero m\u00e1s breve.\r\n\r\n[code lang=\"html\"]\r\n&lt;meta name=&quot;subject&quot; content=&quot;el tema de tu site&quot;\/&gt;\r\n[\/code]\r\n\r\n<strong>Generator <\/strong>\u2013 Colocamos el editor HTML o el gestor de contenidos con el que se ha creado el site.\r\n\r\n[code lang=\"html\"]\r\n&lt;meta name=&quot;generator&quot; content=&quot;Sublime Text2&quot;\/&gt;\r\n[\/code]\r\n\r\n<strong>Language <\/strong>\u2013 Colocamos el idioma en el que est\u00e1 escrito el site.\r\n\r\n[code lang=\"html\"]\r\n&lt;meta name=&quot;language&quot; content=&quot;es&quot;\/&gt;\r\n[\/code]\r\n\r\n<h2 style=\"color: #319292;\">4. Im\u00e1genes y links<\/h2>\r\nEn todas las im\u00e1genes y links que usemos en los sites, debemos poner un nombre en el atributo <span class=\"bold\"><strong>\"alt\"<\/strong> para im\u00e1genes\u00a0<\/span> este texto ser\u00e1 la informaci\u00f3n (recomendable no excederse a 150 caracteres) que salga en tu site cuando no se haya cargado la imagen asignada; <span class=\"bold\">y<strong> \"title\"<\/strong> para los links.<\/span>\r\n\r\n[code lang=\"html\"]\r\n&lt;img src=&quot;images\/seo.jpg&quot; alt=&quot;Reglas B\u00e1sicas de SEO&quot;&gt;\r\n\r\n&lt;a href=&quot;http:\/\/frontend-labs.com\/&quot; title=&quot;FronEnd Labs&quot;&gt;FronEnd Labs&lt;\/a&gt;\r\n[\/code]\r\n\r\n<h2 style=\"color: #319292;\">5. Usar tus archivos CSS y JAVASCRIPT de modo externo<\/h2>\r\nLos motores de b\u00fasqueda suelen ignorar archivos CSS y JavaScript, pero incluso si no lo hacen (cambios de algoritmo de Google), colocando el CSS \/ JavaScript en archivos externos ayudar\u00e1n al rastreador encontrar tu contenido m\u00e1s r\u00e1pido.\r\n\r\n[code lang=\"html\"]\r\n&lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot; type=&quot;text\/css&quot; media=&quot;screen&quot; \/&gt;\r\n&lt;script src=&quot;scripts.js&quot; type=&quot;text\/JavaScript&quot; charset=&quot;utf-8&quot;&gt;&lt;\/script&gt;\r\n[\/code]\r\n\r\n<h2 style=\"color: #319292;\">6. Crea un archivo sitemap.xml para Google<\/h2>\r\nPara asegurarse de que sus p\u00e1ginas est\u00e1n indexadas y almacenan en cach\u00e9 de forma r\u00e1pida en Google, puede crear un archivo sitemap.xml. Es un archivo XML que contiene una lista con todas las p\u00e1ginas de su sitio. Puedes generarlo desde <a title=\"aqu\u00ed\" href=\"http:\/\/www.xml-sitemaps.com\" target=\"_blank\">aqu\u00ed<\/a>.\r\n\r\n[code lang=\"html\"]\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;urlset\r\n      xmlns=&quot;http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9&quot;\r\n      xmlns:xsi=&quot;http:\/\/www.w3.org\/2001\/XMLSchema-instance&quot;\r\n      xsi:schemaLocation=&quot;http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9\r\n            http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9\/sitemap.xsd&quot;&gt;\r\n&lt;!-- created with Free Online Sitemap Generator www.xml-sitemaps.com --&gt;\r\n\r\n&lt;url&gt;\r\n  &lt;loc&gt;http:\/\/frontend-labs.com\/&lt;\/loc&gt;\r\n  &lt;changefreq&gt;always&lt;\/changefreq&gt;\r\n&lt;\/url&gt;\r\n&lt;\/urlset&gt;\r\n[\/code]\r\n\r\n<h2 style=\"color: #319292;\">7. Hacer un Mapa de Sitio<\/h2>\r\nDebes hacer una p\u00e1gina HTML sitemap detallada que enlaza con todas las p\u00e1ginas en su sitio. Recuerda que mientras menos clics que se necesita para llegar a una p\u00e1gina es mejor. Puedes generarlo desde <a title=\"aqu\u00ed\" href=\"http:\/\/astuteo.com\/slickmap\/\" target=\"_blank\">aqu\u00ed<\/a>.\r\n<h2 style=\"color: #319292;\">8. Utilice Breadcrumb Navigation<\/h2>\r\nConsidere el uso de Breadcrumb como una ayuda a la navegaci\u00f3n secundaria. Esto hace que sea m\u00e1s f\u00e1cil para los usuarios moverse alrededor de su sitio web. Aseg\u00farese de que el texto en sus enlaces breadcrumb describe con precisi\u00f3n el contenido de la p\u00e1gina correspondiente.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/category\/codigo\" target=\"_blank\"><img class=\"alignnone size-full wp-image-1116\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-07-04-a-las-16.35.55.png\" alt=\"breadcrumb\" width=\"173\" height=\"31\" \/><\/a>\r\n<h2 style=\"color: #319292;\">9. Plantear un dise\u00f1o de Footer efectivo<\/h2>\r\nUse los enlaces de pie de p\u00e1gina para ayudar a los motores de b\u00fasqueda navegar a trav\u00e9s de su sitio, replicando su navegaci\u00f3n principal y la vinculaci\u00f3n a las p\u00e1ginas m\u00e1s importantes de su sitio.\r\n<h2 style=\"color: #319292;\">10. Cree una P\u00e1gina de error Informativo<\/h2>\r\nSi un usuario escribe un error url equivocada o incorrecta, se mostrar\u00e1 una p\u00e1gina de servidor por defecto con un mensaje de error interno. Ese mensaje no es muy \u00fatil, por lo que en lugar debes crear una p\u00e1gina de error 404 f\u00e1cil de usar que une de nuevo a la p\u00e1gina de inicio, muestra las alternativas para la navegaci\u00f3n o enlaces a contenido posiblemente relacionados.\r\n\r\nP.D. Para hacer una evaluaci\u00f3n b\u00e1sica de nuestros sites te recomiendo:\r\n<a href=\"http:\/\/www.seoquake.com\/\" target=\"_blank\">http:\/\/seoquake.com<\/a>","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/seoooo.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":9,"created_at":"Fri, 04 Jul 2014 12:46:12 +0000","created_by":1,"updated_at":"Thu, 24 Jul 2014 12:38:07 +0000","updated_by":1,"published_at":"Fri, 04 Jul 2014 12:46:12 +0000","published_by":1},{"id":1122,"title":"Tutorial B\u00e1sico de Python - Parte I : Definici\u00f3n, Operadores y Tipos","slug":"tutorial-basico-de-python-i","markdown":"\nPython es un lenguaje de programaci\u00f3n el cual fue creado por el holandes Guido van Rossum en los a\u00f1os 90. Su nombre esta inspirado en el grupo humorista brit\u00e1nico Monty Python. Este lenguaje es caracterizado por su simplicidad y r\u00e1pido aprendizaje. Si queremos hacer el cl\u00e1sico hola mundo en este lenguaje, nos basta con escribir print \"hola mundo\". Las\u00a0caracter\u00edsticas principales de este lenguaje son cuatro:\n\n1. **Tipado din\u00e1mico**, no es necesario indicar el tipo de variable al momento de declararlo ya que lo identifica automaticamente.\n2. **Fuertemente tipado,** no se permite tratar de manera implicita a una variable como si fuera de otro tipo.\n3. **Multiplataforma,**\u00a0 se refiere a que no depende de un sistema operativo en especifico para funcionar bien.\n4. **Multiparadigma,**\u00a0python es un lenguaje orientado a diversos\u00a0paradigmas entre ellos tiene la programacion orientada a objetos, programaci\u00f3n estructurada, programaci\u00f3n funcional y programaci\u00f3n orientada a aspectos.\n\n### \u00bfC\u00f3mo comienzo a usar Python?\n\n Primero hay que instalar este lenguaje y los pasos depender\u00e1n de tu sistema operativo. - Si usas linux no sera necesario instalarlo ya que viene por defecto instalado.\n- En caso que uses Windows o Mac debes instalar python desde su p\u00e1gina\u00a0[oficial](https:\/\/www.python.org\/download\/releases\/2.7.8 \"Python 2.7.8\").\n\n En caso que desees probarlo antes de instalarlo puedes usar [repl.it](http:\/\/repl.it\/languages\/Python \"editor online de python\"). ### Operadores aritm\u00e9ticos en Python\n\n<table><thead><tr><th>Operador<\/th><th>Descripci\u00f3n<\/th><th>Ejemplo<\/th><th>Resultado<\/th><\/tr><\/thead><tbody><tr><td>+<\/td><td>Suma<\/td><td>result = 5 + 6<\/td><td>11<\/td><\/tr><tr><td>-<\/td><td>Resta<\/td><td>result = 5 - 1<\/td><td>4<\/td><\/tr><tr><td>*<\/td><td>Multiplicaci\u00f3n<\/td><td>result = 2 * 6<\/td><td>12<\/td><\/tr><tr><td>**<\/td><td>Exponente<\/td><td>result = 2**3<\/td><td>8<\/td><\/tr><tr><td>\/<\/td><td>Divisi\u00f3n<\/td><td>result = 12 \/ 6<\/td><td>2<\/td><\/tr><tr><td>\/\/<\/td><td>Divisi\u00f3n Entera<\/td><td>result = 4.5\/\/2<\/td><td>2.0<\/td><\/tr><tr><td>%<\/td><td>M\u00f3dulo<\/td><td>result = 7 % 2<\/td><td>1<\/td><\/tr><\/tbody><\/table> El tipo m\u00f3dulo de python es el residuo que se obtiene en una divisi\u00f3n. Por ejemplo al dividir 7 entre 4. El n\u00famero 7 es el dividendo, 4 es el divisor, el cociente seria 1 y el resto seria 3. En este ejemplo de 7 % 4 el resultado seria 3. En otras palabras, el m\u00f3dulo da como respuesta el resto de la divisi\u00f3n entre los dos n\u00fameros, donde el primero es el dividendo y el segundo es el divisor. ### Tipos B\u00e1sicos de Python\n\n Existen 5 tipos de datos principales: 1. **Enteros**, son los n\u00fameros tanto negativos como positivos que no tienen decimales. Este es representado por el tipo **int** o **long.** La diferencia entre estos dos es que **int** tiene un limite de almacenamiento mientras que el tipo **long** puede usar toda la memoria que se tenga disponible para almacenar estos n\u00fameros. ** \u00bfComo funciona el int y el long? **Para poder entender su funcionamiento mostraremos unos ejemplos.El tipo int se declara de la siguiente manera [sourcecode language=\"python\"] >>> numero_a = 2 >>> numero_b = 5 [\/sourcecode] Si queremos visualizar su tipo basta con digitar lo siguiente [sourcecode language=\"python\"] >>> print type(numero_a) <type 'int'> [\/sourcecode] Si sumamos dos enteros nos da un entero [sourcecode language=\"python\"] >>> print numero_a + numero_b 7 [\/sourcecode] Ya sea divisi\u00f3n seguir\u00e1 dando un entero [sourcecode language=\"python\"] >>> print numero_a \/ numero_b 0 >>> print numero_b \/ numero_a 2 [\/sourcecode] Para crear un tipo long se hace un peque\u00f1o cambio [sourcecode language=\"python\"] >>> gran_numero_a = 2L >>> gran_numero_b = 5L [\/sourcecode] Para confirmar que es un long podemos agregarle el type [sourcecode language=\"python\"] >>> type(gran_numero_a) <type 'long'> [\/sourcecode] Quiero volver a indicar que la \u00fanica diferencia entre int y long es que este \u00faltimo no tiene una restricci\u00f3n para almacenar n\u00fameros salvo la capacidad que tenga la memoria del computador. Por ende al igualar 2L con 2 da verdadero. [sourcecode language=\"python\"] >>> print gran_numero_a == numero_a True >>> print 5L == 5 True >>> print 3L + 3 6L >>> print 2**5 32 >>> print 2**70 1180591620717411303424L >>> print 2L - 1 1L [\/sourcecode]\n2. **Reales**, estos numeros son los que tienen decimales. En python son expresados con el tipo **float.\u00a0**El tipo float se obtiene cuando le asignas a una variable un valor como el siguiente [sourcecode language=\"python\"] >>> real_a = 0.236 >>> real_b = 5.414 [\/sourcecode] Podemos verificar que su tipo si es float con la funcion type [sourcecode language=\"python\"] >>> print type(real_a) <type 'float'> [\/sourcecode] Si hacemos alguna operaci\u00f3n entre un entero y un real predomina el numero real [sourcecode language=\"python\"] >>> print 3 + 5.0 8.0 >>> print 5\/2.0 2.5 [\/sourcecode]\n3. **Complejos**, python es uno de los pocos lenguajes que soporta n\u00fameros imaginarios. Este tipo de variable est\u00e1n orientados mas que nada para un uso cient\u00edfico pues no es necesario profundizar mucho en el tema. En python son representados con nombre de **complex**.Si tenemos la curiosidad de como se declara los n\u00fameros complejos, se declara de la siguiente manera. [sourcecode language=\"python\"] >>> numero_imaginario = 1j >>> type(numero_imaginario) <type 'complex'> >>> 2j + 5j 7j >>> 2j * 5j (-10+0j) [\/sourcecode]\n4. **Cadenas**, este tipo de variable, son conocidos con el tipo **str**, representan a las cadenas de texto ya sean con commillas simples ('texto') o con doble comillas (\"texto\")El tipo de variable sera visualizado de la siguiente manera [sourcecode language=\"python\"] >>> cadena = \"frontend-labs\" >>> type(cadena) <type 'str'> [\/sourcecode] Tambi\u00e9n podemos usar tres comillas (\"\"\"texto\"\"\"). A diferencia de los otros dos esta forma de asginar una cadena de texto permite escribir en varias lineas y respeta los espacios y saltos de l\u00edneas [sourcecode language=\"python\"] >>> cadena_grande = \"\"\" esta es una cadena muy grande el cual respeta los saltos de lineas \"\"\" [\/sourcecode]\n5. Booleanos, este tipo de variable solo puede tener dos tipos de variables: True o False. Estas variables en python son con conocidos con el nombre de **bool**. Es importante resaltar que python es un lenguaje sensitivo a las mayusculas. Por lo tanto, es importante tener cuidado con las mayusculas al tipiar en python. Es decir, al momento de tipiar los booleanos se debe escribir **True** y no true, ni TRUE, ni TrUe.\n\n Hasta aqui llego el primer tutorial de python en espa\u00f1ol. Si quieren profundizar mas de este tema pueden visitar la [documentaci\u00f3n oficial ](https:\/\/docs.python.org\/2.7\/tutorial\/introduction.html \"introduction\")de python. La segunda parte de este tutorial hablar\u00e1 sobre [colecciones y controles de flujo](http:\/\/frontend-labs.com\/1162--tutorial-basico-de-python-parte-ii-colecciones-y-controles-de-flujo \"Tutorial B\u00e1sico de Python \u2013 Parte II \u2013 Colecciones y Controles de Flujo\").\n","html":"Python es un lenguaje de programaci\u00f3n el cual fue creado por el holandes Guido van Rossum en los a\u00f1os 90. Su nombre esta inspirado en el grupo humorista brit\u00e1nico Monty Python.\r\n\r\nEste lenguaje es caracterizado por su simplicidad y r\u00e1pido aprendizaje. Si queremos hacer el cl\u00e1sico hola mundo en este lenguaje, nos basta con escribir print \"hola mundo\".\r\n\r\nLas\u00a0caracter\u00edsticas principales de este lenguaje son cuatro:\r\n<ol>\r\n\t<li><strong>Tipado din\u00e1mico<\/strong>, no es necesario indicar el tipo de variable al momento de declararlo ya que lo identifica automaticamente.<\/li>\r\n\t<li><strong>Fuertemente tipado,<\/strong> no se permite tratar de manera implicita a una variable como si fuera de otro tipo.<\/li>\r\n\t<li><strong>Multiplataforma,<\/strong>\u00a0 se refiere a que no depende de un sistema operativo en especifico para funcionar bien.<\/li>\r\n\t<li><strong>Multiparadigma,<\/strong>\u00a0python es un lenguaje orientado a diversos\u00a0paradigmas entre ellos tiene la programacion orientada a objetos, programaci\u00f3n estructurada, programaci\u00f3n funcional y programaci\u00f3n orientada a aspectos.<\/li>\r\n<\/ol>\r\n<h3>\u00bfC\u00f3mo comienzo a usar Python?<\/h3>\r\nPrimero hay que instalar este lenguaje y los pasos depender\u00e1n de tu sistema operativo.\r\n<ul>\r\n\t<li>Si usas linux no sera necesario instalarlo ya que viene por defecto instalado.<\/li>\r\n\t<li>En caso que uses Windows o Mac debes instalar python desde su p\u00e1gina\u00a0<a title=\"Python 2.7.8\" href=\"https:\/\/www.python.org\/download\/releases\/2.7.8\" target=\"_blank\">oficial<\/a>.<\/li>\r\n<\/ul>\r\nEn caso que desees probarlo antes de instalarlo puedes usar <a title=\"editor online de python\" href=\"http:\/\/repl.it\/languages\/Python\" target=\"_blank\">repl.it<\/a>.\r\n<h3>Operadores aritm\u00e9ticos en Python<\/h3>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Operador<\/th>\r\n<th>Descripci\u00f3n<\/th>\r\n<th>Ejemplo<\/th>\r\n<th>Resultado<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td>+<\/td>\r\n<td>Suma<\/td>\r\n<td>result = 5 + 6<\/td>\r\n<td>11<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>-<\/td>\r\n<td>Resta<\/td>\r\n<td>result = 5 - 1<\/td>\r\n<td>4<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>*<\/td>\r\n<td>Multiplicaci\u00f3n<\/td>\r\n<td>result = 2 * 6<\/td>\r\n<td>12<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>**<\/td>\r\n<td>Exponente<\/td>\r\n<td>result = 2**3<\/td>\r\n<td>8<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>\/<\/td>\r\n<td>Divisi\u00f3n<\/td>\r\n<td>result = 12 \/ 6<\/td>\r\n<td>2<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>\/\/<\/td>\r\n<td>Divisi\u00f3n Entera<\/td>\r\n<td>result = 4.5\/\/2<\/td>\r\n<td>2.0<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>%<\/td>\r\n<td>M\u00f3dulo<\/td>\r\n<td>result = 7 % 2<\/td>\r\n<td>1<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\nEl tipo m\u00f3dulo de python es el residuo que se obtiene en una divisi\u00f3n. Por ejemplo al dividir 7 entre 4. El n\u00famero 7 es el dividendo, 4 es el divisor, el cociente seria 1 y el resto seria 3. En este ejemplo de 7 % 4 el resultado seria 3.\r\n\r\nEn otras palabras, el m\u00f3dulo da como respuesta el resto de la divisi\u00f3n entre los dos n\u00fameros, donde el primero es el dividendo y el segundo es el divisor.\r\n<h3>Tipos B\u00e1sicos de Python<\/h3>\r\nExisten 5 tipos de datos principales:\r\n<ol>\r\n\t<li><strong>Enteros<\/strong>, son los n\u00fameros tanto negativos como positivos que no tienen decimales. Este es representado por el tipo <strong>int<\/strong> o <strong>long.<\/strong> La diferencia entre estos dos es que <strong>int<\/strong> tiene un limite de almacenamiento mientras que el tipo <strong>long<\/strong> puede usar toda la memoria que se tenga disponible para almacenar estos n\u00fameros.\r\n<strong>\r\n\u00bfComo funciona el int y el long?\r\n<\/strong>Para poder entender su funcionamiento mostraremos unos ejemplos.El tipo int se declara de la siguiente manera\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; numero_a = 2\r\n&gt;&gt;&gt; numero_b = 5\r\n[\/sourcecode]\r\n\r\nSi queremos visualizar su tipo basta con digitar lo siguiente\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; print type(numero_a)\r\n&lt;type 'int'&gt;\r\n[\/sourcecode]\r\n\r\nSi sumamos dos enteros nos da un entero\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; print numero_a + numero_b\r\n7\r\n[\/sourcecode]\r\n\r\nYa sea divisi\u00f3n seguir\u00e1 dando un entero\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; print numero_a \/ numero_b\r\n0\r\n\r\n&gt;&gt;&gt; print numero_b \/ numero_a\r\n2\r\n[\/sourcecode]\r\n\r\nPara crear un tipo long se hace un peque\u00f1o cambio\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; gran_numero_a = 2L\r\n&gt;&gt;&gt; gran_numero_b = 5L\r\n[\/sourcecode]\r\n\r\nPara confirmar que es un long podemos agregarle el type\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; type(gran_numero_a)\r\n&lt;type 'long'&gt;\r\n[\/sourcecode]\r\n\r\nQuiero volver a indicar que la \u00fanica diferencia entre int y long es que este \u00faltimo no tiene una restricci\u00f3n para almacenar n\u00fameros salvo la capacidad que tenga la memoria del computador. Por ende al igualar 2L con 2 da verdadero.\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; print gran_numero_a == numero_a\r\nTrue\r\n\r\n&gt;&gt;&gt; print 5L == 5\r\nTrue\r\n\r\n&gt;&gt;&gt; print 3L + 3\r\n6L\r\n\r\n&gt;&gt;&gt; print 2**5\r\n32\r\n\r\n&gt;&gt;&gt; print 2**70\r\n1180591620717411303424L\r\n\r\n&gt;&gt;&gt; print 2L - 1\r\n1L\r\n[\/sourcecode]\r\n\r\n<\/li>\r\n\t<li><strong>Reales<\/strong>, estos numeros son los que tienen decimales. En python son expresados con el tipo <strong>float.\u00a0<\/strong>El tipo float se obtiene cuando le asignas a una variable un valor como el siguiente\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; real_a = 0.236\r\n&gt;&gt;&gt; real_b = 5.414\r\n[\/sourcecode]\r\n\r\nPodemos verificar que su tipo si es float con la funcion type\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; print type(real_a)\r\n&lt;type 'float'&gt;\r\n[\/sourcecode]\r\n\r\nSi hacemos alguna operaci\u00f3n entre un entero y un real predomina el numero real\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; print 3 + 5.0\r\n8.0\r\n\r\n&gt;&gt;&gt; print 5\/2.0\r\n2.5\r\n[\/sourcecode]\r\n\r\n<\/li>\r\n\t<li><strong>Complejos<\/strong>, python es uno de los pocos lenguajes que soporta n\u00fameros imaginarios. Este tipo de variable est\u00e1n orientados mas que nada para un uso cient\u00edfico pues no es necesario profundizar mucho en el tema. En python son representados con nombre de <strong>complex<\/strong>.Si tenemos la curiosidad de como se declara los n\u00fameros complejos, se declara de la siguiente manera.\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; numero_imaginario = 1j\r\n\r\n&gt;&gt;&gt; type(numero_imaginario)\r\n&lt;type 'complex'&gt;\r\n\r\n&gt;&gt;&gt; 2j + 5j\r\n7j\r\n\r\n&gt;&gt;&gt; 2j * 5j\r\n(-10+0j)\r\n[\/sourcecode]\r\n\r\n<\/li>\r\n\t<li><strong>Cadenas<\/strong>, este tipo de variable, son conocidos con el tipo <strong>str<\/strong>, representan a las cadenas de texto ya sean con commillas simples ('texto') o con doble comillas (\"texto\")El tipo de variable sera visualizado de la siguiente manera\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; cadena =  &quot;frontend-labs&quot;\r\n&gt;&gt;&gt; type(cadena)\r\n&lt;type 'str'&gt;\r\n[\/sourcecode]\r\n\r\nTambi\u00e9n podemos usar tres comillas (\"\"\"texto\"\"\"). A diferencia de los otros dos esta forma de asginar una cadena de texto permite escribir en varias lineas y respeta los espacios y saltos de l\u00edneas\r\n\r\n[sourcecode language=\"python\"]\r\n&gt;&gt;&gt; cadena_grande = &quot;&quot;&quot;\r\nesta es una cadena muy grande\r\n\r\nel cual respeta los saltos de lineas\r\n&quot;&quot;&quot;\r\n[\/sourcecode]\r\n\r\n<\/li>\r\n\t<li>Booleanos, este tipo de variable solo puede tener dos tipos de variables: True o False. Estas variables en python son con conocidos con el nombre de <strong>bool<\/strong>. Es importante resaltar que python es un lenguaje sensitivo a las mayusculas. Por lo tanto, es importante tener cuidado con las mayusculas al tipiar en python. Es decir, al momento de tipiar los booleanos se debe escribir <strong>True<\/strong> y no true, ni TRUE, ni TrUe.<\/li>\r\n<\/ol>\r\nHasta aqui llego el primer tutorial de python en espa\u00f1ol. Si quieren profundizar mas de este tema pueden visitar la <a title=\"introduction\" href=\"https:\/\/docs.python.org\/2.7\/tutorial\/introduction.html\" target=\"_blank\">documentaci\u00f3n oficial <\/a>de python. La segunda parte de este tutorial hablar\u00e1 sobre <a title=\"Tutorial B\u00e1sico de Python \u2013 Parte II \u2013 Colecciones y Controles de Flujo\" href=\"http:\/\/frontend-labs.com\/1162--tutorial-basico-de-python-parte-ii-colecciones-y-controles-de-flujo\" target=\"_blank\">colecciones y controles de flujo<\/a>.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/python-e1404939832127.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Wed, 09 Jul 2014 16:02:28 +0000","created_by":1,"updated_at":"Thu, 24 Jul 2014 12:14:16 +0000","updated_by":1,"published_at":"Wed, 09 Jul 2014 16:02:28 +0000","published_by":1},{"id":1162,"title":"Tutorial B\u00e1sico de Python \u2013 Parte II : Colecciones y Controles de Flujo","slug":"tutorial-basico-de-python-parte-ii-colecciones-y-controles-de-flujo","markdown":"\nEn la [primera parte de este tutorial](http:\/\/frontend-labs.com\/1122--tutorial-basico-de-python-i \"primera parte de este tutorial\") aprendimos los operadores y los tipos b\u00e1sicos que existen en python. \u00a0Ahora en esta segunda parte aprenderemos las colecciones (listas, tuplas y \u00a0diccionarios) y los controles de flujo (condicionales y bucles).\n\n### Colecciones\n\n**Listas** Las listas es una colecci\u00f3n ordenada de elementos. Esta lista no restricciona el tipo de dato que se pueda ingresar. En otras palabras podemos tener una lista que contenga elementos de tipo cadena, entero, booleanos, decimales a la vez y sin ningun problema. Las listas son representadas con corchetes '[..]'. \u00a0No es necesario indicar sus indices ya que este se hace de manera autom\u00e1tica. [sourcecode language=\"python\"] # Primera manera de declarar una lista primera_lista = list() # Otra manera de declarar una lista segunda_lista = ['x', 'y', 'z'] # Tercera manera de declarar una lista tercera_lista = [] # Agregar valores a la lista primera_lista.append('a') primera_lista.append('b') primera_lista.append('c') primera_lista.append('d') primera_lista.append('e') print primera_lista # ['a', 'b', 'c', 'd', 'e'] # Seleccionar un elemento de la lista print primera_lista[0] # 'a' # Seleccionar varios elementos de una lista print primera_lista[2:] # ['c', 'd', 'e'] # Seleccionar un rango de elementos de una lista print primera_lista[1:3] # ['b', 'c'] # Eliminar un elemento de la lista del primera_lista[4] print primera_lista # print ['a', 'b', 'c', 'd'] #Otra manera de eliminar un elemento primera_lista.remove('d') print primera_lista # print ['a', 'b', 'c'] # Obtener el indice de un elemento primera_lista.index('b') # 1 [\/sourcecode] **Tuplas** Es muy similar a las listas sin embargo en este tipo de colecci\u00f3n no se permite editar la coleccion despues de haber sido creado. Esto puede servir mucho cuando uno crea un archivo de configuraci\u00f3n y desea que este no se vea alterado en un futuro ya que podr\u00eda corromper al programa. Ademas las tuplas son mas ligeras y por ende mas r\u00e1pidas que los diccionarios o listas. [sourcecode language=\"python\"] # Primera manera de declarar una tupla primera_tupla = ('a', 'b', 'c', 'd', 'e') # Segunda manera de declarar una tupla primera_tupla = 'a', 'b', 'c', 'd', 'e' # Como es una tupla, y esta es inmutable no tiene los atributos remove ni append (osea no se puede eliminar sus items ni agregarse). # Sin embargo si podemos seleccionar uno o varios elementos por su indice o viceversa print primera_tupla[0] # 'a' print primera_tupla[1:2] # ('b',) print primera_tupla[0:2] # ('a', 'b') print primera_tupla[0:2] # ('a', 'b') [\/sourcecode] Si se preguntan porque al escribir primera_tupla[1:2] obtengo como resultado \"('b',)\" y no \"('b')\" es por el hecho que cuando solo un elemento se encuentra en par\u00e9ntesis Python obvia los par\u00e9ntesis. Es debido a esto que cuando necesitemos tener una tupla de un solo elemento se debe asignar con una coma despues del elemento sino no sera considerado como una tupla. **Diccionarios** [sourcecode language=\"python\"] # Primera manera de declarar un diccionario primer_diccionario = dict() # Segunda manera de declarar un diccionario segundo_diccionario = {'key_1': 'valor_1','key_2': 'valor_2','key_3': 'valor_3','key_4': 'valor_4'} # Tercera manera de declarar un diccionario tercer_diccionario = {} # Agregar nuevo valor al diccionario primer_diccionario['otro_key'] = 'otro_valor' print primer_diccionario # {'otro_diccionario': 'otro_valor'} # Mostrar el valor del diccionario print primer_diccionario['otro_key'] # 'otro valor' # Eliminar un valor del diccionario del primer_diccionario['otro_key'] print primer_diccionario # {} [\/sourcecode] A diferencia de las dos anteriores este tipo de colecci\u00f3n si nos permite asignar nuestras propias llaves al item. ### Condicionales\n\n Para comenzar con las condicionales primero debemos entender tanto los operadores como las comparaciones que se usan con los valores booleanos. <table><thead><tr><th>Operador<\/th><th>Descripci\u00f3n<\/th><th>Ejemplo<\/th><\/tr><\/thead><tbody><tr><td>and<\/td><td>\u00bfa y b son ciertos?<\/td><td>result = True and False #result is False<\/td><\/tr><tr><td>or<\/td><td>\u00bfa o b es cierto?<\/td><td>result = True or False #result is True<\/td><\/tr><tr><td>not<\/td><td>No a<\/td><td>result = not True #result is False<\/td><\/tr><tr><td>==<\/td><td>\u00bfa y b son iguales?<\/td><td>result = 1==1 #result is True<\/td><\/tr><tr><td>!=<\/td><td>\u00bfa y b no son iguales?<\/td><td>result = 1!=1 #result is False<\/td><\/tr><tr><td>\u00a0<<\/td><td>\u00bfa es menor que b?<\/td><td>result = 1<2 #result is True<\/td><\/tr><tr><td>\u00a0><\/td><td>\u00bfa es mayor que b?<\/td><td>result = 1>2 #result is False<\/td><\/tr><tr><td>\u00a0<=<\/td><td>\u00bfa es menor o igual que b?<\/td><td>result = 1<=2 #result is True<\/td><\/tr><tr><td>\u00a0>=<\/td><td>\u00bfa es mayor o igual que b?<\/td><td>result = 1>=1 #result is True<\/td><\/tr><\/tbody><\/table>#### if\n\n Es la condici\u00f3n mas simple que tiene el repertorio de Python. [sourcecode language=\"python\"] if 1==1: print '\u00a1python es genial!' [\/sourcecode] [sourcecode language=\"python\"] web='frontend-labs.com' if web=='frontend-labs.com': print '\u00a1frontend-labs es genial!' [\/sourcecode] **\u00a0if ... else** Esta condici\u00f3n indica que si no se cumple la condici\u00f3n del **if** pues se realizara la acci\u00f3n que tiene **else.** Es como decir** si** condici\u00f3n a se cumple haz la acci\u00f3n a **sino** la acci\u00f3n b. [sourcecode language=\"python\"] condicion_a = True if condicion_a is True: print 'accion a' else: print 'accion b' [\/sourcecode] **\u00a0if ... elif...else** En este tipo de condici\u00f3n se puede ver al \"elif\" como el cl\u00e1sico \"else if\". Esta condici\u00f3n primero eval\u00faa la condici\u00f3n del if, en caso que sea falso proceder\u00e1 con el primer elif y en caso que este tambi\u00e9n sea falso proceder\u00e1 con el segundo elif y as\u00ed sucesivamente hasta que una condici\u00f3n sea cierta o hasta que no hayas mas elif o hasta que se choque con un else. [sourcecode language=\"python\"] condicion_a = False condicion_b = False condicion_c = True if condicion_a is True: print 'accion a' elif condicion_b is True: print 'accion b' elif condicion_c is True: print 'accion_c' else: print 'accion d' [\/sourcecode] **Otras maneras de validar** acci\u00f3n_a **if** Condici\u00f3n **else** acci\u00f3n_b, este tipo de condici\u00f3n indica que si C es verdadero pues har\u00e1 la acci\u00f3n A sino realizar\u00e1 la acci\u00f3n B. Condici\u00f3n **and** acci\u00f3n_a **or** acci\u00f3n_b, este tipo de realizar condiciones es parecido al primero. La \u00fanica diferencia que hay entres estos dos es que en este la condici\u00f3n esta primero y si es cierto se ejecuta lo que esta despu\u00e9s de **and**, osea la acci\u00f3n a. En caso que la condici\u00f3n sea falsa se procede a ejecutar la acci\u00f3n_b el cual esta ubicado despu\u00e9s del operador **or. ** [sourcecode language=\"python\"] ejemplo_1 = 'numero es uno' if (1==1) else 'numero no es uno' print ejemplo_1 #numero es uno ejemplo_2 = 1==1 and 'numero es uno' or 'numero no es uno' print ejemplo_2 #numero es uno [\/sourcecode] ### Bucles\n\n Los bucles repiten un pedazo de c\u00f3digo hasta que cierta condici\u00f3n se cumple. Tenemos dos tipos de bucles **for** y **while**. **for ... in** Este bucle recorre una colecci\u00f3n de elementos. Usualmente el bucle\u00a0**for**\u00a0es utilizado para recorrer listas. [sourcecode language=\"python\"] frameworks = ['django', 'easy-test-selenium', 'scrapy'] for framework in frameworks: print framework #django #easy-test-selenium #scrapy [\/sourcecode] **while** Ejecuta un fragmento de c\u00f3digo mientras la condici\u00f3n de esta se cumpla. [sourcecode language=\"python\"] horas = 0 #Imprime las horas hasta que llegue a 24 while horas < 24: horas += 1 print 'Ha transcurrido ' + str(horas) + ' hora(s)' [\/sourcecode] Esto ha sido todo hasta en este turial de python - colecciones y controles de flujo. Si desean saber mas sobre el tema pueden visitar la [documentaci\u00f3n oficial](https:\/\/docs.python.org\/2.7\/tutorial\/controlflow.html \"More Control Flow Tools\") de python. [Para el pr\u00f3ximo tutorial hablaremos de funciones.](http:\/\/frontend-labs.com\/1257--tutorial-basico-de-python-parte-iii-funciones \"Tutorial B\u00e1sico de Python \u2013 Parte III \u2013 Funciones\")\n","html":"En la <a title=\"primera parte de este tutorial\" href=\"http:\/\/frontend-labs.com\/1122--tutorial-basico-de-python-i\" target=\"_blank\">primera parte de este tutorial<\/a> aprendimos los operadores y los tipos b\u00e1sicos que existen en python. \u00a0Ahora en esta segunda parte aprenderemos las colecciones (listas, tuplas y \u00a0diccionarios) y los controles de flujo (condicionales y bucles).\r\n<h3>Colecciones<\/h3>\r\n<strong>Listas<\/strong>\r\n\r\nLas listas es una colecci\u00f3n ordenada de elementos. Esta lista no restricciona el tipo de dato que se pueda ingresar. En otras palabras podemos tener una lista que contenga elementos de tipo cadena, entero, booleanos, decimales a la vez y sin ningun problema.\r\n\r\nLas listas son representadas con corchetes '[..]'. \u00a0No es necesario indicar sus indices ya que este se hace de manera autom\u00e1tica.\r\n\r\n[sourcecode language=\"python\"]\r\n# Primera manera de declarar una lista\r\nprimera_lista = list()\r\n\r\n# Otra manera de declarar una lista\r\nsegunda_lista = ['x', 'y', 'z']\r\n\r\n# Tercera manera de declarar una lista\r\ntercera_lista = []\r\n\r\n# Agregar valores a la lista\r\nprimera_lista.append('a')\r\nprimera_lista.append('b')\r\nprimera_lista.append('c')\r\nprimera_lista.append('d')\r\nprimera_lista.append('e')\r\nprint primera_lista\r\n# ['a', 'b', 'c', 'd', 'e']\r\n\r\n# Seleccionar un elemento de la lista\r\nprint primera_lista[0]\r\n# 'a'\r\n\r\n# Seleccionar varios elementos de una lista\r\nprint primera_lista[2:]\r\n# ['c', 'd', 'e']\r\n\r\n# Seleccionar un rango de elementos de una lista\r\nprint primera_lista[1:3]\r\n# ['b', 'c']\r\n\r\n# Eliminar un elemento de la lista\r\ndel primera_lista[4]\r\nprint primera_lista\r\n# print ['a', 'b', 'c', 'd']\r\n\r\n#Otra manera de eliminar un elemento\r\nprimera_lista.remove('d')\r\nprint primera_lista\r\n# print ['a', 'b', 'c']\r\n\r\n# Obtener el indice de un elemento\r\nprimera_lista.index('b')\r\n# 1\r\n[\/sourcecode]\r\n\r\n<strong>Tuplas<\/strong>\r\n\r\nEs muy similar a las listas sin embargo en este tipo de colecci\u00f3n no se permite editar la coleccion despues de haber sido creado. Esto puede servir mucho cuando uno crea un archivo de configuraci\u00f3n y desea que este no se vea alterado en un futuro ya que podr\u00eda corromper al programa. Ademas las tuplas son mas ligeras y por ende mas r\u00e1pidas que los diccionarios o listas.\r\n\r\n[sourcecode language=\"python\"]\r\n# Primera manera de declarar una tupla\r\nprimera_tupla = ('a', 'b', 'c', 'd', 'e')\r\n\r\n# Segunda manera de declarar una tupla\r\nprimera_tupla = 'a', 'b', 'c', 'd', 'e'\r\n\r\n# Como es una tupla, y esta es inmutable no tiene los atributos remove ni append (osea no se puede eliminar sus items ni agregarse). \r\n\r\n# Sin embargo si podemos seleccionar uno o varios elementos por su indice o viceversa\r\nprint primera_tupla[0]\r\n# 'a'\r\n\r\nprint primera_tupla[1:2]\r\n# ('b',)\r\n\r\nprint primera_tupla[0:2]\r\n# ('a', 'b')\r\n\r\nprint primera_tupla[0:2]\r\n# ('a', 'b')\r\n\r\n[\/sourcecode]\r\n\r\nSi se preguntan porque al escribir primera_tupla[1:2] obtengo como resultado \"('b',)\" y no \"('b')\" es por el hecho que cuando solo un elemento se encuentra en par\u00e9ntesis Python obvia los par\u00e9ntesis. Es debido a esto que cuando necesitemos tener una tupla de un solo elemento se debe asignar con una coma despues del elemento sino no sera considerado como una tupla.\r\n\r\n<strong>Diccionarios<\/strong>\r\n\r\n[sourcecode language=\"python\"]\r\n# Primera manera de declarar un diccionario\r\nprimer_diccionario =  dict()\r\n\r\n# Segunda manera de declarar un diccionario\r\nsegundo_diccionario = {'key_1': 'valor_1','key_2': 'valor_2','key_3': 'valor_3','key_4': 'valor_4'}\r\n\r\n# Tercera manera de declarar un diccionario\r\ntercer_diccionario = {}\r\n\r\n# Agregar nuevo valor al diccionario\r\nprimer_diccionario['otro_key'] = 'otro_valor'\r\nprint primer_diccionario\r\n# {'otro_diccionario': 'otro_valor'}\r\n\r\n# Mostrar el valor del diccionario\r\nprint primer_diccionario['otro_key']\r\n# 'otro valor'\r\n\r\n# Eliminar un valor del diccionario\r\ndel primer_diccionario['otro_key']\r\nprint primer_diccionario\r\n# {}\r\n[\/sourcecode]\r\n\r\nA diferencia de las dos anteriores este tipo de colecci\u00f3n si nos permite asignar nuestras propias llaves al item.\r\n<h3>Condicionales<\/h3>\r\nPara comenzar con las condicionales primero debemos entender tanto los operadores como las comparaciones que se usan con los valores booleanos.\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Operador<\/th>\r\n<th>Descripci\u00f3n<\/th>\r\n<th>Ejemplo<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td>and<\/td>\r\n<td>\u00bfa y b son ciertos?<\/td>\r\n<td>result = True and False #result is False<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>or<\/td>\r\n<td>\u00bfa o b es cierto?<\/td>\r\n<td>result = True or False #result is True<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>not<\/td>\r\n<td>No a<\/td>\r\n<td>result = not True #result is False<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>==<\/td>\r\n<td>\u00bfa y b son iguales?<\/td>\r\n<td>result = 1==1 #result is True<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>!=<\/td>\r\n<td>\u00bfa y b no son iguales?<\/td>\r\n<td>result = 1!=1 #result is False<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>\u00a0&lt;<\/td>\r\n<td>\u00bfa es menor que b?<\/td>\r\n<td>result = 1&lt;2 #result is True<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>\u00a0&gt;<\/td>\r\n<td>\u00bfa es mayor que b?<\/td>\r\n<td>result = 1&gt;2 #result is False<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>\u00a0&lt;=<\/td>\r\n<td>\u00bfa es menor o igual que b?<\/td>\r\n<td>result = 1&lt;=2 #result is True<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>\u00a0&gt;=<\/td>\r\n<td>\u00bfa es mayor o igual que b?<\/td>\r\n<td>result = 1&gt;=1 #result is True<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h4>if<\/h4>\r\nEs la condici\u00f3n mas simple que tiene el repertorio de Python.\r\n\r\n[sourcecode language=\"python\"]\r\nif 1==1:\r\n    print '\u00a1python es genial!'\r\n[\/sourcecode]\r\n\r\n\r\n[sourcecode language=\"python\"]\r\nweb='frontend-labs.com'\r\nif web=='frontend-labs.com':\r\n    print '\u00a1frontend-labs es genial!'\r\n[\/sourcecode]\r\n\r\n<strong>\u00a0if ... else<\/strong>\r\n\r\nEsta condici\u00f3n indica que si no se cumple la condici\u00f3n del <strong>if<\/strong> pues se realizara la acci\u00f3n que tiene <strong>else.<\/strong> Es como decir<strong> si<\/strong> condici\u00f3n a se cumple haz la acci\u00f3n a <strong>sino<\/strong> la acci\u00f3n b.\r\n\r\n[sourcecode language=\"python\"]\r\ncondicion_a = True\r\nif condicion_a is True:\r\n    print 'accion a'\r\nelse:\r\n    print 'accion b'\r\n[\/sourcecode]\r\n\r\n<strong>\u00a0if ... elif...else<\/strong>\r\n\r\nEn este tipo de condici\u00f3n se puede ver al \"elif\" como el cl\u00e1sico \"else if\". Esta condici\u00f3n primero eval\u00faa la condici\u00f3n del if, en caso que sea falso proceder\u00e1 con el primer elif y en caso que este tambi\u00e9n sea falso proceder\u00e1 con el segundo elif y as\u00ed sucesivamente hasta que una condici\u00f3n sea cierta o hasta que no hayas mas elif o hasta que se choque con un else.\r\n\r\n[sourcecode language=\"python\"]\r\ncondicion_a = False\r\ncondicion_b = False\r\ncondicion_c = True\r\n\r\nif condicion_a is True:\r\n    print 'accion a'\r\nelif condicion_b is True:\r\n    print 'accion b'\r\nelif condicion_c is True:\r\n    print 'accion_c'\r\nelse:\r\n    print 'accion d'\r\n[\/sourcecode]\r\n\r\n<strong>Otras maneras de validar<\/strong>\r\nacci\u00f3n_a <strong>if<\/strong> Condici\u00f3n <strong>else<\/strong> acci\u00f3n_b, este tipo de condici\u00f3n indica que si C es verdadero pues har\u00e1 la acci\u00f3n A sino realizar\u00e1 la acci\u00f3n B.\r\n\r\nCondici\u00f3n <strong>and<\/strong> acci\u00f3n_a <strong>or<\/strong> acci\u00f3n_b, este tipo de realizar condiciones es parecido al primero. La \u00fanica diferencia que hay entres estos dos es que en este la condici\u00f3n esta primero y si es cierto se ejecuta lo que esta despu\u00e9s de <strong>and<\/strong>, osea la acci\u00f3n a. En caso que la condici\u00f3n sea falsa se procede a ejecutar la acci\u00f3n_b el cual esta ubicado despu\u00e9s del operador <strong>or.\r\n<\/strong>\r\n\r\n[sourcecode language=\"python\"]\r\nejemplo_1 = 'numero es uno' if (1==1) else 'numero no es uno'\r\nprint ejemplo_1\r\n#numero es uno\r\n\r\nejemplo_2 = 1==1 and 'numero es uno' or 'numero no es uno'\r\nprint ejemplo_2\r\n#numero es uno\r\n\r\n[\/sourcecode]\r\n\r\n<h3>Bucles<\/h3>\r\nLos bucles repiten un pedazo de c\u00f3digo hasta que cierta condici\u00f3n se cumple. Tenemos dos tipos de bucles <strong>for<\/strong> y <strong>while<\/strong>.\r\n\r\n<strong>for ... in<\/strong>\r\n\r\nEste bucle recorre una colecci\u00f3n de elementos. Usualmente el bucle\u00a0<strong>for<\/strong>\u00a0es utilizado para recorrer listas.\r\n\r\n[sourcecode language=\"python\"]\r\nframeworks = ['django', 'easy-test-selenium', 'scrapy']\r\nfor framework in frameworks:\r\n    print framework\r\n#django\r\n#easy-test-selenium\r\n#scrapy\r\n[\/sourcecode]\r\n\r\n<strong>while<\/strong>\r\n\r\nEjecuta un fragmento de c\u00f3digo mientras la condici\u00f3n de esta se cumpla.\r\n\r\n[sourcecode language=\"python\"]\r\nhoras = 0\r\n#Imprime las horas hasta que llegue a 24\r\nwhile horas &lt; 24:\r\n    horas += 1\r\n    print 'Ha transcurrido ' + str(horas) + ' hora(s)'\r\n[\/sourcecode]\r\n\r\nEsto ha sido todo hasta en este turial de python - colecciones y controles de flujo. Si desean saber mas sobre el tema pueden visitar la <a title=\"More Control Flow Tools\" href=\"https:\/\/docs.python.org\/2.7\/tutorial\/controlflow.html\" target=\"_blank\">documentaci\u00f3n oficial<\/a> de python. <a title=\"Tutorial B\u00e1sico de Python \u2013 Parte III \u2013 Funciones\" href=\"http:\/\/frontend-labs.com\/1257--tutorial-basico-de-python-parte-iii-funciones\" target=\"_blank\">Para el pr\u00f3ximo tutorial hablaremos de funciones.<\/a>","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/python3-e1405119024901.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Thu, 10 Jul 2014 00:43:14 +0000","created_by":1,"updated_at":"Thu, 24 Jul 2014 12:02:06 +0000","updated_by":1,"published_at":"Thu, 10 Jul 2014 00:43:14 +0000","published_by":1},{"id":889,"title":"Automatizar la creaci\u00f3n de sprites con Grunt ","slug":"automatizar-la-creacion-de-sprites-con-grunt","markdown":"\n\u00bfPor qu\u00e9 usar sprites en nuestro proyecto?\n------------------------------------------\n\n Si combinamos varias im\u00e1genes peque\u00f1as en una grande, el navegador requerir\u00e1 menos conexiones al servidor, se ahorran bytes en cada petici\u00f3n y dependiendo del nivel de optimizaci\u00f3n del sprite, esto puede llevarnos a ahorrar una gran cantidad de ancho de banda. Este es el sprite que utiliza [Pinterest](http:\/\/pinterest.com). ![webapp-desktop-main-1x.356df158](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/webapp-desktop-main-1x.356df158.png) \u00a0 Imaginemos que necesitamos agregar una nueva imagen en ese sprite y reordenar las otras que se encuentran alrededor, tendr\u00edamos que recalcular las posiciones de los estilos para cada imagen en nuestra hoja de estilos... \u00a1Seguro que a nadie le gustar\u00eda tener que mantener manualmente un sprite as\u00ed!... Es por eso que vamos a aprender a automatizar este proceso con la ayuda de Grunt, si no lo\u00a0tienes \u00a0instalado\u00a0no te preocupes que tenemos un tutorial de uso b\u00e1sico en [este post](http:\/\/frontend-labs.com\/146--gruntjs-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos \"GruntJS en espa\u00f1ol \u2013 tutorial b\u00e1sico y primeros pasos\"). La tarea en Grunt a usar es la de **grunt-spritesmith**, para ver su documentaci\u00f3n puedes visitar el repositorio en Github\u00a0[https:\/\/github.com\/Ensighten\/grunt-spritesmith](https:\/\/github.com\/Ensighten\/grunt-spritesmith) Ahora vamos a armar la\u00a0estructura de archivos para empezar a crear el sprite de nuestro proyecto: [![Captura de pantalla 2014-06-26 a la(s) 17.29.52](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/Captura-de-pantalla-2014-06-26-a-las-17.29.52.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/Captura-de-pantalla-2014-06-26-a-las-17.29.52.png)Dentro de <span class=\"folder\">mi-proyecto<\/span> tenemos las carpetas <span class=\"folder\">css<\/span> (en donde se crear\u00e1 autom\u00e1ticamente la hoja de estilos) y la carpeta <span class=\"folder\">img<\/span> que a su vez contiene la carpeta <span class=\"folder\">sprites<\/span> en donde guardaremos todos los iconos independientes que se unir\u00e1n\u00a0m\u00e1s adelante. (Para mantener este ejemplo b\u00e1sico solo se trabajar\u00e1 con im\u00e1genes de extensi\u00f3n .png) El contenido de <span class=\"folder\">package.json<\/span>\u00a0es el siguiente: [code lang=\"javascript\"] { \"name\": \"mi-proyecto\", \"version\": \"0.1.0\", \"devDependencies\": { \"grunt\": \"~0.4.5\", \"grunt-spritesmith\": \"^2.1.0\" } } [\/code] y el de <span class=\"folder\">Gruntfile.js<\/span> es: [code lang=\"javascript\"] module.exports = function(grunt) { grunt.initConfig({ sprite:{ all: { src: 'img\/sprites\/*.png', destImg: 'img\/spritesheet.png', destCSS: 'css\/sprites.css', algorithm: 'binary-tree' } } }); \/\/ Cargar tarea grunt.loadNpmTasks('grunt-spritesmith'); }; [\/code] Luego en terminal nos ubicamos en la ra\u00edz de nuestro proyecto y ponemos la l\u00ednea [code lang=\"javascript\"] npm install [\/code] Nos quedar\u00eda de la siguiente manera: ![Captura de pantalla 2014-06-26 a la(s) 17.19.51](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.19.51.png) Al presionar enter, \u00e9sto crear\u00e1 una nueva carpeta <span class=\"folder\">node_modules<\/span> en donde se descargar\u00e1n las dependencias que son le\u00eddas del archivo <span class=\"folder\">package.json<\/span>![Captura de pantalla 2014-06-26 a la(s) 17.21.48](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.21.48.png) Despu\u00e9s ejecutar la tarea grunt sprite ![Captura de pantalla 2014-06-26 a la(s) 17.22.15](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.22.15.png)![Captura de pantalla 2014-06-26 a la(s) 17.22.37](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.22.37.png) Esto crear\u00e1 el archivo <span class=\"folder\">spritesheet.png<\/span> y <span class=\"folder\">sprites.css<\/span> en las rutas especificadas anteriormente: ![Captura de pantalla 2014-06-26 a la(s) 17.23.13](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.23.13.png)![Captura de pantalla 2014-06-26 a la(s) 17.23.26](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.23.26.png) Los estilos generados y listos para usar se encontrar\u00e1n en <span class=\"folder\">sprite.css<\/span> [code lang=\"css\"] \/* Icon classes can be used entirely standalone. They are named after their original file names. ```html <i class=\"icon-home\"><\/i> ``` *\/ .icon-ico_alert { background-image: url(..\/img\/spritesheet.png); background-position: -93px 0px; width: 21px; height: 18px; } .icon-ico_check { background-image: url(..\/img\/spritesheet.png); background-position: 0px 0px; width: 65px; height: 60px; } .icon-ico_fb { background-image: url(..\/img\/spritesheet.png); background-position: -65px 0px; width: 28px; height: 28px; } .icon-ico_google { background-image: url(..\/img\/spritesheet.png); background-position: -65px -28px; width: 28px; height: 28px; } .icon-ico_mail { background-image: url(..\/img\/spritesheet.png); background-position: 0px -60px; width: 28px; height: 28px; } .icon-ico_time { background-image: url(..\/img\/spritesheet.png); background-position: -28px -60px; width: 28px; height: 28px; } .icon-ico_twitter { background-image: url(..\/img\/spritesheet.png); background-position: -56px -60px; width: 28px; height: 28px; } [\/code] \u00bfUtilizas Preprocesadores?\n--------------------------\n\n Tenemos tambi\u00e9n la opci\u00f3n de generar nuestros estilos en distintos formatos (CSS, SASS, SCSS, LESS, Stylus). Para generar el archivo de estilos\u00a0en [Stylus](http:\/\/learnboost.github.io\/stylus\/), cambiamos la l\u00ednea 7 de <span class=\"folder\">Gruntfile.js<\/span> por la siguiente: [code lang=\"javascript\"] destCSS: 'css\/sprites.styl', [\/code] Y ejecutamos nuevamente la tarea grunt sprite ![Captura de pantalla 2014-06-26 a la(s) 17.22.15](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.22.15.png) Eso crear\u00e1 un conjunto de mixins en <span class=\"folder\">sprites.styl<\/span> con todas las variables necesarias para ser utilizadas con un simple nombre, por ejemplo: [code lang=\"javascript\"] .icoFacebook sprite($ico_fb) \/\/ el nombre de la imagen es el mismo \"ico_fb.png\" display: inline-block [\/code] Lo cual compila en css a: [code lang=\"css\"] .icoFacebook { background-image: url(\"..\/img\/spritesheet.png\"); background-position: -65px 0px; width: 28px; height: 28px; display: inline-block; } [\/code] Debemos tener en cuenta que los nombres de las variables generadas en el archivo <span class=\"folder\">sprites.styl<\/span> son los mismos nombres que los archivos .png que se encuentran en la ruta <span class=\"folder\">img\/sprite<\/span>.\n","html":"<h2>\u00bfPor qu\u00e9 usar sprites en nuestro proyecto?<\/h2>\r\n\r\nSi combinamos varias im\u00e1genes peque\u00f1as en una grande, el navegador requerir\u00e1 menos conexiones al servidor, se ahorran bytes en cada petici\u00f3n y dependiendo del nivel de optimizaci\u00f3n del sprite, esto puede llevarnos a ahorrar una gran cantidad de ancho de banda.\r\n\r\nEste es el sprite que utiliza <a href=\"http:\/\/pinterest.com\" target=\"_blank\">Pinterest<\/a>.\r\n\r\n<img class=\"aligncenter size-full wp-image-1001\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/webapp-desktop-main-1x.356df158.png\" alt=\"webapp-desktop-main-1x.356df158\" width=\"613\" height=\"579\" \/>\r\n\r\n&nbsp;\r\n\r\nImaginemos que necesitamos agregar una nueva imagen en ese sprite y reordenar las otras que se encuentran alrededor, tendr\u00edamos que recalcular las posiciones de los estilos para cada imagen en nuestra hoja de estilos...\r\n\r\n\u00a1Seguro que a nadie le gustar\u00eda tener que mantener manualmente un sprite as\u00ed!...\r\n\r\nEs por eso que vamos a aprender a automatizar este proceso con la ayuda de Grunt, si no lo\u00a0tienes \u00a0instalado\u00a0no te preocupes que tenemos un tutorial de uso b\u00e1sico en <a title=\"GruntJS en espa\u00f1ol \u2013 tutorial b\u00e1sico y primeros pasos\" href=\"http:\/\/frontend-labs.com\/146--gruntjs-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos\" target=\"_blank\">este post<\/a>.\r\n\r\nLa tarea en Grunt a usar es la de <strong>grunt-spritesmith<\/strong>, para ver su documentaci\u00f3n puedes visitar el repositorio en Github\u00a0<a href=\"https:\/\/github.com\/Ensighten\/grunt-spritesmith\" target=\"_blank\">https:\/\/github.com\/Ensighten\/grunt-spritesmith<\/a>\r\n\r\nAhora vamos a armar la\u00a0estructura de archivos para empezar a crear el sprite de nuestro proyecto:\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/Captura-de-pantalla-2014-06-26-a-las-17.29.52.png\"><img class=\"aligncenter size-full wp-image-1004\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/06\/Captura-de-pantalla-2014-06-26-a-las-17.29.52.png\" alt=\"Captura de pantalla 2014-06-26 a la(s) 17.29.52\" width=\"647\" height=\"147\" \/><\/a>Dentro de <span class=\"folder\">mi-proyecto<\/span> tenemos las carpetas <span class=\"folder\">css<\/span> (en donde se crear\u00e1 autom\u00e1ticamente la hoja de estilos) y la carpeta <span class=\"folder\">img<\/span> que a su vez contiene la carpeta <span class=\"folder\">sprites<\/span> en donde guardaremos todos los iconos independientes que se unir\u00e1n\u00a0m\u00e1s adelante. (Para mantener este ejemplo b\u00e1sico solo se trabajar\u00e1 con im\u00e1genes de extensi\u00f3n .png)\r\n\r\nEl contenido de <span class=\"folder\">package.json<\/span>\u00a0es el siguiente:\r\n\r\n[code lang=\"javascript\"]\r\n{\r\n &quot;name&quot;: &quot;mi-proyecto&quot;,\r\n &quot;version&quot;: &quot;0.1.0&quot;,\r\n &quot;devDependencies&quot;: {\r\n &quot;grunt&quot;: &quot;~0.4.5&quot;,\r\n &quot;grunt-spritesmith&quot;: &quot;^2.1.0&quot;\r\n }\r\n}\r\n[\/code]\r\n\r\ny el de <span class=\"folder\">Gruntfile.js<\/span> es:\r\n\r\n[code lang=\"javascript\"]\r\n\r\nmodule.exports = function(grunt) {\r\n  grunt.initConfig({\r\n    sprite:{\r\n      all: {\r\n        src: 'img\/sprites\/*.png',\r\n        destImg: 'img\/spritesheet.png',\r\n        destCSS: 'css\/sprites.css',\r\n        algorithm: 'binary-tree'\r\n      }\r\n    }\r\n  });\r\n\r\n  \/\/ Cargar tarea\r\n  grunt.loadNpmTasks('grunt-spritesmith');\r\n};\r\n\r\n[\/code]\r\n\r\nLuego en terminal nos ubicamos en la ra\u00edz de nuestro proyecto y ponemos la l\u00ednea\r\n\r\n[code lang=\"javascript\"]\r\nnpm install\r\n[\/code]\r\n\r\nNos quedar\u00eda de la siguiente manera:\r\n\r\n<img class=\"aligncenter size-full wp-image-1177\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.19.51.png\" alt=\"Captura de pantalla 2014-06-26 a la(s) 17.19.51\" width=\"530\" height=\"52\" \/>\r\n\r\nAl presionar enter, \u00e9sto crear\u00e1 una nueva carpeta <span class=\"folder\">node_modules<\/span> en donde se descargar\u00e1n las dependencias que son le\u00eddas del archivo <span class=\"folder\">package.json<\/span>\r\n\r\n<img class=\"aligncenter size-full wp-image-1178\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.21.48.png\" alt=\"Captura de pantalla 2014-06-26 a la(s) 17.21.48\" width=\"412\" height=\"104\" \/>\r\n\r\nDespu\u00e9s ejecutar la tarea grunt sprite\r\n<img class=\"aligncenter size-full wp-image-1224\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.22.15.png\" alt=\"Captura de pantalla 2014-06-26 a la(s) 17.22.15\" width=\"514\" height=\"57\" \/>\r\n\r\n<img class=\"aligncenter size-full wp-image-1226\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.22.37.png\" alt=\"Captura de pantalla 2014-06-26 a la(s) 17.22.37\" width=\"538\" height=\"167\" \/>\r\n\r\nEsto crear\u00e1 el archivo <span class=\"folder\">spritesheet.png<\/span> y <span class=\"folder\">sprites.css<\/span> en las rutas especificadas anteriormente:\r\n\r\n<img class=\"aligncenter size-full wp-image-1229\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.23.13.png\" alt=\"Captura de pantalla 2014-06-26 a la(s) 17.23.13\" width=\"622\" height=\"236\" \/>\r\n\r\n<img class=\"aligncenter size-full wp-image-1230\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.23.26.png\" alt=\"Captura de pantalla 2014-06-26 a la(s) 17.23.26\" width=\"416\" height=\"111\" \/>\r\n\r\nLos estilos generados y listos para usar se encontrar\u00e1n en <span class=\"folder\">sprite.css<\/span>\r\n\r\n[code lang=\"css\"]\r\n\/*\r\nIcon classes can be used entirely standalone. They are named after their original file names.\r\n\r\n```html\r\n&lt;i class=&quot;icon-home&quot;&gt;&lt;\/i&gt;\r\n```\r\n*\/\r\n.icon-ico_alert {\r\n  background-image: url(..\/img\/spritesheet.png);\r\n  background-position: -93px 0px;\r\n  width: 21px;\r\n  height: 18px;\r\n}\r\n.icon-ico_check {\r\n  background-image: url(..\/img\/spritesheet.png);\r\n  background-position: 0px 0px;\r\n  width: 65px;\r\n  height: 60px;\r\n}\r\n.icon-ico_fb {\r\n  background-image: url(..\/img\/spritesheet.png);\r\n  background-position: -65px 0px;\r\n  width: 28px;\r\n  height: 28px;\r\n}\r\n.icon-ico_google {\r\n  background-image: url(..\/img\/spritesheet.png);\r\n  background-position: -65px -28px;\r\n  width: 28px;\r\n  height: 28px;\r\n}\r\n.icon-ico_mail {\r\n  background-image: url(..\/img\/spritesheet.png);\r\n  background-position: 0px -60px;\r\n  width: 28px;\r\n  height: 28px;\r\n}\r\n.icon-ico_time {\r\n  background-image: url(..\/img\/spritesheet.png);\r\n  background-position: -28px -60px;\r\n  width: 28px;\r\n  height: 28px;\r\n}\r\n.icon-ico_twitter {\r\n  background-image: url(..\/img\/spritesheet.png);\r\n  background-position: -56px -60px;\r\n  width: 28px;\r\n  height: 28px;\r\n}\r\n[\/code]\r\n\r\n<h2>\u00bfUtilizas Preprocesadores?<\/h2>\r\nTenemos tambi\u00e9n la opci\u00f3n de generar nuestros estilos en distintos formatos (CSS, SASS, SCSS, LESS, Stylus).\r\n\r\nPara generar el archivo de estilos\u00a0en <a href=\"http:\/\/learnboost.github.io\/stylus\/\" target=\"_blank\">Stylus<\/a>, cambiamos la l\u00ednea 7 de <span class=\"folder\">Gruntfile.js<\/span> por la siguiente:\r\n\r\n[code lang=\"javascript\"]\r\ndestCSS: 'css\/sprites.styl',\r\n[\/code]\r\n\r\nY ejecutamos nuevamente la tarea grunt sprite\r\n<img class=\"aligncenter size-full wp-image-1224\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/Captura-de-pantalla-2014-06-26-a-las-17.22.15.png\" alt=\"Captura de pantalla 2014-06-26 a la(s) 17.22.15\" width=\"514\" height=\"57\" \/>\r\n\r\nEso crear\u00e1 un conjunto de mixins en <span class=\"folder\">sprites.styl<\/span> con todas las variables necesarias para ser utilizadas con un simple nombre, por ejemplo:\r\n\r\n[code lang=\"javascript\"]\r\n.icoFacebook\r\n  sprite($ico_fb) \/\/ el nombre de la imagen es el mismo &quot;ico_fb.png&quot;\r\n  display: inline-block\r\n[\/code]\r\n\r\nLo cual compila en css a:\r\n\r\n[code lang=\"css\"]\r\n.icoFacebook {\r\n  background-image: url(&quot;..\/img\/spritesheet.png&quot;);\r\n  background-position: -65px 0px;\r\n  width: 28px;\r\n  height: 28px;\r\n  display: inline-block;\r\n}\r\n[\/code]\r\n\r\nDebemos tener en cuenta que los nombres de las variables generadas en el archivo <span class=\"folder\">sprites.styl<\/span> son los mismos nombres que los archivos .png que se encuentran en la ruta <span class=\"folder\">img\/sprite<\/span>.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/sprites.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":2,"created_at":"Fri, 11 Jul 2014 15:47:13 +0000","created_by":1,"updated_at":"Tue, 05 Aug 2014 14:11:01 +0000","updated_by":1,"published_at":"Fri, 11 Jul 2014 15:47:13 +0000","published_by":1},{"id":1257,"title":"Tutorial B\u00e1sico de Python \u2013 Parte III : Funciones","slug":"tutorial-basico-de-python-parte-iii-funciones","markdown":"\nSiguiendo con los tutoriales de python, en este tutorial hablaremos de las funciones. Si desean ver el tema anterior a este pueden visitar[ nuestro tutorial parte II de python](http:\/\/frontend-labs.com\/1162--tutorial-basico-de-python-parte-ii-colecciones-y-controles-de-flujo \"Tutorial B\u00e1sico de Python \u2013 Parte II \u2013 Colecciones y Controles de Flujo\") el cual habla de colecciones y controles de flujos. Se le llama funci\u00f3n al fragmento de c\u00f3digo el cual puede ser ejecutado cuando sea necesario por medio del nombre el cual se le haya asignado a este fragmento de c\u00f3digo. A esta instrucci\u00f3n se le conoce con el nombre de **def**\u00a0. Las funciones en python se definen de la siguiente manera. [sourcecode language=\"python\"] def mi_funcion(param): print param [\/sourcecode] Para python los par\u00e1metros son opcionales. Adem\u00e1s no tiene la necesidad de retornar algo, sin embargo si lo hiciese la estructura de la funci\u00f3n no se ver\u00eda alterada solo se agregaria un return al final del fragmento del c\u00f3digo indicando lo que se desea retornar. [sourcecode language=\"python\"] def mi_funcion(): resultado = 1 + 2 return resultado [\/sourcecode] Como se puede visualizar solo se agrego un return. Ahora si se desea agregar par\u00e1metros pues como vemos m\u00e1s arriba estos se ubican entre los par\u00e9ntesis. Por ejemplo mas abajo tenemos nuestra funci\u00f3n 'multiplica_por_dos' que acepta un n\u00famero como par\u00e1metro y retorna este n\u00famero multiplicado por dos [sourcecode language=\"python\"] def multiplica_por_dos(numero): return numero*2 [\/sourcecode] Como ves las funciones en python son bastante sencillas. Si deseamos ejecutar esta funci\u00f3n basta con llamar el nombre de la funci\u00f3n e indicar entre par\u00e9ntesis el numero que sera enviado como par\u00e1metro. [sourcecode language=\"python\"] multiplica_por_dos(3) # 6 [\/sourcecode] Ahora si invocamos sin par\u00e1metro alguno a nuestra funci\u00f3n 'multiplica_por_dos' nos lanzar\u00e1 un error [sourcecode language=\"python\"] multiplica_por_dos() Traceback (most recent call last): File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt; TypeError: multiplica_por_dos() takes exactly 1 argument (0 given) [\/sourcecode] En python es posible indicar que un par\u00e1metro sea opcional indic\u00e1ndole un valor por defecto. Para ello modificaremos nuestra funci\u00f3n 'multiplica_por_dos' asign\u00e1ndole al par\u00e1metro 'numero' el valor dos como el valor por defecto. [sourcecode language=\"python\"] def multiplica_por_dos(numero=2): return numero*2 [\/sourcecode] Ahora cuando invoquemos nuestra funci\u00f3n sin par\u00e1metro alguno el par\u00e1metro 'numero' tendra el valor de dos y por ende nos devolver\u00e1 cuatro, ya que 2 por 2 es 4. [sourcecode language=\"python\"] multiplica_por_dos() # 4 multiplica_por_dos(5) # 10 [\/sourcecode] Nuestra funci\u00f3n puede recibir mas que solo un par\u00e1metro. [sourcecode language=\"python\"] def multiplica_numeros(a, b, c): return a*b*c [\/sourcecode] Si queremos llamar a esta funci\u00f3n lo hacemos de la siguiente manera. Para este ejemplo enviaremos los par\u00e1metros 2, 3 y 6 el cual da como producto 36. [sourcecode language=\"python\"] multiplica_numeros(2, 3, 6) # da como resultado 36 # Tambien podemos indicarle el parametro al que va ir multiplica_numeros(a=2, b=3, c=6) # da como resultado 36 # La ventaja de esto es que el orden no importa multiplica_numeros(c=6, b=3, a=2) # da como resultado 36 [\/sourcecode] En python tenemos distintas maneras de asignar los par\u00e1metros a la funci\u00f3n. Hasta ahora hemos usado el \"m\u00e9todo cl\u00e1sico\" por as\u00ed decirlo. Sin embargo existen otras maneras de hacerlo. Una de estas es enviarla por medio de una lista y el otro m\u00e9todo es envi\u00e1rselo por medio de un diccionario (si se desea saber mas acerca de listas y diccionario puedes entrar al [tutorial anterior a este](http:\/\/frontend-labs.com\/1162--tutorial-basico-de-python-parte-ii-colecciones-y-controles-de-flujo \"Tutorial B\u00e1sico de Python \u2013 Parte II \u2013 Colecciones y Controles de Flujo\")). Si queremos enviar una lista tenemos que enviar los par\u00e1metros en orden y la lista debe estar despu\u00e9s de un asterisco. [sourcecode language=\"python\"] #Tener presente que los par\u00e1metros de nuestra funci\u00f3n 'multiplica_numeros' son a b y c #Creamos nuestra lista en orden parametros = list() parametros.append(2) # Sera el parametro de a parametros.append(3) # Sera el parametro de b parametros.append(6) # Sera el parametro de c # Para asignarle la lista a la funcion se debe agregar un asterisco multiplica_numeros(*parametros) # La respuesta es 36 [\/sourcecode] Como lo hab\u00edamos mencionado, en python tambi\u00e9n podemos asignarle un diccionario como par\u00e1metro. A diferencia de la lista en este caso tu asignas el nombre de la llave y del valor y al momento de asignarlo a la funci\u00f3n se le antepone el doble asterisco. Se debe tener en cuenta que el nombre de las llaves deben ser el nombre de los par\u00e1metros de la funci\u00f3n. [sourcecode language=\"python\"] #Tener presente que los par\u00e1metros de nuestra funci\u00f3n 'multiplica_numeros' son a b y c #Creamos nuestro diccionario con las llaves y valores correspondientes parametros = dict() parametros['a'] = 2 # Sera el parametro de a parametros['b'] = 3 # Sera el parametro de b parametros['c'] = 6 # Sera el parametro de c # Para asignar el diccionario a la funcion se debe agregar dos asteriscos multiplica_numeros(**parametros) # La respuesta es 36 [\/sourcecode] En python tambi\u00e9n podemos hace lo inverso a esto. Es decir, la funci\u00f3n puede tener como par\u00e1metro una tupla o un diccionario. En este caso la tupla es representado por un asterisco y el diccionario por dos asteriscos. Al asignar este tipo de par\u00e1metro, estos deben ir al final. [sourcecode language=\"python\"] # Para tener una tupla como parametro le asignamos un * def mi_funcion_con_tupla(parametro_1, *tupla): # parametro_1 si es obligatorio print parametro_1 #Elementos opcionales for elemento in tupla: print elemento [\/sourcecode] Pero... \u00bfPara que sirve esto? bueno la ventaja de tener este tipo de par\u00e1metro es que ahora nuestra funci\u00f3n puede recibir los par\u00e1metros que uno desee. [sourcecode language=\"python\"] # Para tener una tupla como parametro le asignamos un * mi_funcion_con_tupla('valor uno', 'otro_valor', 'y uno mas', 'y aqui tengo otro', 'otro mas') # Esta funcion imprime lo siguiente&lt;\/pre&gt; # valor uno # otro_valor # y uno mas # y aqui tengo otro # otro mas [\/sourcecode] Es importante recordar que\u00a0los par\u00e1metros que recibe la tupla son opcionales si quiero no env\u00edo\u00a0nada\u00a0y si deseo env\u00edo mil par\u00e1metros. Obviamente nadie pasar\u00eda mil par\u00e1metros\u00a0por una funci\u00f3n. [sourcecode language=\"python\"] # Sin enviar parametros a la tupla mi_funcion_con_tupla('valor uno') # Esta funcion imprime lo siguiente # valor uno # Enviando solo un par\u00e1metro a la tupla mi_funcion_con_tupla('valor uno', 'tupla') # Esta funcion imprime lo siguiente # valor uno # tupla # Pero no podemos hacer esto ya que necesariamente recibe un par\u00e1metro mi_funcion_con_tupla() Traceback (most recent call last): File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt; TypeError: mi_funcion_con_tupla() takes at least 1 argument (0 given) [\/sourcecode] Esto sucede por que el primer par\u00e1metro no es parte de la tupla y es un par\u00e1metro obligatorio. Ahora el diccionario funciona de manera similar. La \u00danica diferencia es que ahora le puedes asignar una llave. [sourcecode language=\"python\"] # Para tener una tupla como parametro le asignamos un * def mi_funcion_con_diccionario(**diccionario): print diccionario['parametro_1'] print diccionario['parametro_2'] [\/sourcecode] Su funcionalidad es similar al de las tuplas al momento de llamar a la funci\u00f3n salvo que esta vez si se puede asignar un nombre al par\u00e1metro. [sourcecode language=\"python\"] # Para tener una tupla como parametro le asignamos un * mi_funcion_con_diccionario(parametro_1='valor_1', parametro_2='valor_2') # Esta funcion imprime lo siguiente # valor_2 # valor_3 [\/sourcecode] Recuerda que puedes usar los tres tipos de argumentos a la vez. El orden que para mi es mas agradable es poner primero los argumentos, luego la tupla de argumentos y finalmente el diccionario de argumentos. Se suele usar el nombre de *args y **kwargs para las tuplas y diccionarios respectivamente que ser\u00e1n usadas como par\u00e1metro. Esto seria todo para este tercer tutorial de python. Si quieres mas informaci\u00f3n siempre puedes visitar la [documentaci\u00f3n oficial](https:\/\/docs.python.org\/2.7\/tutorial\/controlflow.html#defining-functions \" Defining Functions\") de python. Para el pr\u00f3ximo tutorial explicaremos[ los fundamentos b\u00e1sicos de la programaci\u00f3n orientada a objetos](http:\/\/frontend-labs.com\/1305--tutorial-basico-de-python-parte-iv-programacion-orientada-a-objetos \"Tutorial B\u00e1sico de Python \u2013 Parte IV \u2013 Programaci\u00f3n orientada a objetos\").\n\n\n","html":"Siguiendo con los tutoriales de python, en este tutorial hablaremos de las funciones. Si desean ver el tema anterior a este pueden visitar<a title=\"Tutorial B\u00e1sico de Python \u2013 Parte II \u2013 Colecciones y Controles de Flujo\" href=\"http:\/\/frontend-labs.com\/1162--tutorial-basico-de-python-parte-ii-colecciones-y-controles-de-flujo\" target=\"_blank\"> nuestro tutorial parte II de python<\/a> el cual habla de colecciones y controles de flujos.\r\n\r\nSe le llama funci\u00f3n al fragmento de c\u00f3digo el cual puede ser ejecutado cuando sea necesario por medio del nombre el cual se le haya asignado a este fragmento de c\u00f3digo. A esta instrucci\u00f3n se le conoce con el nombre de <strong>def<\/strong>\u00a0. Las funciones en python se definen de la siguiente manera.\r\n\r\n[sourcecode language=\"python\"]\r\ndef mi_funcion(param):\r\n    print param\r\n[\/sourcecode]\r\n\r\nPara python los par\u00e1metros son opcionales. Adem\u00e1s no tiene la necesidad de retornar algo, sin embargo si lo hiciese la estructura de la funci\u00f3n no se ver\u00eda alterada solo se agregaria un return al final del fragmento del c\u00f3digo indicando lo que se desea retornar.\r\n\r\n[sourcecode language=\"python\"]\r\ndef mi_funcion():\r\n    resultado = 1 + 2\r\n    return resultado\r\n[\/sourcecode]\r\n\r\nComo se puede visualizar solo se agrego un return. Ahora si se desea agregar par\u00e1metros pues como vemos m\u00e1s arriba estos se ubican entre los par\u00e9ntesis. Por ejemplo mas abajo tenemos nuestra funci\u00f3n 'multiplica_por_dos' que acepta un n\u00famero como par\u00e1metro y retorna este n\u00famero multiplicado por dos\r\n\r\n[sourcecode language=\"python\"]\r\ndef multiplica_por_dos(numero):\r\n    return numero*2\r\n[\/sourcecode]\r\n\r\nComo ves las funciones en python son bastante sencillas. Si deseamos ejecutar esta funci\u00f3n basta con llamar el nombre de la funci\u00f3n e indicar entre par\u00e9ntesis el numero que sera enviado como par\u00e1metro.\r\n\r\n[sourcecode language=\"python\"]\r\nmultiplica_por_dos(3)\r\n# 6\r\n[\/sourcecode]\r\n\r\nAhora si invocamos sin par\u00e1metro alguno a nuestra funci\u00f3n 'multiplica_por_dos' nos lanzar\u00e1 un error\r\n\r\n[sourcecode language=\"python\"]\r\nmultiplica_por_dos()\r\nTraceback (most recent call last):\r\n  File &amp;amp;quot;&amp;amp;lt;stdin&amp;amp;gt;&amp;amp;quot;, line 1, in &amp;amp;lt;module&amp;amp;gt;\r\nTypeError: multiplica_por_dos() takes exactly 1 argument (0 given)\r\n[\/sourcecode]\r\n\r\nEn python es posible indicar que un par\u00e1metro sea opcional indic\u00e1ndole un valor por defecto. Para ello modificaremos nuestra funci\u00f3n 'multiplica_por_dos' asign\u00e1ndole al par\u00e1metro 'numero' el valor dos como el valor por defecto.\r\n\r\n[sourcecode language=\"python\"]\r\ndef multiplica_por_dos(numero=2):\r\n    return numero*2\r\n[\/sourcecode]\r\n\r\nAhora cuando invoquemos nuestra funci\u00f3n sin par\u00e1metro alguno el par\u00e1metro 'numero' tendra el valor de dos y por ende nos devolver\u00e1 cuatro, ya que 2 por 2 es 4.\r\n\r\n[sourcecode language=\"python\"]\r\nmultiplica_por_dos()\r\n# 4\r\n\r\nmultiplica_por_dos(5)\r\n# 10\r\n[\/sourcecode]\r\n\r\nNuestra funci\u00f3n puede recibir mas que solo un par\u00e1metro.\r\n\r\n[sourcecode language=\"python\"]\r\ndef multiplica_numeros(a, b, c):\r\n    return a*b*c\r\n[\/sourcecode]\r\n\r\nSi queremos llamar a esta funci\u00f3n lo hacemos de la siguiente manera. Para este ejemplo enviaremos los par\u00e1metros 2, 3 y 6 el cual da como producto 36.\r\n\r\n[sourcecode language=\"python\"]\r\nmultiplica_numeros(2, 3, 6)\r\n# da como resultado 36\r\n\r\n# Tambien podemos indicarle el parametro al que va ir\r\nmultiplica_numeros(a=2, b=3, c=6)\r\n# da como resultado 36\r\n\r\n# La ventaja de esto es que el orden no importa\r\nmultiplica_numeros(c=6, b=3, a=2)\r\n# da como resultado 36\r\n[\/sourcecode]\r\n\r\nEn python tenemos distintas maneras de asignar los par\u00e1metros a la funci\u00f3n. Hasta ahora hemos usado el \"m\u00e9todo cl\u00e1sico\" por as\u00ed decirlo. Sin embargo existen otras maneras de hacerlo. Una de estas es enviarla por medio de una lista y el otro m\u00e9todo es envi\u00e1rselo por medio de un diccionario (si se desea saber mas acerca de listas y diccionario puedes entrar al <a title=\"Tutorial B\u00e1sico de Python \u2013 Parte II \u2013 Colecciones y Controles de Flujo\" href=\"http:\/\/frontend-labs.com\/1162--tutorial-basico-de-python-parte-ii-colecciones-y-controles-de-flujo\" target=\"_blank\">tutorial anterior a este<\/a>). Si queremos enviar una lista tenemos que enviar los par\u00e1metros en orden y la lista debe estar despu\u00e9s de un asterisco.\r\n\r\n[sourcecode language=\"python\"]\r\n#Tener presente que los par\u00e1metros de nuestra funci\u00f3n 'multiplica_numeros' son a b y c\r\n#Creamos nuestra lista en orden\r\nparametros = list()\r\nparametros.append(2) # Sera el parametro de a\r\nparametros.append(3) # Sera el parametro de b\r\nparametros.append(6) # Sera el parametro de c\r\n\r\n# Para asignarle la lista a la funcion se debe agregar un asterisco\r\nmultiplica_numeros(*parametros)\r\n# La respuesta es 36\r\n[\/sourcecode]\r\n\r\nComo lo hab\u00edamos mencionado, en python tambi\u00e9n podemos asignarle un diccionario como par\u00e1metro. A diferencia de la lista en este caso tu asignas el nombre de la llave y del valor y al momento de asignarlo a la funci\u00f3n se le antepone el doble asterisco. Se debe tener en cuenta que el nombre de las llaves deben ser el nombre de los par\u00e1metros de la funci\u00f3n.\r\n\r\n[sourcecode language=\"python\"]\r\n#Tener presente que los par\u00e1metros de nuestra funci\u00f3n 'multiplica_numeros' son a b y c\r\n#Creamos nuestro diccionario con las llaves y valores correspondientes\r\nparametros = dict()\r\nparametros['a'] = 2 # Sera el parametro de a\r\nparametros['b'] = 3 # Sera el parametro de b\r\nparametros['c'] = 6 # Sera el parametro de c\r\n\r\n# Para asignar el diccionario a la funcion se debe agregar dos asteriscos\r\nmultiplica_numeros(**parametros)\r\n# La respuesta es 36\r\n[\/sourcecode]\r\n\r\nEn python tambi\u00e9n podemos hace lo inverso a esto. Es decir, la funci\u00f3n puede tener como par\u00e1metro una tupla o un diccionario. En este caso la tupla es representado por un asterisco y el diccionario por dos asteriscos. Al asignar este tipo de par\u00e1metro, estos deben ir al final.\r\n\r\n[sourcecode language=\"python\"]\r\n# Para tener una tupla como parametro le asignamos un *\r\ndef mi_funcion_con_tupla(parametro_1, *tupla):\r\n    # parametro_1 si es obligatorio\r\n    print parametro_1\r\n\r\n    #Elementos opcionales\r\n    for elemento in tupla:\r\n        print elemento\r\n[\/sourcecode]\r\n\r\nPero... \u00bfPara que sirve esto? bueno la ventaja de tener este tipo de par\u00e1metro es que ahora nuestra funci\u00f3n puede recibir los par\u00e1metros que uno desee.\r\n\r\n[sourcecode language=\"python\"]\r\n# Para tener una tupla como parametro le asignamos un *\r\nmi_funcion_con_tupla('valor uno', 'otro_valor', 'y uno mas', 'y aqui tengo otro', 'otro mas')\r\n# Esta funcion imprime lo siguiente&amp;amp;lt;\/pre&amp;amp;gt;\r\n# valor uno\r\n# otro_valor\r\n# y uno mas\r\n# y aqui tengo otro\r\n# otro mas\r\n[\/sourcecode]\r\n\r\nEs importante recordar que\u00a0los par\u00e1metros que recibe la tupla son opcionales si quiero no env\u00edo\u00a0nada\u00a0y si deseo env\u00edo mil par\u00e1metros. Obviamente nadie pasar\u00eda mil par\u00e1metros\u00a0por una funci\u00f3n.\r\n\r\n[sourcecode language=\"python\"]\r\n# Sin enviar parametros a la tupla\r\nmi_funcion_con_tupla('valor uno')\r\n# Esta funcion imprime lo siguiente\r\n# valor uno\r\n\r\n# Enviando solo un par\u00e1metro a la tupla\r\nmi_funcion_con_tupla('valor uno', 'tupla')\r\n# Esta funcion imprime lo siguiente\r\n# valor uno\r\n# tupla\r\n\r\n# Pero no podemos hacer esto ya que necesariamente recibe un par\u00e1metro\r\nmi_funcion_con_tupla()\r\nTraceback (most recent call last):\r\n  File &amp;amp;quot;&amp;amp;lt;stdin&amp;amp;gt;&amp;amp;quot;, line 1, in &amp;amp;lt;module&amp;amp;gt;\r\nTypeError: mi_funcion_con_tupla() takes at least 1 argument (0 given)\r\n[\/sourcecode]\r\n\r\nEsto sucede por que el primer par\u00e1metro no es parte de la tupla y es un par\u00e1metro obligatorio.\r\n\r\nAhora el diccionario funciona de manera similar. La \u00danica diferencia es que ahora le puedes asignar una llave.\r\n\r\n[sourcecode language=\"python\"]\r\n# Para tener una tupla como parametro le asignamos un *\r\ndef mi_funcion_con_diccionario(**diccionario):\r\n    print diccionario['parametro_1']\r\n    print diccionario['parametro_2']\r\n[\/sourcecode]\r\n\r\nSu funcionalidad es similar al de las tuplas al momento de llamar a la funci\u00f3n salvo que esta vez si se puede asignar un nombre al par\u00e1metro.\r\n\r\n[sourcecode language=\"python\"]\r\n# Para tener una tupla como parametro le asignamos un *\r\nmi_funcion_con_diccionario(parametro_1='valor_1', parametro_2='valor_2')\r\n# Esta funcion imprime lo siguiente\r\n# valor_2\r\n# valor_3\r\n[\/sourcecode]\r\n\r\nRecuerda que puedes usar los tres tipos de argumentos a la vez. El orden que para mi es mas agradable es poner primero los argumentos, luego la tupla de argumentos y finalmente el diccionario de argumentos. Se suele usar el nombre de *args y **kwargs para las tuplas y diccionarios respectivamente que ser\u00e1n usadas como par\u00e1metro.\r\n\r\nEsto seria todo para este tercer tutorial de python. Si quieres mas informaci\u00f3n siempre puedes visitar la <a title=\" Defining Functions\" href=\"https:\/\/docs.python.org\/2.7\/tutorial\/controlflow.html#defining-functions\" target=\"_blank\">documentaci\u00f3n oficial<\/a> de python. Para el pr\u00f3ximo tutorial explicaremos<a title=\"Tutorial B\u00e1sico de Python \u2013 Parte IV \u2013 Programaci\u00f3n orientada a objetos\" href=\"http:\/\/frontend-labs.com\/1305--tutorial-basico-de-python-parte-iv-programacion-orientada-a-objetos\" target=\"_blank\"> los fundamentos b\u00e1sicos de la programaci\u00f3n orientada a objetos<\/a>.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/python2-e1405119154921.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Fri, 11 Jul 2014 17:45:12 +0000","created_by":1,"updated_at":"Thu, 24 Jul 2014 12:05:16 +0000","updated_by":1,"published_at":"Fri, 11 Jul 2014 17:45:12 +0000","published_by":1},{"id":1132,"title":"Web Components con Polymer","slug":"que-son-web-components-y-polymer-js","markdown":"\nCuando hablamos de Polymer tenemos que pensar en Web Components, ya que Polymer de por s\u00ed es una librer\u00eda para la creaci\u00f3n f\u00e1cil de Web Components.\n\nWeb Components\n--------------\n\n No es un tema para nada nuevo, yo ya hab\u00eda escuchado desde hace un tiempo sobre una nueva forma de hacer la web y al parecer se refer\u00eda a esto. Cuando se plantea la teor\u00eda de Web Components, lo primero que se comenta es que para desarrollar la web en la actualidad se manejan un sin fin de plugins, archivos css de gran peso y un desarrollo en html que en la mayor\u00eda de los casos puede resultar un caos cuando de proyectos grandes se trata ya que termina siendo para nada entendible y gigante. Lo que propone Web Components es simple, crear nuestros propios componentes web, por ejemplo nosotros tenemos esto : [sourcecode language=\"html\"] <select> <option>Item 1<\/option> <option>Item 2<\/option> <option>Item 3<\/option> <\/select> <video><\/video> [\/sourcecode] y a los cuales se le pueden agregar configuraciones a manera de atributos para poder dar mayores funcionalidades, por ejemplo: [sourcecode language=\"html\"] <select size=\"3\" multiple> <option>Item 1<\/option> <option>Item 2<\/option> <option>Item 3<\/option> <\/select> <video src=\"video.mp4\" controls autoplay preload><\/video> [\/sourcecode] **Lo que propone Web Componentes es un escenario donde nosotros mismo creemos nuestros propios elementos para que estos puedan ser reutilizables , mantenibles y de f\u00e1cil lectura.** En internet existe muchas opciones para hacer menus desplegables, ligthbox, mapas, sliders, en donde en algunos casos son dif\u00edciles o tediosos de implementar. [caption id=\"attachment_1198\" align=\"aligncenter\" width=\"504\"][![Aqu\u00ed se muestra las multiples formas de hacer un men\u00fa con tabs, todas diferentes, pero que al final hacen lo mismo.](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/opcionesDeSelect.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/opcionesDeSelect.png) Aqu\u00ed se muestra las multiples formas de hacer un men\u00fa con tabs, todas diferentes, pero que al final hacen lo mismo.[\/caption] Adem\u00e1s de lo mencionado lineas arriba, tenemos el siguiente problema, que es la legibilidad de nuestro html,que en proyectos muy grandes es muy dif\u00edcil de mantener y por ende entender, como por ejemplo: [caption id=\"attachment_1205\" align=\"aligncenter\" width=\"532\"][![Aveces necesitamos que el html con el que trabajamos sea m\u00e1s explicito para hacerlo mantenible.](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/html_intendible.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/html_intendible.png) Aveces necesitamos que el html con el que trabajamos sea m\u00e1s explicito para hacerlo mantenible.[\/caption] Para olvidarnos de eso, Web Componentes nos propone tener algo as\u00ed: [sourcecode language=\"html\"] <web-tabs> <web-tab>Item 1<\/web-tab> <web-tab>Item 2<\/web-tab> <web-tab>Item 3<\/web-tab> <\/web-tabs> [\/sourcecode] Crear un componente personalizado donde tengamos una forma m\u00e1s explicita de entender que lo que estamos trabajando son un menu de tabs. Entonces para lograr la construcci\u00f3n de un Web Component se tiene que tener en cuenta los siguiente : - **Templates** : es donde se define la estructura del componente. - **Decorators** : es el css que se aplica al componente. - **Custom Elements** : permite crear nuevos componentes a la cual se le puede agregar funcionalidades. - **Shadow Dom** : encapsula un sub \u00e1rbol DOM para la composici\u00f3n m\u00e1s fiable de elementos de la interfaz de usuario. - **Imports** : se define las plantillas, decoradores y elementos con los que se trabajara. **\"En pocas palabras Web Components usa un comportamiento de Encapsulamiento\"** Un ejemplo m\u00e1s directo es el siguiente: [caption id=\"attachment_1209\" align=\"aligncenter\" width=\"489\"][![Vemos todo lo que tenemos que poner para implementar google maps](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/google_maps_script.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/google_maps_script.png) Vemos todo lo que tenemos que poner para implementar google maps[\/caption] Y si pensamos en Web Components la implementaci\u00f3n de google maps podr\u00eda ser de la siguiente manera: [sourcecode language=\"html\"] <!-- Mapa simple --> <google-map><\/google-map> <!-- Mapa con mas configuraciones --> <google-map lat=\"37.435345345\" long=\"-12.345345\" zoom=\"14\"><\/google-map> [\/sourcecode] Si lo se, es genial! Pero como les mencione Web Components no es nuevo ya tiene su tiempo y google ya viene trabajando en esto y tiene un [repositorio donde tiene varios componentes](https:\/\/github.com\/GoogleWebComponents \"Google Web Components\") muy cheveres. Para ir entendiendo mejor,veamos un ejemplo m\u00e1s aplicativo, en el caso que nosotros queramos implementar un slider, tendr\u00edamos que hacer los siguiente: [sourcecode language=\"html\"] <script src=\"jquery.sliderBajadoDeInternet.js\"><\/script> <link href=\"slider.css\" rel=\"stylesheet\" \/> <div id=\"slider\"> <div><img src=\"imagen1.jpg\" alt=\"imagen 1\" \/><\/div> <div><img src=\"imagen2.jpg\" alt=\"imagen 2\" \/><\/div> <\/div> <script> $(function(){ $(\"#slider\").sliderBajadoDeInternet(); }); <\/script> [\/sourcecode] Hasta ah\u00ed lo t\u00edpico, pero la idea con Web Components es simplemente colocar esto : [sourcecode language=\"html\"] <!-- Importar elemento --> <link rel=\"import\" href=\"slider.html\"><\/link> <!-- Usar Elemento --> <slider><\/slider> [\/sourcecode] Y listo, todo lo que hicimos en las primeras lineas, ser\u00eda reemplazado por esas dos lineas, una de las cosas m\u00e1s rescatables es que ganamos un html mas entendible. Pero de por si crear Web Components puede ser una tare ardua y es por ese motivo que se crea polymer. Polymer\n-------\n\n Es una librer\u00eda muy completa que nos ayuda a la creaci\u00f3n de Web Components de una manera mas f\u00e1cil y pensando siempre en crear en un ecosistema de componentes. Para crear un Web Component (tambi\u00e9n conocido como elemento) con Polymer primero tienes que saber manejar un poco de [bower](http:\/\/frontend-labs.com\/453--trabajar-con-bower \"Como usar Bower\") ya que as\u00ed ser\u00e1 m\u00e1s f\u00e1cil manejar las dependencias. Primero tenemos que obtener Polymer [sourcecode language=\"bash\"] bower install --save Polymer\/polymer [\/sourcecode] Lo cual generar\u00eda los siguiente [![Bower genera lo siguiente](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/polymer_carpeta.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/polymer_carpeta.png) Con lo que hemos descargado podemos generar nuestros propios elementos, pero Polymer ya tiene una buena cantidad de elementos propios de su core y ademas tiene elementos trabajados en base al estilo de 'Material Design' el nuevo paradigma de dise\u00f1o que propuso google en su evento de desarrollo hace poco. Si queremos obtener los mismo tenemos que hacer lo siguiente: [sourcecode language=\"bash\"] \/\/este es para obtener los elementos como por ejemplo para hacer peticiones ajax bower install --save Polymer\/core-elements \/\/ este es para obtener los elementos de material design bower install --save Polymer\/paper-elements [\/sourcecode] Para usar polymer se tiene que hacer dos cosas: 1. Importar el core de polymer que es el archivo polymer.html 2. Para declarar el elemento se usa la etiqueta [sourcecode language=\"html\"] <link rel=\"import\" href=\"..\/bower_components\/polymer\/polymer.html\"> <!-- El atributo name es donde se colocara el nombre del elemento, que este caso se llamar\u00eda \"nuevo-elemento\" --> <!-- y se utilizar\u00eda usando el tag <nuevo-elemento> --> <polymer-element name=\"nuevo-elemento\" noscript> <template> <span>Esto es <b>nuevo elemento<\/b>. Esto es un Shadow DOM.<\/span> <\/template> <\/polymer-element> [\/sourcecode] Con esto ya tendr\u00edamos la plantilla b\u00e1sica para crear un elemento personalizado. Pero una de las cosas buenas de polymer es la reutilizaci\u00f3n, por ejemplo podemos usar un elemento ya creado, para la creaci\u00f3n de otro [sourcecode language=\"html\"] <link rel=\"import\" href=\"..\/bower_components\/polymer\/polymer.html\"> <link rel=\"import\" href=\"..\/bower_components\/core-ajax\/core-ajax.html\"> <polymer-element name=\"my-element\" noscript> <template> <span>I'm <b>my-element<\/b>. This is my Shadow DOM.<\/span> <core-ajax url=\"http:\/\/example.com\/json\" auto response=\"{{resp}}\"><\/core-ajax> <textarea value=\"{{resp}}\"><\/textarea> <\/template> <\/polymer-element> [\/sourcecode] Para este caso vemos que se usa el elemento para la obtenci\u00f3n de datos que se usa al momento de crear el elemento Ahora, crearemos un elemento para la creaci\u00f3n de una tarjeta la cu\u00e1l llamaremos card-person.html, para ver como se le agregan atributos a un elemento nuevo: [sourcecode language=\"html\"] <!- card-person.html --> <link rel=\"import\" href=\"\/components\/polymer\/polymer.html\"> <polymer-element name=\"card-person\"> <template> <div class=\"itemCard\" style=\"background:{{color}}\"> <h1>{{name}}<\/h1> <\/div> <\/template> <script> Polymer('card-person', { name: \"Erik\", color: \"#ccc\" }); <\/script> <\/polymer-element> [\/sourcecode] [sourcecode language=\"html\"] <!-- Implementaci\u00f3n -->    <script src=\"platform.js\"><\/script> <link rel=\"import\" href=\"card-person.html\">   <card-person><\/card-person>   [\/sourcecode] Para hacernos la vida un poco mas f\u00e1cil, tenemos un [polymer-boilerplate](https:\/\/github.com\/webcomponents\/polymer-boilerplate \"polymer-boilerplate\") aunque tambi\u00e9n se da la opci\u00f3n de usar el [generador-element](https:\/\/www.npmjs.org\/package\/generator-element \"Generador de Elemento\") que es un npm el cual se usar\u00eda con Yeoman, es decir: [sourcecode language=\"bash\"] \/\/ se instala el npm npm install generator-element \/\/ se genera el elemento gracias a yeoman yo element [\/sourcecode] Para ayudarnos mas tenemos [customelements.io](http:\/\/customelements.io \"componentes\") donde tenemos una buena colecci\u00f3n de elementos creados, ansiosos por ser usados. P.D Aqu\u00ed les dejo la [especificaci\u00f3n de la w3c](http:\/\/www.w3.org\/TR\/components-intro\/ \"Especificaci\u00f3n de la w3c\"), en el caso que quieran ver los precedentes de polymer. [@erikfloresq](http:\/\/twitter.com\/erikfloresq \"Erik Flores\")\n","html":"Cuando hablamos de Polymer tenemos que pensar en Web Components, ya que Polymer de por s\u00ed es una librer\u00eda para la creaci\u00f3n f\u00e1cil de Web Components.\r\n<h2>Web Components<\/h2>\r\nNo es un tema para nada nuevo, yo ya hab\u00eda escuchado desde hace un tiempo sobre una nueva forma de hacer la web y al parecer se refer\u00eda a esto. Cuando se plantea la teor\u00eda de Web Components, lo primero que se comenta es que para desarrollar la web en la actualidad se manejan un sin fin de plugins, archivos css de gran peso y un desarrollo en html que en la mayor\u00eda de los casos puede resultar un caos cuando de proyectos grandes se trata ya que termina siendo para nada entendible y gigante.\r\n\r\nLo que propone Web Components es simple, crear nuestros propios componentes web, por ejemplo nosotros tenemos esto :\r\n\r\n[sourcecode language=\"html\"]\r\n&lt;select&gt;\r\n &lt;option&gt;Item 1&lt;\/option&gt;\r\n &lt;option&gt;Item 2&lt;\/option&gt;\r\n &lt;option&gt;Item 3&lt;\/option&gt;\r\n&lt;\/select&gt;\r\n\r\n&lt;video&gt;&lt;\/video&gt;\r\n[\/sourcecode]\r\n\r\ny a los cuales se le pueden agregar configuraciones a manera de atributos para poder dar mayores funcionalidades, por ejemplo:\r\n\r\n[sourcecode language=\"html\"]\r\n&lt;select size=&quot;3&quot; multiple&gt;\r\n &lt;option&gt;Item 1&lt;\/option&gt;\r\n &lt;option&gt;Item 2&lt;\/option&gt;\r\n &lt;option&gt;Item 3&lt;\/option&gt;\r\n&lt;\/select&gt;\r\n\r\n&lt;video src=&quot;video.mp4&quot; controls autoplay preload&gt;&lt;\/video&gt;\r\n[\/sourcecode]\r\n\r\n<strong>Lo que propone Web Componentes es un escenario donde nosotros mismo creemos nuestros propios elementos para que estos puedan ser reutilizables , mantenibles y de f\u00e1cil lectura.<\/strong>\r\nEn internet existe muchas opciones para hacer menus desplegables, ligthbox, mapas, sliders, en donde en algunos casos son dif\u00edciles o tediosos de implementar.\r\n\r\n[caption id=\"attachment_1198\" align=\"aligncenter\" width=\"504\"]<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/opcionesDeSelect.png\"><img class=\"size-full wp-image-1198\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/opcionesDeSelect.png\" alt=\"Aqu\u00ed se muestra las multiples formas de hacer un men\u00fa con tabs, todas diferentes, pero que al final hacen lo mismo.\" width=\"504\" height=\"287\" \/><\/a> Aqu\u00ed se muestra las multiples formas de hacer un men\u00fa con tabs, todas diferentes, pero que al final hacen lo mismo.[\/caption]\r\n\r\nAdem\u00e1s de lo mencionado lineas arriba, tenemos el siguiente problema, que es la legibilidad de nuestro html,que en proyectos muy grandes es muy dif\u00edcil de mantener y por ende entender, como por ejemplo:\r\n\r\n[caption id=\"attachment_1205\" align=\"aligncenter\" width=\"532\"]<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/html_intendible.png\"><img class=\"size-full wp-image-1205\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/html_intendible.png\" alt=\"Aveces necesitamos que el html con el que trabajamos sea m\u00e1s explicito para hacerlo mantenible.\" width=\"532\" height=\"205\" \/><\/a> Aveces necesitamos que el html con el que trabajamos sea m\u00e1s explicito para hacerlo mantenible.[\/caption]\r\n\r\nPara olvidarnos de eso, Web Componentes nos propone tener algo as\u00ed:\r\n\r\n[sourcecode language=\"html\"]\r\n&lt;web-tabs&gt;\r\n &lt;web-tab&gt;Item 1&lt;\/web-tab&gt;\r\n &lt;web-tab&gt;Item 2&lt;\/web-tab&gt;\r\n &lt;web-tab&gt;Item 3&lt;\/web-tab&gt;\r\n&lt;\/web-tabs&gt;\r\n[\/sourcecode]\r\n\r\nCrear un componente personalizado donde tengamos una forma m\u00e1s explicita de entender que lo que estamos trabajando son un menu de tabs.\r\nEntonces para lograr la construcci\u00f3n de un Web Component se tiene que tener en cuenta los siguiente :\r\n- <strong>Templates<\/strong> : es donde se define la estructura del componente.\r\n- <strong>Decorators<\/strong> : es el css que se aplica al componente.\r\n- <strong>Custom Elements<\/strong> : permite crear nuevos componentes a la cual se le puede agregar funcionalidades.\r\n- <strong>Shadow Dom<\/strong> : encapsula un sub \u00e1rbol DOM para la composici\u00f3n m\u00e1s fiable de elementos de la interfaz de usuario.\r\n- <strong>Imports<\/strong> : se define las plantillas, decoradores y elementos con los que se trabajara.\r\n\r\n<strong>\"En pocas palabras Web Components usa un comportamiento de Encapsulamiento\"<\/strong>\r\n\r\nUn ejemplo m\u00e1s directo es el siguiente:\r\n\r\n[caption id=\"attachment_1209\" align=\"aligncenter\" width=\"489\"]<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/google_maps_script.png\"><img class=\"size-full wp-image-1209\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/google_maps_script.png\" alt=\"Vemos todo lo que tenemos que poner para implementar google maps\" width=\"489\" height=\"219\" \/><\/a> Vemos todo lo que tenemos que poner para implementar google maps[\/caption]\r\n\r\nY si pensamos en Web Components la implementaci\u00f3n de google maps podr\u00eda ser de la siguiente manera:\r\n\r\n[sourcecode language=\"html\"]\r\n&lt;!-- Mapa simple --&gt;\r\n&lt;google-map&gt;&lt;\/google-map&gt;\r\n&lt;!-- Mapa con mas configuraciones --&gt;\r\n&lt;google-map lat=&quot;37.435345345&quot; long=&quot;-12.345345&quot; zoom=&quot;14&quot;&gt;&lt;\/google-map&gt;\r\n[\/sourcecode]\r\n\r\nSi lo se, es genial! Pero como les mencione Web Components no es nuevo ya tiene su tiempo y google ya viene trabajando en esto y tiene un <a title=\"Google Web Components\" href=\"https:\/\/github.com\/GoogleWebComponents\" target=\"_blank\">repositorio donde tiene varios componentes<\/a> muy cheveres.\r\n\r\nPara ir entendiendo mejor,veamos un ejemplo m\u00e1s aplicativo, en el caso que nosotros queramos implementar un slider, tendr\u00edamos que hacer los siguiente:\r\n\r\n[sourcecode language=\"html\"]\r\n  &lt;script src=&quot;jquery.sliderBajadoDeInternet.js&quot;&gt;&lt;\/script&gt;\r\n  &lt;link href=&quot;slider.css&quot; rel=&quot;stylesheet&quot; \/&gt;\r\n  &lt;div id=&quot;slider&quot;&gt;\r\n    &lt;div&gt;&lt;img src=&quot;imagen1.jpg&quot; alt=&quot;imagen 1&quot; \/&gt;&lt;\/div&gt;\r\n    &lt;div&gt;&lt;img src=&quot;imagen2.jpg&quot; alt=&quot;imagen 2&quot; \/&gt;&lt;\/div&gt;\r\n  &lt;\/div&gt;\r\n  &lt;script&gt;\r\n    $(function(){\r\n      $(&quot;#slider&quot;).sliderBajadoDeInternet();\r\n    });\r\n  &lt;\/script&gt;\r\n[\/sourcecode]\r\n\r\nHasta ah\u00ed lo t\u00edpico, pero la idea con Web Components es simplemente colocar esto :\r\n\r\n[sourcecode language=\"html\"]\r\n  &lt;!-- Importar elemento --&gt;\r\n  &lt;link rel=&quot;import&quot; href=&quot;slider.html&quot;&gt;&lt;\/link&gt;\r\n  &lt;!-- Usar Elemento --&gt;\r\n  &lt;slider&gt;&lt;\/slider&gt;\r\n[\/sourcecode]\r\n\r\nY listo, todo lo que hicimos en las primeras lineas, ser\u00eda reemplazado por esas dos lineas, una de las cosas m\u00e1s rescatables es que ganamos un html mas entendible.\r\nPero de por si crear Web Components puede ser una tare ardua y es por ese motivo que se crea polymer.\r\n<h2>Polymer<\/h2>\r\nEs una librer\u00eda muy completa que nos ayuda a la creaci\u00f3n de Web Components de una manera mas f\u00e1cil y pensando siempre en crear en un ecosistema de componentes.\r\n\r\nPara crear un Web Component (tambi\u00e9n conocido como elemento) con Polymer primero tienes que saber manejar un poco de <a title=\"Como usar Bower\" href=\"http:\/\/frontend-labs.com\/453--trabajar-con-bower\">bower<\/a> ya que as\u00ed ser\u00e1 m\u00e1s f\u00e1cil manejar las dependencias.\r\n\r\nPrimero tenemos que obtener Polymer\r\n\r\n[sourcecode language=\"bash\"]\r\n bower install --save Polymer\/polymer\r\n[\/sourcecode]\r\n\r\nLo cual generar\u00eda los siguiente\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/polymer_carpeta.png\"><img class=\"size-full wp-image-1289\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/polymer_carpeta.png\" alt=\"Bower genera lo siguiente\" width=\"610\" height=\"136\" \/><\/a>\r\n\r\nCon lo que hemos descargado podemos generar nuestros propios elementos, pero Polymer ya tiene una buena cantidad de elementos propios de su core y ademas tiene elementos trabajados en base al estilo de 'Material Design' el nuevo paradigma de dise\u00f1o que propuso google en su evento de desarrollo hace poco.\r\nSi queremos obtener los mismo tenemos que hacer lo siguiente:\r\n\r\n[sourcecode language=\"bash\"]\r\n \/\/este es para obtener los elementos como por ejemplo para hacer peticiones ajax\r\n bower install --save Polymer\/core-elements\r\n\r\n \/\/ este es para obtener los elementos de material design\r\n bower install --save Polymer\/paper-elements\r\n[\/sourcecode]\r\n\r\nPara usar polymer se tiene que hacer dos cosas:\r\n1. Importar el core de polymer que es el archivo polymer.html\r\n2. Para declarar el elemento se usa la etiqueta\r\n\r\n[sourcecode language=\"html\"]\r\n  &lt;link rel=&quot;import&quot; href=&quot;..\/bower_components\/polymer\/polymer.html&quot;&gt;\r\n  &lt;!-- El atributo name es donde se colocara el nombre del elemento, que este caso se llamar\u00eda &quot;nuevo-elemento&quot; --&gt;\r\n  &lt;!-- y se utilizar\u00eda usando el tag &lt;nuevo-elemento&gt; --&gt;\r\n  &lt;polymer-element name=&quot;nuevo-elemento&quot; noscript&gt;\r\n   &lt;template&gt;\r\n    &lt;span&gt;Esto es &lt;b&gt;nuevo elemento&lt;\/b&gt;. Esto es un Shadow DOM.&lt;\/span&gt;\r\n   &lt;\/template&gt;\r\n  &lt;\/polymer-element&gt;\r\n[\/sourcecode]\r\n\r\nCon esto ya tendr\u00edamos la plantilla b\u00e1sica para crear un elemento personalizado.\r\n\r\nPero una de las cosas buenas de polymer es la reutilizaci\u00f3n, por ejemplo podemos usar un elemento ya creado, para la creaci\u00f3n de otro\r\n\r\n[sourcecode language=\"html\"]\r\n &lt;link rel=&quot;import&quot; href=&quot;..\/bower_components\/polymer\/polymer.html&quot;&gt;\r\n &lt;link rel=&quot;import&quot; href=&quot;..\/bower_components\/core-ajax\/core-ajax.html&quot;&gt;\r\n\r\n &lt;polymer-element name=&quot;my-element&quot; noscript&gt;\r\n   &lt;template&gt;\r\n     &lt;span&gt;I'm &lt;b&gt;my-element&lt;\/b&gt;. This is my Shadow DOM.&lt;\/span&gt;\r\n     &lt;core-ajax url=&quot;http:\/\/example.com\/json&quot; auto response=&quot;{{resp}}&quot;&gt;&lt;\/core-ajax&gt;\r\n     &lt;textarea value=&quot;{{resp}}&quot;&gt;&lt;\/textarea&gt;\r\n   &lt;\/template&gt;\r\n &lt;\/polymer-element&gt;\r\n[\/sourcecode]\r\n\r\nPara este caso vemos que se usa el elemento para la obtenci\u00f3n de datos que se usa al momento de crear el elemento\r\n\r\nAhora, crearemos un elemento para la creaci\u00f3n de una tarjeta la cu\u00e1l llamaremos card-person.html, para ver como se le agregan atributos a un elemento nuevo:\r\n\r\n[sourcecode language=\"html\"]\r\n &lt;!- card-person.html --&gt;\r\n &lt;link rel=&quot;import&quot; href=&quot;\/components\/polymer\/polymer.html&quot;&gt;\r\n &lt;polymer-element name=&quot;card-person&quot;&gt;\r\n  &lt;template&gt;\r\n   &lt;div class=&quot;itemCard&quot; style=&quot;background:{{color}}&quot;&gt;\r\n    &lt;h1&gt;{{name}}&lt;\/h1&gt;\r\n   &lt;\/div&gt;\r\n  &lt;\/template&gt;\r\n  &lt;script&gt;\r\n    Polymer('card-person', {\r\n      name: &quot;Erik&quot;,\r\n      color: &quot;#ccc&quot;\r\n    });\r\n  &lt;\/script&gt;\r\n &lt;\/polymer-element&gt;\r\n[\/sourcecode]\r\n\r\n\r\n[sourcecode language=\"html\"]\r\n&lt;!-- Implementaci\u00f3n --&gt;\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;script src=&quot;platform.js&quot;&gt;&lt;\/script&gt;\r\n    &lt;link rel=&quot;import&quot; href=&quot;card-person.html&quot;&gt;\r\n  &lt;\/head&gt;\r\n  &lt;body&gt;\r\n    &lt;card-person&gt;&lt;\/card-person&gt;\r\n  &lt;\/body&gt;\r\n&lt;\/html&gt;\r\n[\/sourcecode]\r\n\r\nPara hacernos la vida un poco mas f\u00e1cil, tenemos un <a title=\"polymer-boilerplate\" href=\"https:\/\/github.com\/webcomponents\/polymer-boilerplate\" target=\"_blank\">polymer-boilerplate<\/a> aunque tambi\u00e9n se da la opci\u00f3n de usar el <a title=\"Generador de Elemento\" href=\"https:\/\/www.npmjs.org\/package\/generator-element\" target=\"_blank\">generador-element<\/a> que es un npm el cual se usar\u00eda con Yeoman, es decir:\r\n\r\n[sourcecode language=\"bash\"]\r\n \/\/ se instala el npm\r\n npm install generator-element\r\n\r\n \/\/ se genera el elemento gracias a yeoman\r\n yo element\r\n[\/sourcecode]\r\n\r\nPara ayudarnos mas tenemos <a title=\"componentes\" href=\"http:\/\/customelements.io\" target=\"_blank\">customelements.io<\/a> donde tenemos una buena colecci\u00f3n de elementos creados, ansiosos por ser usados.\r\n\r\nP.D Aqu\u00ed les dejo la <a title=\"Especificaci\u00f3n de la w3c\" href=\"http:\/\/www.w3.org\/TR\/components-intro\/\" target=\"_blank\">especificaci\u00f3n de la w3c<\/a>, en el caso que quieran ver los precedentes de polymer.\r\n\r\n<a title=\"Erik Flores\" href=\"http:\/\/twitter.com\/erikfloresq\" target=\"_blank\">@erikfloresq<\/a>","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/WebComponentsPolymer.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":3,"created_at":"Mon, 14 Jul 2014 17:17:32 +0000","created_by":1,"updated_at":"Thu, 24 Jul 2014 12:24:09 +0000","updated_by":1,"published_at":"Mon, 14 Jul 2014 17:17:32 +0000","published_by":1},{"id":1305,"title":"Tutorial B\u00e1sico de Python \u2013 Parte IV : Programaci\u00f3n orientada a objetos","slug":"tutorial-basico-de-python-parte-iv-programacion-orientada-a-objetos","markdown":"\nEn el capitulo anterior entendimos como trabajan\u00a0las[ funciones en python](http:\/\/frontend-labs.com\/1257--tutorial-basico-de-python-parte-iii-funciones \"Tutorial B\u00e1sico de Python \u2013 Parte III \u2013 Funciones\"). Ahora estamos en la capacidad de entender como funciona la programaci\u00f3n orientada a objetos. La programaci\u00f3n orientada a objetos es un paradigma \u00a0el cual propone modelar todo en base a clases y a objetos. Este paradigma consiste en el uso de los\u00a0conceptos de \u00a0herencia, cohesi\u00f3n, abstracci\u00f3n, polimorfismo, acomplamiento y encapsulamiento.\n\n### Clases y objetos\n\n Si no tienen conocimiento alguno sobre la programaci\u00f3n orientada a objetos,\u00a0tratare de explicar este concepto por medio de un ejemplo. Para comenzar debemos comprender que todo lo que nos rodea son objetos incluso nosotros mismos podemos ser considerados como objetos. Ahora si todos somos objetos...\u00bfQu\u00e9 es una clase? La clase es, por asi decirlo, la plantilla de donde se crea este objeto. Por ejemplo si nos ponemos a pensar en gatos. \u00bfC\u00f3mo podemos reconocer que un gato es en si un gato y no un perro? Bueno, todo gato tiene ojos, nariz, boca, 4 patas, mucho pelo, una cola, orejas, dice miau, ronronea y tienen sus garras. Esto seria la plantilla del gato y con lo mencionado anteriormente tambi\u00e9n podemos imaginarnos uno. \u00bfPero fuimos espec\u00edficos en sus caracter\u00edsticas? Cada uno de nosotros podemos pensar en un gato pero no sera el mismo. Cada uno hemos pensado en una **instancia** de un gato acorde a las\u00a0caracter\u00edsticas\u00a0que hemos mencionado. Yo pude haber pensado en un gato gordo de pelaje rojo. Mientras que otro habr\u00e1 pensado en un gato virtual de ojos grande de color naranja. Ejemplo de instancias: [![objetos gato 3D](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/3D-300x221.jpg \"objetos Gato pythonico 1\")](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/3D-e1405370350305.jpg) [![objetos gato flaco](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gato-flaco-300x225.jpg \"objetos Gato pythonico 2\")](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gato-flaco-e1405370385766.jpg) [![objetos gato obeso](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gato-obeso-e1405370396350.jpg \"objetos Gato pythonico 3\")](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gato-obeso-e1405370396350.jpg) [![objetos gato gru\u00f1on](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gru\u00f1on-291x300.jpg \"objetos Gato pythonico 4\")](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gru\u00f1on-e1405370405507.jpg) Podemos ver que todos son gatos sin embargo cada uno es una **instancia**\u00a0distinta con distintos atributos. Ahora \u00bfcomo plasmamos eso a Python? Pues ahora que sabemos estos conceptos. Crearemos una clase llamada Gato. Pero antes explicare la funci\u00f3n **__init__** que posee python. Esta funci\u00f3n siempre se ejecuta cuando se crea un objeto. Ahora mostraremos como es la estructura de una clase y como funciona lo que hemos explicado. [sourcecode language=\"python\"] class A: def __init__(self): print 'me ejecuto primero' def funcion(self): print 'soy una funcion.!!' [\/sourcecode] Ya tenemos la clase **A**\u00a0donde hemos declarado dos funciones las cuales son opcionales. Ahora veremos que sucede cuando creamos una instancia de esta clase. Cabe resaltar que\u00a0que una instancia es un objeto. [sourcecode language=\"python\"] instancia = A() # me ejecuto primero [\/sourcecode] Al crear la instancia de la clase **A** visualizamos que se ejecuta autom\u00e1ticamente el __init__ y por ende se visualiza en la consola el texto \"me ejecuto primero\". Si imprimimos la instancia por si sola. Se mostrar\u00e1 la clase a la cual pertenece dicha instancia y donde se encuentra almacenado en memoria. [sourcecode language=\"python\"] print instancia # <__main__.A instance at 0x7f5942210320> [\/sourcecode] Ahora que tenemos la instancia somos capaces de llamar a las funciones que pertenecen a esta clase. [sourcecode language=\"python\"] instancia.funcion() soy una funcion.!! [\/sourcecode] Ahora procedamos a crear la clase Gato. Esta funci\u00f3n gato tendr\u00e1 el atributo energ\u00eda y hambre para hacerlo m\u00e1s interesante. [sourcecode language=\"python\"] class Gato: def __init__(self, energia, hambre): self.energia = energia self.hambre = hambre print 'Se creo un gato' def tomar_leche(self, leche_en_litros): self.hambre += leche_en_litros print 'el gato toma su leche' def acariciar(self): print 'prrrrr...' def jugar(self): if self.energia <= 0 or self.hambre <=1: print 'el gato no quiero jugar' else: self.energia -=1 self.hambre -= 2 print 'al gato le encanta jugar' def dormir(self, horas): self.energia += horas print 'el gato tomo una siesta' [\/sourcecode] Gracias al atributo \"self\" es posible utilizar las variables declaradas en **__init__** dentro de toda la clase. A continuaci\u00f3n crearemos una instancia de la clase Gato asignandole la energia y el hambre inicial. [sourcecode language=\"python\"] gato = Gato(5, 5) # Se creo un gato [\/sourcecode] Recuerde que python es un lenguaje case sensitive, es decir es sensible a las may\u00fasculas. Podemos observar que al momento de crear una instancia del gato nos muestra un mensaje que proviene de la funci\u00f3n **__init__** el cual dice \"Se creo un gato\". Esto sucede ya que en python la funci\u00f3n **__init__** siempre se ejecuta al momento de crear una instancia, se puede decir que es como un constructor. Ahora que ya tenemos nuestro objeto gato utilizaremos sus funciones. [sourcecode language=\"python\"] gato.acariciar() # gato.acariciar() gato.jugar() # al gato le encanta jugar gato.jugar() # al gato le encanta jugar gato.jugar() # el gato no quiero jugar [\/sourcecode] Nos damos cuenta que al tercer intento de jugar con el gato este ya no quiere jugar. Pero \u00bfPor que? Podemos entenderlo f\u00e1cilmente al ver la funci\u00f3n jugar() y el valor que tiene los atributos del gato. Recordemos que la funci\u00f3n jugar eval\u00faa el nivel del hambre y de energ\u00eda del gato para imprimir \"al gato le encanta jugar\". En caso que no se cumpla la condici\u00f3n imprime \"el gato no quiere jugar\". Ahora si vemos los valores que tiene asignado las variables podemos ver que cada vez que el gato juega pierde energ\u00eda y hambre. Hasta quedarse con el m\u00ednimo requerido para jugar. [sourcecode language=\"python\"] print gato.energia # 3 print gato.hambre # 1 [\/sourcecode] Por lo que podemos ver el gato no quiere jugar por que tiene hambre. As\u00ed que le daremos leche. [sourcecode language=\"python\"] gato.tomar_leche(4) # el gato toma su leche gato.hambre # 5 [\/sourcecode] Ahora el gato ya puede jugar. Obviamente si se sigue ejecutando la funci\u00f3n jugar se le acabara la energ\u00eda o el hambre. [sourcecode language=\"python\"] gato.jugar() # al gato le encanta jugar print gato.hambre # 3 print gato.energia # 2 [\/sourcecode] ### Herencia\n\n La herencia es uno de los tres conceptos b\u00e1sicos que tiene todo lenguaje orientado a objetos. La herencia consiste en que una clase pueda heredar de otra clase, en otras palabras la clase puede ser extendida. Siguiendo con nuestro ejemplo de gatos, la clase Gato podr\u00eda heredar de una clase Felino. [sourcecode language=\"python\"] class Felino: def __init__(self): print 'se creo el felino' def rugido(self): print 'El felino dio un rugido' class Gato(Felino): def __init__(self, energia, hambre): self.energia = energia self.hambre = hambre print 'Se creo un gato' def tomar_leche(self, leche_en_litros): self.hambre += leche_en_litros print 'el gato toma su leche' def acariciar(self): print 'prrrrr...' def jugar(self): if self.energia <= 0 or self.hambre <=1: print 'el gato no quiero jugar' else: self.energia -=1 self.hambre -= 2 print 'al gato le encanta jugar' def dormir(self, horas): self.energia += horas print 'el gato tomo una siesta' [\/sourcecode] Al hacer esto la clase Gato ya hereda de la clase Felino y con ello hereda las variables y funciones del Felino. Es decir si ejecutamo gato.rugido() ahora el gato dar\u00e1 un rugido. [sourcecode language=\"python\"] gato = Gato(3,3) # Se creo un gato gato.rugido() # El felino dio un rugido [\/sourcecode] Adem\u00e1s en python tenemos algo llamado **herencia m\u00faltiple**. Es decir nuestra clase puede heredar de varias clases. Por ejemplo nuestro Gato puede heredar de Felino y Mascota. [sourcecode language=\"python\"] class Mascota: def __init__(self): print 'se creo la mascota' def sientate(self): print 'La mascota se sent\u00f3' class Felino: def __init__(self): print 'se creo el felino' def rugido(self): print 'El felino dio un rugido' class Gato(Felino, Mascota): def __init__(self, energia, hambre): self.energia = energia self.hambre = hambre print 'Se creo un gato' def tomar_leche(self, leche_en_litros): self.hambre += leche_en_litros print 'el gato toma su leche' def acariciar(self): print 'prrrrr...' def jugar(self): if self.energia <= 0 or self.hambre <=1: print 'el gato no quiero jugar' else: self.energia -=1 self.hambre -= 2 print 'al gato le encanta jugar' def dormir(self, horas): self.energia += horas print 'el gato tomo una siesta' [\/sourcecode] Ahora cuando creemos una instancia del gato podremos usar tanto lo que herede de Felino como lo que herede de Mascota. [sourcecode language=\"python\"] gato = Gato(3,3) # Se creo un gato gato.rugido() # El felino dio un rugido gato.sientate() # La mascota se sent\u00f3 [\/sourcecode] ### Polimorfismo\n\n En si la palabra polimorfismo viene del griego y significa varias formas. La teor\u00eda indica que se trata de la habilidad de responder a una misma funci\u00f3n de manera distinta. Haremos un ejemplo con una clase Gato y una clase Perro. [sourcecode language=\"python\"] class Gato: def ruge(self): print 'El gato maulla' class Perro: def ruge(self): print 'El perro ladra' def rugir(animal): animal.ruge() [\/sourcecode] Hemos creado la funci\u00f3n rugir la cual ejecutar\u00e1 la funci\u00f3n ruge del objeto. Ya que Python es de tipado din\u00e1mico python reconocer\u00e1 automaticamente la la funci\u00f3n que debe ejecutar. [sourcecode language=\"python\"] gato = Gato() perro = Perro() rugir(gato) # 'El gato maulla' rugir(perro) # 'El perro ladra' [\/sourcecode] ### Encapsulaci\u00f3n\n\n Lo que hace el encapsulamiento es impedir la visualizaci\u00f3n o acceso de las variables de manera directa. En otros lenguajes esto se logra al momento de declarar la variable como public y private sin embargo en python es algo distinto. Para declarar una variable o funci\u00f3n como privada, el nombre de la funci\u00f3n o variable a ser declarado debe comenzar con doble guion abajo. Esto bastar\u00e1 para que lo declarado sea reconocido como privado. Este es un peque\u00f1o ejemplo de como declarar una funcion privada en python. Ahora si queremos llamar a la funcion privada nos lanzara un error. [sourcecode language=\"python\"] ejemplo = ClaseEjemplo() ejemplo.publico() # soy publico ejemplo.__pirvate() Traceback (most recent call last): File \"<stdin>\", line 1, in <module> AttributeError: ClaseEjemplo instance has no attribute '__privado' [\/sourcecode] Ahora lo mismo es al momento de declarar variable. [sourcecode language=\"python\"] class ClaseOtroEjemplo: def __init__(self): self.publico = 'variable publica' self.__privado = 'variable privada' def obtener_privado(self): print self.__privado [\/sourcecode] Ahora hemos creado la clase ClaseOtroEjemplo el cual tiene un constructor donde se declara dos variables una publica y otra privada. Tenemos que entender que tanto las funciones como las variables privadas solo pueden ser utilizadas dentro de la clase y si queremos usarlas fuera de esta clase podemos hacerlo por medio de una funci\u00f3n que devuelva el valor privado. En este ejemplo he usado la funci\u00f3n \"obtener_privado\" para obtener el valor de la variable privada. Entonces para resumir, con esta funci\u00f3n se entiende que la variable \"__privado\" sera solo de lectura ya que puede ser consultada (por la funci\u00f3n obtener_privado) mas no puede ser modificada y la variable publica si pude ser modificada y consultada ya que esa es la naturaleza de una variable publica. [sourcecode language=\"python\"] otro_ejemplo = ClaseOtroEjemplo() print otro_ejemplo.publico # 'variable publica' otro_ejemplo.obtener_privado() # variable privada [\/sourcecode] Bueno eso seria todo en este cuarto tutorial de python. Si quieres profundizar m\u00e1s en el tema como siempre puedes visitar la [documentaci\u00f3n oficial](https:\/\/docs.python.org\/2\/tutorial\/classes.html \"Classes and Objects\") de python. Para el pr\u00f3ximo tutorial profundizaremos\u00a0los objetos b\u00e1sicos que tiene python.\n","html":"En el capitulo anterior entendimos como trabajan\u00a0las<a title=\"Tutorial B\u00e1sico de Python \u2013 Parte III \u2013 Funciones\" href=\"http:\/\/frontend-labs.com\/1257--tutorial-basico-de-python-parte-iii-funciones\" target=\"_blank\"> funciones en python<\/a>. Ahora estamos en la capacidad de entender como funciona la programaci\u00f3n orientada a objetos.\r\n\r\nLa programaci\u00f3n orientada a objetos es un paradigma \u00a0el cual propone modelar todo en base a clases y a objetos. Este paradigma consiste en el uso de los\u00a0conceptos de \u00a0herencia, cohesi\u00f3n, abstracci\u00f3n, polimorfismo, acomplamiento y encapsulamiento.\r\n<h3>Clases y objetos<\/h3>\r\nSi no tienen conocimiento alguno sobre la programaci\u00f3n orientada a objetos,\u00a0tratare de explicar este concepto por medio de un ejemplo. Para comenzar debemos comprender que todo lo que nos rodea son objetos incluso nosotros mismos podemos ser considerados como objetos. Ahora si todos somos objetos...\u00bfQu\u00e9 es una clase? La clase es, por asi decirlo, la plantilla de donde se crea este objeto.\r\n\r\nPor ejemplo si nos ponemos a pensar en gatos. \u00bfC\u00f3mo podemos reconocer que un gato es en si un gato y no un perro? Bueno, todo gato tiene ojos, nariz, boca, 4 patas, mucho pelo, una cola, orejas, dice miau, ronronea y tienen sus garras. Esto seria la plantilla del gato y con lo mencionado anteriormente tambi\u00e9n podemos imaginarnos uno. \u00bfPero fuimos espec\u00edficos en sus caracter\u00edsticas? Cada uno de nosotros podemos pensar en un gato pero no sera el mismo. Cada uno hemos pensado en una <strong>instancia<\/strong> de un gato acorde a las\u00a0caracter\u00edsticas\u00a0que hemos mencionado. Yo pude haber pensado en un gato gordo de pelaje rojo. Mientras que otro habr\u00e1 pensado en un gato virtual de ojos grande de color naranja.\r\n\r\nEjemplo de instancias:\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/3D-e1405370350305.jpg\"><img class=\"alignnone wp-image-1311\" title=\"objetos Gato pythonico 1\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/3D-300x221.jpg\" alt=\"objetos gato 3D\" width=\"166\" height=\"123\" \/><\/a> <a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gato-flaco-e1405370385766.jpg\"><img class=\"alignnone wp-image-1312\" title=\"objetos Gato pythonico 2\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gato-flaco-300x225.jpg\" alt=\"objetos gato flaco\" width=\"162\" height=\"122\" \/><\/a> <a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gato-obeso-e1405370396350.jpg\"><img class=\"alignnone wp-image-1313\" title=\"objetos Gato pythonico 3\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gato-obeso-e1405370396350.jpg\" alt=\"objetos gato obeso\" width=\"167\" height=\"122\" \/><\/a> <a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gru\u00f1on-e1405370405507.jpg\"><img class=\"alignnone wp-image-1314\" title=\"objetos Gato pythonico 4\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/gru\u00f1on-291x300.jpg\" alt=\"objetos gato gru\u00f1on\" width=\"119\" height=\"122\" \/><\/a>\r\n\r\nPodemos ver que todos son gatos sin embargo cada uno es una <strong>instancia<\/strong>\u00a0distinta con distintos atributos.\r\n\r\nAhora \u00bfcomo plasmamos eso a Python?\r\n\r\nPues ahora que sabemos estos conceptos. Crearemos una clase llamada Gato. Pero antes explicare la funci\u00f3n <strong>__init__<\/strong> que posee python.\r\n\r\nEsta funci\u00f3n siempre se ejecuta cuando se crea un objeto. Ahora mostraremos como es la estructura de una clase y como funciona lo que hemos explicado.\r\n\r\n[sourcecode language=\"python\"]\r\nclass A:\r\n    def __init__(self):\r\n        print 'me ejecuto primero'\r\n\r\n    def funcion(self):\r\n        print 'soy una funcion.!!'\r\n[\/sourcecode]\r\n\r\nYa tenemos la clase <strong>A<\/strong>\u00a0donde hemos declarado dos funciones las cuales son opcionales. Ahora veremos que sucede cuando creamos una instancia de esta clase. Cabe resaltar que\u00a0que una instancia es un objeto.\r\n\r\n[sourcecode language=\"python\"]\r\ninstancia = A()\r\n# me ejecuto primero\r\n[\/sourcecode]\r\n\r\nAl crear la instancia de la clase <strong>A<\/strong> visualizamos que se ejecuta autom\u00e1ticamente el __init__ y por ende se visualiza en la consola el texto \"me ejecuto primero\". Si imprimimos la instancia por si sola. Se mostrar\u00e1 la clase a la cual pertenece dicha instancia y donde se encuentra almacenado en memoria.\r\n\r\n[sourcecode language=\"python\"]\r\nprint instancia\r\n# &lt;__main__.A instance at 0x7f5942210320&gt;\r\n[\/sourcecode]\r\n\r\nAhora que tenemos la instancia somos capaces de llamar a las funciones que pertenecen a esta clase.\r\n\r\n[sourcecode language=\"python\"]\r\ninstancia.funcion()\r\nsoy una funcion.!!\r\n[\/sourcecode]\r\n\r\nAhora procedamos a crear la clase Gato. Esta funci\u00f3n gato tendr\u00e1 el atributo energ\u00eda y hambre para hacerlo m\u00e1s interesante.\r\n\r\n[sourcecode language=\"python\"]\r\nclass Gato:\r\n    def __init__(self, energia, hambre):\r\n        self.energia = energia\r\n        self.hambre = hambre\r\n        print 'Se creo un gato'\r\n\r\n    def tomar_leche(self, leche_en_litros):\r\n        self.hambre += leche_en_litros\r\n        print 'el gato toma su leche'\r\n\r\n    def acariciar(self):\r\n        print 'prrrrr...'\r\n\r\n    def jugar(self):\r\n        if self.energia &lt;= 0 or self.hambre &lt;=1:\r\n            print 'el gato no quiero jugar'\r\n        else:\r\n            self.energia -=1\r\n            self.hambre -= 2\r\n            print 'al gato le encanta jugar'\r\n\r\n    def dormir(self, horas):\r\n        self.energia += horas\r\n        print 'el gato tomo una siesta'\r\n\r\n[\/sourcecode]\r\n\r\nGracias al atributo \"self\" es posible utilizar las variables declaradas en <strong>__init__<\/strong> dentro de toda la clase.\r\n\r\nA continuaci\u00f3n crearemos una instancia de la clase Gato asignandole la energia y el hambre inicial.\r\n\r\n[sourcecode language=\"python\"]\r\ngato = Gato(5, 5)\r\n# Se creo un gato\r\n[\/sourcecode]\r\n\r\nRecuerde que python es un lenguaje case sensitive, es decir es sensible a las may\u00fasculas.\r\n\r\nPodemos observar que al momento de crear una instancia del gato nos muestra un mensaje que proviene de la funci\u00f3n <strong>__init__<\/strong> el cual dice \"Se creo un gato\". Esto sucede ya que en python la funci\u00f3n <strong>__init__<\/strong> siempre se ejecuta al momento de crear una instancia, se puede decir que es como un constructor.\r\n\r\nAhora que ya tenemos nuestro objeto gato utilizaremos sus funciones.\r\n\r\n[sourcecode language=\"python\"]\r\ngato.acariciar()\r\n# gato.acariciar()\r\n\r\ngato.jugar()\r\n# al gato le encanta jugar \r\n\r\ngato.jugar()\r\n# al gato le encanta jugar\r\n\r\ngato.jugar()\r\n# el gato no quiero jugar\r\n[\/sourcecode]\r\n\r\nNos damos cuenta que al tercer intento de jugar con el gato este ya no quiere jugar. Pero \u00bfPor que? Podemos entenderlo f\u00e1cilmente al ver la funci\u00f3n jugar() y el valor que tiene los atributos del gato.\r\n\r\nRecordemos que la funci\u00f3n jugar eval\u00faa el nivel del hambre y de energ\u00eda del gato para imprimir \"al gato le encanta jugar\". En caso que no se cumpla la condici\u00f3n imprime \"el gato no quiere jugar\". Ahora si vemos los valores que tiene asignado las variables podemos ver que cada vez que el gato juega pierde energ\u00eda y hambre. Hasta quedarse con el m\u00ednimo requerido para jugar.\r\n\r\n[sourcecode language=\"python\"]\r\nprint gato.energia\r\n# 3\r\n\r\nprint gato.hambre\r\n# 1\r\n[\/sourcecode]\r\n\r\nPor lo que podemos ver el gato no quiere jugar por que tiene hambre. As\u00ed que le daremos leche.\r\n\r\n[sourcecode language=\"python\"]\r\ngato.tomar_leche(4)\r\n# el gato toma su leche\r\n\r\ngato.hambre\r\n# 5\r\n[\/sourcecode]\r\n\r\nAhora el gato ya puede jugar. Obviamente si se sigue ejecutando la funci\u00f3n jugar se le acabara la energ\u00eda o el hambre.\r\n\r\n[sourcecode language=\"python\"]\r\ngato.jugar()\r\n# al gato le encanta jugar print \r\n\r\ngato.hambre\r\n# 3 \r\n\r\nprint gato.energia\r\n# 2\r\n[\/sourcecode]\r\n\r\n<h3>Herencia<\/h3>\r\nLa herencia es uno de los tres conceptos b\u00e1sicos que tiene todo lenguaje orientado a objetos. La herencia consiste en que una clase pueda heredar de otra clase, en otras palabras la clase puede ser extendida. Siguiendo con nuestro ejemplo de gatos, la clase Gato podr\u00eda heredar de una clase Felino.\r\n\r\n[sourcecode language=\"python\"]\r\nclass Felino:\r\n    def __init__(self):\r\n        print 'se creo el felino'\r\n\r\n    def rugido(self):\r\n        print 'El felino dio un rugido'\r\n\r\nclass Gato(Felino):\r\n    def __init__(self, energia, hambre):\r\n        self.energia = energia\r\n        self.hambre = hambre\r\n        print 'Se creo un gato'\r\n\r\n    def tomar_leche(self, leche_en_litros):\r\n        self.hambre += leche_en_litros\r\n        print 'el gato toma su leche'\r\n\r\n    def acariciar(self):\r\n        print 'prrrrr...'\r\n\r\n    def jugar(self):\r\n        if self.energia &lt;= 0 or self.hambre &lt;=1:\r\n            print 'el gato no quiero jugar'\r\n        else:\r\n            self.energia -=1\r\n            self.hambre -= 2\r\n            print 'al gato le encanta jugar'\r\n\r\n    def dormir(self, horas):\r\n        self.energia += horas\r\n        print 'el gato tomo una siesta'\r\n[\/sourcecode]\r\n\r\nAl hacer esto la clase Gato ya hereda de la clase Felino y con ello hereda las variables y funciones del Felino. Es decir si ejecutamo gato.rugido() ahora el gato dar\u00e1 un rugido.\r\n\r\n[sourcecode language=\"python\"]\r\ngato = Gato(3,3)\r\n# Se creo un gato\r\n\r\ngato.rugido()\r\n# El felino dio un rugido\r\n[\/sourcecode]\r\n\r\nAdem\u00e1s en python tenemos algo llamado <strong>herencia m\u00faltiple<\/strong>. Es decir nuestra clase puede heredar de varias clases. Por ejemplo nuestro Gato puede heredar de Felino y Mascota.\r\n\r\n[sourcecode language=\"python\"]\r\nclass Mascota:\r\n    def __init__(self):\r\n        print 'se creo la mascota'\r\n\r\n    def sientate(self):\r\n        print 'La mascota se sent\u00f3'\r\n\r\nclass Felino:\r\n    def __init__(self):\r\n        print 'se creo el felino'\r\n\r\n    def rugido(self):\r\n        print 'El felino dio un rugido'\r\n\r\nclass Gato(Felino, Mascota):\r\n    def __init__(self, energia, hambre):\r\n        self.energia = energia\r\n        self.hambre = hambre\r\n        print 'Se creo un gato'\r\n\r\n    def tomar_leche(self, leche_en_litros):\r\n        self.hambre += leche_en_litros\r\n        print 'el gato toma su leche'\r\n\r\n    def acariciar(self):\r\n        print 'prrrrr...'\r\n\r\n    def jugar(self):\r\n        if self.energia &lt;= 0 or self.hambre &lt;=1:\r\n            print 'el gato no quiero jugar'\r\n        else:\r\n            self.energia -=1\r\n            self.hambre -= 2\r\n            print 'al gato le encanta jugar'\r\n\r\n    def dormir(self, horas):\r\n        self.energia += horas\r\n        print 'el gato tomo una siesta'\r\n[\/sourcecode]\r\n\r\nAhora cuando creemos una instancia del gato podremos usar tanto lo que herede de Felino como lo que herede de Mascota.\r\n\r\n[sourcecode language=\"python\"]\r\ngato = Gato(3,3)\r\n# Se creo un gato\r\n\r\ngato.rugido()\r\n# El felino dio un rugido\r\n\r\ngato.sientate()\r\n# La mascota se sent\u00f3\r\n[\/sourcecode]\r\n\r\n<h3>Polimorfismo<\/h3>\r\nEn si la palabra polimorfismo viene del griego y significa varias formas. La teor\u00eda indica que se trata de la habilidad de responder a una misma funci\u00f3n de manera distinta. Haremos un ejemplo con una clase Gato y una clase Perro.\r\n\r\n[sourcecode language=\"python\"]\r\nclass Gato:\r\n   def  ruge(self):\r\n       print 'El gato maulla'\r\n\r\nclass Perro:\r\n   def ruge(self):\r\n       print 'El perro ladra'\r\n\r\ndef rugir(animal):\r\n    animal.ruge()\r\n[\/sourcecode]\r\n\r\nHemos creado la funci\u00f3n rugir la cual ejecutar\u00e1 la funci\u00f3n ruge del objeto. Ya que Python es de tipado din\u00e1mico python reconocer\u00e1 automaticamente la la funci\u00f3n que debe ejecutar.\r\n\r\n[sourcecode language=\"python\"]\r\ngato = Gato()\r\nperro = Perro()\r\n\r\nrugir(gato)\r\n# 'El gato maulla'\r\n\r\nrugir(perro)\r\n# 'El perro ladra'\r\n[\/sourcecode]\r\n\r\n<h3>Encapsulaci\u00f3n<\/h3>\r\nLo que hace el encapsulamiento es impedir la visualizaci\u00f3n o acceso de las variables de manera directa. En otros lenguajes esto se logra al momento de declarar la variable como public y private sin embargo en python es algo distinto. Para declarar una variable o funci\u00f3n como privada, el nombre de la funci\u00f3n o variable a ser declarado debe comenzar con doble guion abajo. Esto bastar\u00e1 para que lo declarado sea reconocido como privado.\r\n\r\nEste es un peque\u00f1o ejemplo de como declarar una funcion privada en python. Ahora si queremos llamar a la funcion privada nos lanzara un error.\r\n\r\n[sourcecode language=\"python\"]\r\nejemplo = ClaseEjemplo()\r\nejemplo.publico()\r\n# soy publico\r\nejemplo.__pirvate()\r\nTraceback (most recent call last):\r\n  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;\r\nAttributeError: ClaseEjemplo instance has no attribute '__privado'\r\n[\/sourcecode]\r\n\r\nAhora lo mismo es al momento de declarar variable.\r\n\r\n[sourcecode language=\"python\"]\r\nclass ClaseOtroEjemplo:\r\n   def __init__(self):\r\n       self.publico = 'variable publica'\r\n       self.__privado = 'variable privada'\r\n\r\n   def obtener_privado(self):\r\n       print self.__privado\r\n[\/sourcecode]\r\n\r\nAhora hemos creado la clase ClaseOtroEjemplo el cual tiene un constructor donde se declara dos variables una publica y otra privada. Tenemos que entender que tanto las funciones como las variables privadas solo pueden ser utilizadas dentro de la clase y si queremos usarlas fuera de esta clase podemos hacerlo por medio de una funci\u00f3n que devuelva el valor privado. En este ejemplo he usado la funci\u00f3n \"obtener_privado\" para obtener el valor de la variable privada. Entonces para resumir, con esta funci\u00f3n se entiende que la variable \"__privado\" sera solo de lectura ya que puede ser consultada (por la funci\u00f3n obtener_privado) mas no puede ser modificada y la variable publica si pude ser modificada y consultada ya que esa es la naturaleza de una variable publica.\r\n\r\n[sourcecode language=\"python\"]\r\notro_ejemplo = ClaseOtroEjemplo()\r\n\r\nprint otro_ejemplo.publico\r\n# 'variable publica'\r\n\r\notro_ejemplo.obtener_privado()\r\n# variable privada\r\n[\/sourcecode]\r\n\r\nBueno eso seria todo en este cuarto tutorial de python. Si quieres profundizar m\u00e1s en el tema como siempre puedes visitar la <a title=\"Classes and Objects\" href=\"https:\/\/docs.python.org\/2\/tutorial\/classes.html\" target=\"_blank\">documentaci\u00f3n oficial<\/a> de python. Para el pr\u00f3ximo tutorial profundizaremos\u00a0los objetos b\u00e1sicos que tiene python.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/python4-e1405366532954.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Tue, 15 Jul 2014 16:54:49 +0000","created_by":1,"updated_at":"Thu, 24 Jul 2014 12:08:41 +0000","updated_by":1,"published_at":"Tue, 15 Jul 2014 16:54:49 +0000","published_by":1},{"id":403,"title":"Empieza a hacer juegos en la web ahora!... con CraftyJS.","slug":"empieza-a-hacer-juegos-en-la-web-ahora-con-craftyjs","markdown":"\nEn este post indicar\u00e9 los 1eros pasos de c\u00f3mo poder usar la librer\u00eda CraftyJS sin morir el intento, en efecto algo muy b\u00e1sico como para conocer este mundo tan alucinante del desarrollo de juegos y en este caso en la\u00a0web. \u00bfQu\u00e9 es CraftyJS? [CraftyJS](http:\/\/craftyjs.com\/) es una librer\u00eda ligera hecha en JavaScript para el desarrollo de juegos en un entorno 2D (por el momento) que tiene mucha inspiraci\u00f3n de la sintaxis de librer\u00eda jQuery, que nos simplifica lo que se necesita para construir un juego que es el por ejemplo el manejo de frames por segundo, escenas, colisiones, objetos manipulables, objetos no manipulables, etc. **\u00bfQu\u00e9 herramientas se necesita?** Necesitamos nada mas y nada menos que: - Un editor de texto sea notepad, vim, Sublime Text - Un navegador web moderno sea Google Chrome, Mozilla Firefox, IExplore 9+ **Hola Crafty!** En este articulo se usar\u00e1 la versi\u00f3n 0.6.2 de crafty minificado, y vamos a ir paso a paso\u00a0viendo\u00a0los beneficios que nos d\u00e1 esta gran librer\u00eda, para empezar se har\u00e1 una peque\u00f1a distribuci\u00f3n de archivos para un mejor entendimiento del c\u00f3digo y sus funcionalidades. 1. Preparando nuestra peque\u00f1a distribuci\u00f3n\u00a0de archivos y carpetas (las carpetas terminan con el slash \"\/\").\n\n- *index.html*\u00a0-\u00a0Este es el archivo donde se mostrar\u00e1 en el navegador nuestro juego.\n- *assets\/*\u00a0- Aqui\u00a0va todo archivo multimedia, binaria o data para que el juego use, por ejemplo un sonido en mp3 o midi, o una textura en un gif o jpg.\n- *lib\/*\u00a0- Aqui\u00a0se agregan\u00a0librer\u00edas de terceros en caso se necesite\u00a0(bueno es la abreviatura de librer\u00eda o library por eso lo llamamos\u00a0\u201clib\u201d esta carpeta)\n- *src\/*\u00a0- Un directorio donde pondremos el cp\u00f3digo del juego\u00a0(en si la idea es que la carpeta referencia a \u201csource\u201d que claro se abrevia como standard a \u201csrc\u201d)\n\n 2. Teniendo nuestra distribuci\u00f3n de carpetas, descargamos lo necesario en este caso la librer\u00eda craftyjs(en este caso la versi\u00f3n 0.6.2) de aqui: [https:\/\/github.com\/craftyjs\/Crafty\/releases\/tag\/0.6.2](https:\/\/github.com\/craftyjs\/Crafty\/releases\/tag\/0.6.2) 3. \u00a0 fuentes: [http:\/\/buildnewgames.com\/introduction-to-crafty\/](http:\/\/buildnewgames.com\/introduction-to-crafty\/)\n","html":"En este post indicar\u00e9 los 1eros pasos de c\u00f3mo poder usar la librer\u00eda CraftyJS sin morir el intento, en efecto algo muy b\u00e1sico como para conocer este mundo tan alucinante del desarrollo de juegos y en este caso en la\u00a0web.\r\n\r\n\u00bfQu\u00e9 es CraftyJS?\r\n\r\n<a href=\"http:\/\/craftyjs.com\/\">CraftyJS<\/a> es una librer\u00eda ligera hecha en JavaScript para el desarrollo de juegos en un entorno 2D (por el momento) que tiene mucha inspiraci\u00f3n de la sintaxis de librer\u00eda jQuery, que nos simplifica lo que se necesita para construir un juego que es el por ejemplo el manejo de frames por segundo, escenas, colisiones, objetos manipulables, objetos no manipulables, etc.\r\n\r\n<strong>\u00bfQu\u00e9 herramientas se necesita?<\/strong>\r\n\r\nNecesitamos nada mas y nada menos que:\r\n\r\n- Un editor de texto sea notepad, vim, Sublime Text\r\n\r\n- Un navegador web moderno sea Google Chrome, Mozilla Firefox, IExplore 9+\r\n\r\n<strong>Hola Crafty!<\/strong>\r\n\r\nEn este articulo se usar\u00e1 la versi\u00f3n 0.6.2 de crafty minificado, y vamos a ir paso a paso\u00a0viendo\u00a0los beneficios que nos d\u00e1 esta gran librer\u00eda, para empezar se har\u00e1 una peque\u00f1a distribuci\u00f3n de archivos para un mejor entendimiento del c\u00f3digo y sus funcionalidades.\r\n\r\n1. Preparando nuestra peque\u00f1a distribuci\u00f3n\u00a0de archivos y carpetas (las carpetas terminan con el slash \"\/\").\r\n<ul>\r\n\t<li><em>index.html<\/em>\u00a0-\u00a0Este es el archivo donde se mostrar\u00e1 en el navegador nuestro juego.<\/li>\r\n\t<li><em>assets\/<\/em>\u00a0- Aqui\u00a0va todo archivo multimedia, binaria o data para que el juego use, por ejemplo un sonido en mp3 o midi, o una textura en un gif o jpg.<\/li>\r\n\t<li><em>lib\/<\/em>\u00a0- Aqui\u00a0se agregan\u00a0librer\u00edas de terceros en caso se necesite\u00a0(bueno es la abreviatura de librer\u00eda o library por eso lo llamamos\u00a0\u201clib\u201d esta carpeta)<\/li>\r\n\t<li><em>src\/<\/em>\u00a0- Un directorio donde pondremos el cp\u00f3digo del juego\u00a0(en si la idea es que la carpeta referencia a \u201csource\u201d que claro se abrevia como standard a \u201csrc\u201d)<\/li>\r\n<\/ul>\r\n2. Teniendo nuestra distribuci\u00f3n de carpetas, descargamos lo necesario en este caso la librer\u00eda craftyjs(en este caso la versi\u00f3n 0.6.2) de aqui:\r\n\r\n<a href=\"https:\/\/github.com\/craftyjs\/Crafty\/releases\/tag\/0.6.2\">https:\/\/github.com\/craftyjs\/Crafty\/releases\/tag\/0.6.2<\/a>\r\n\r\n3.\r\n\r\n&nbsp;\r\n\r\nfuentes:\r\n\r\n<a href=\"http:\/\/buildnewgames.com\/introduction-to-crafty\/\">http:\/\/buildnewgames.com\/introduction-to-crafty\/<\/a>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":5,"created_at":"Tue, 15 Jul 2014 18:19:13 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:32:51 +0000","updated_by":1,"published_at":"","published_by":1},{"id":131,"title":"Efecto PopUp CSS3","slug":"efecto-popup-css3","markdown":"\nTodos sabemos que ocultar y mostrar un elemento se puede lograr con un display:none y un display:block, hasta ahi todo es f\u00e1cil, el detalle es que la forma de como se presenta la informaci\u00f3n es muy dura y aburrida. \u00bfQue pasar\u00eda si le agregamos un poco de css3? Primero tengo este html\n\n\n","html":"Todos sabemos que ocultar y mostrar un elemento se puede lograr con un display:none y un display:block, hasta ahi todo es f\u00e1cil, el detalle es que la forma de como se presenta la informaci\u00f3n es muy dura y aburrida. \u00bfQue pasar\u00eda si le agregamos un poco de css3?\r\n\r\nPrimero tengo este html\r\n\r\n","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":3,"created_at":"Tue, 15 Jul 2014 18:39:14 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:39:25 +0000","updated_by":1,"published_at":"","published_by":1},{"id":879,"title":"Todo lo que necesitas saber acerca de la propiedad css \"will-change\"","slug":"temp-slug-29","markdown":"\nhttp:\/\/dev.opera.com\/articles\/css-will-change-property\n\n\n","html":"http:\/\/dev.opera.com\/articles\/css-will-change-property","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Tue, 15 Jul 2014 18:40:24 +0000","created_by":1,"updated_at":"Tue, 15 Jul 2014 18:40:24 +0000","updated_by":1,"published_at":"","published_by":1},{"id":979,"title":"Documentar con YUIDoc y GruntJS","slug":"documentar-con-yuidoc-y-gruntjs","markdown":"\nExisten muchas herramientas para poder\u00a0generar una buena documentaci\u00f3n de c\u00f3digo en\u00a0JavaScript hoy en d\u00eda. En este caso hablaremos y veremos el uso de una buena herramienta llamada [YUIDoc](http:\/\/yui.github.io\/yuidoc\/)\u00a0y\u00a0proviene de la familia de\u00a0[YUI](https:\/\/yuilibrary.com\/) (Yahoo User Interface), con ello podemos hacer que nuestro c\u00f3digo tenga un valor agregado.\n\n### **Requisitos:**\n\n Necesitamos tener instalado el servidor nodejs, en caso no lo tengas instalado y est\u00e1s bajo debian puedes visitar este buen [post](http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux). Luego necesitamos instalar GruntJS, aqu\u00ed tambi\u00e9n\u00a0puedes ver como instalarlo\u00a0[aqui](http:\/\/frontend-labs.com\/146--gruntjs-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos). ### **Escenario:**\n\n Tengo un archivo llamado <span class=\"folder\">calculadora.js y<\/span>\u00a0se encuentra en la siguiente ruta *\/home\/dru\/Projects\/JS\/docmycode\/src\/calculadora.js* y \u00a0su unica funci\u00f3n es hacer de una simple calculadora : [code lang=\"javascript\"] var calculadora = function(){ }; calculadora.prototype.sumar = function(a, b){ return a + b; }; calculadora.prototype.restar = function(a, b){ return a - b; }; calculadora.prototype.multiplicar = function(a, b){ return a * b; }; calculadora.prototype.dividir = function(){ return a \/ b; }; [\/code] Por el momento solo realiza operaciones muy b\u00e1sicas\u00a0y como podemos ver: todos los m\u00e9todos de la\u00a0calculadora s\u00f3lo reciben 2 par\u00e1metros. ### **Estableciendo el entorno de trabajo con las herramientas necesarias**\n\n OJO: Ten en cuenta que antes de seguir y ejecutar los comandos de cada paso debes ubicarte en la carpeta <span class=\"folder\">docmycode<\/span> y para que esteas seguro de ello debes ejecutar este comando: [code lang=\"bash\"] $ pwd [\/code] **Paso 1** Creamos nuestro archivo package.json pero de una manera pr\u00e1ctica que es ejecutando en consola o terminal el siguiente comando, si ya lo tienes creado previamente entonces puedes saltar\u00a0al paso 2 : [code lang=\"bash\"] $ npm init [\/code] Con el comando anterior te generar\u00e1 una serie de preguntas para que formes un archivo llamado <span class=\"folder\">package.json<\/span> como standard propio de un paquete para el npm (Node Package Manager), pero en nuestro caso ser\u00e1 para manejar nuestro peque\u00f1a demo, aqui mi pantalla una vez ejecutado ese comando: [![demo-terminal](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/demo-terminal.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/demo-terminal.jpg) Tenemos nuestro archivo <span class=\"folder\">package.json<\/span> generado, luego\u00a0tenemos que agregarle los paquetes necesarios para usar el documentador con\u00a0GruntJS **Paso 2** Editamos el <span class=\"folder\">package.json<\/span> creando un nuevo nodo llamado \"devDependencies\" agregando los paquetes necesarios que son [grunt](https:\/\/www.npmjs.org\/package\/grunt), [grunt-cli](https:\/\/www.npmjs.org\/package\/grunt-cli), y \u00a0[YUIDoc](https:\/\/www.npmjs.org\/package\/grunt-contrib-yuidoc) quedando as\u00ed: [![package-yuidoc](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/package-yuidoc.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/package-yuidoc.jpg)**Paso\u00a03** Teniendo nuestras dependencias y estando en la carpeta donde est\u00e1 nuestro archivo <span class=\"folder\">package.json<\/span> ejecutamos en terminal o en consola el siguiente comando: [code lang=\"bash\"] $ npm install [\/code] Haciendo ello instalamos los paquetes indicados en el paso 2 y nos quedar\u00eda un \u00faltimo paso que es configurar el automatizador. **Paso\u00a04** Creamos un archivo llamado <span class=\"folder\">Gruntfile.js<\/span> dentro de nuestra carpeta <span class=\"folder\">docmycode<\/span>, y en ella ingresamos lo siguiente: [code lang=\"javascript\"] module.exports = function(grunt){ \/\/establecemos la configuraci\u00f3n para el grunt en si grunt.initConfig({ \/\/pas\u00e1ndole con un nodo con nombre pkg \/\/se puede trabajar las variables del archivo package.json \/\/y poder pasarlos a otras configuraciones pkg: grunt.file.readJSON('package.json'), \/\/estableciendo la configuraci\u00f3n para el YUIDoc \/\/este nodo servir\u00e1 para ejecutar la tarea de documentar yuidoc:{ all: { \/\/Aqui se est\u00e1 usando el nodo pkg indicado arriba name: '<%= pkg.name %>', description: '<%= pkg.description %>', version: '<%= pkg.version %>', url: '<%= pkg.homepage %>', options:{ \/\/leer\u00e1 nuestra carpeta src donde est\u00e1 el archivo calculadora.js paths: ['src'], \/\/crear\u00e1 una carpeta llamada docs donde estar\u00e1 lo que documentemos outdir: '.\/docs\/' } } } }); grunt.log.write(\"Iniciando GruntJS\"); \/\/cargando el contrib de YUIDoc grunt.loadNpmTasks('grunt-contrib-yuidoc'); \/\/adicionando la tarea yuidoc a ser la tarea por defecto en grunt grunt.registerTask('default', 'yuidoc'); }; [\/code] **Paso 5** Teniendo esa peque\u00f1a configuraci\u00f3n ya podemos ejecutar este comando en consola: [code lang=\"bash\"] $ grunt [\/code] En donde ver\u00e1s en la carpeta <span class=\"folder\">docs<\/span> y en ella se encuentra un archivo de nombre <span class=\"folder\">index.html<\/span> y abriendolo en un navegador podemos apreciar esto por el momento. [![yui-browser](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/yui-browser.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/yui-browser.jpg)**Documentando con\u00a0YUIDoc** Cuando empezamos un comentario que entienda YUIDoc debe contener al inicio\u00a0\"\/**\" o tambi\u00e9n se pueden usar los [estilos de comentar](http:\/\/yui.github.io\/yuidoc\/syntax\/index.html#comment-styles). Teniendo claro ello, YUIDoc tiene una jerarqu\u00eda de uso de etiquetas, las clasifica en [primarias](http:\/\/yui.github.io\/yuidoc\/syntax\/index.html#primary-tags) y [secundarias.](http:\/\/yui.github.io\/yuidoc\/syntax\/index.html#secondary-tags) Gui\u00e1ndonos de lo que indica [la sintaxis de documentar](http:\/\/yui.github.io\/yuidoc\/syntax\/index.html)\u00a0y\u00a0\u00a0de\u00a0[c\u00f3mo\u00a0documentar](http:\/\/yui.github.io\/yuidoc\/) podemos usarlo con nuestro peque\u00f1o script llamado <span class=\"folder\">calculadora<\/span> si lo tomamos como una clase lo actualizamos coment\u00e1ndolo as\u00ed: [code lang=\"javascript\"] \/** * Clase donde realizamos c\u00e1lculos b\u00e1sicos * * @class calculadora * @constructor *\/ var calculadora = function(){ }; [\/code] Y al m\u00e9todo\u00a0\"sumar\": [code lang=\"javascript\"] \/** * Retorna el resultado de la suma de 2 valores ingresados * @method sumar * @param {Integer} a El 1er valor a sumar * @param {Integer} b El 2do valor a sumar * @return {Integer} la suma de a y b *\/ calculadora.prototype.sumar = function(a, b){ return a + b; }; [\/code] Continuando con los m\u00e9todos restantes: [code lang=\"javascript\"] \/** * Retorna el resultado de la resta de 2 valores ingresados * @method restar * @param {Integer} a El 1er valor a restar * @param {Integer} b El 2do valor a restar * @return {Integer} la resta de a y b *\/ calculadora.prototype.restar = function(a, b){ return a - b; }; \/** * Retorna el resultado de la multiplicaci\u00f3n de 2 valores ingresados * @method multiplicar * @param {Integer} a El 1er valor a multiplicar * @param {Integer} b El 2do valor a multiplicar * @return {Integer} la multiplicaci\u00f3n de a y b *\/ calculadora.prototype.multiplicar = function(a, b){ return a * b; }; \/** * Retorna el resultado de la divisi\u00f3n de 2 valores ingresados * @method dividir * @param {Integer} a El 1er valor a dividir * @param {Integer} b El 2do valor a dividir * @return {Integer} la divisi\u00f3n de a y b *\/ calculadora.prototype.dividir = function(){ return a \/ b; }; [\/code] Y luego volvemos al terminal y ejecutamos: [code lang=\"bash\"] $ grunt [\/code] Documentando hasta ahora deber\u00eda salir algo como esto:[![documentando-con-yuidoc](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/documentando-con-yuidoc.jpg)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/documentando-con-yuidoc.jpg) Como se puede apreciar la\u00a0forma de comentar para YUIDoc nos da muchas facilidades para tener una documentaci\u00f3n agradable para el usuario. \u00a0 \u00a0\n","html":"Existen muchas herramientas para poder\u00a0generar una buena documentaci\u00f3n de c\u00f3digo en\u00a0JavaScript hoy en d\u00eda.\r\n\r\nEn este caso hablaremos y veremos el uso de una buena herramienta llamada <a href=\"http:\/\/yui.github.io\/yuidoc\/\" target=\"_blank\">YUIDoc<\/a>\u00a0y\u00a0proviene de la familia de\u00a0<a href=\"https:\/\/yuilibrary.com\/\" target=\"_blank\">YUI<\/a> (Yahoo User Interface), con ello podemos hacer que nuestro c\u00f3digo tenga un valor agregado.\r\n<h3><strong>Requisitos:<\/strong><\/h3>\r\nNecesitamos tener instalado el servidor nodejs, en caso no lo tengas instalado y est\u00e1s bajo debian puedes visitar este buen <a href=\"http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux\" target=\"_blank\">post<\/a>.\r\n\r\nLuego necesitamos instalar GruntJS, aqu\u00ed tambi\u00e9n\u00a0puedes ver como instalarlo\u00a0<a href=\"http:\/\/frontend-labs.com\/146--gruntjs-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos\" target=\"_blank\">aqui<\/a>.\r\n<h3><strong>Escenario:<\/strong><\/h3>\r\nTengo un archivo llamado <span class=\"folder\">calculadora.js y<\/span>\u00a0se encuentra en la siguiente ruta\r\n\r\n<em>\/home\/dru\/Projects\/JS\/docmycode\/src\/calculadora.js<\/em>\r\n\r\ny \u00a0su unica funci\u00f3n es hacer de una simple calculadora :\r\n\r\n[code lang=\"javascript\"]\r\nvar calculadora = function(){\r\n\r\n};\r\ncalculadora.prototype.sumar = function(a, b){\r\n return a + b;\r\n};\r\ncalculadora.prototype.restar = function(a, b){\r\n return a - b;\r\n};\r\ncalculadora.prototype.multiplicar = function(a, b){\r\n return a * b;\r\n};\r\ncalculadora.prototype.dividir = function(){\r\n return a \/ b;\r\n};\r\n[\/code]\r\n\r\nPor el momento solo realiza operaciones muy b\u00e1sicas\u00a0y como podemos ver: todos los m\u00e9todos de la\u00a0calculadora s\u00f3lo reciben 2 par\u00e1metros.\r\n<h3><strong>Estableciendo el entorno de trabajo con las herramientas necesarias<\/strong><\/h3>\r\nOJO: Ten en cuenta que antes de seguir y ejecutar los comandos de cada paso debes ubicarte en la carpeta <span class=\"folder\">docmycode<\/span> y para que esteas seguro de ello debes ejecutar este comando:\r\n\r\n[code lang=\"bash\"]\r\n$ pwd\r\n[\/code]\r\n\r\n<strong>Paso 1<\/strong>\r\nCreamos nuestro archivo package.json pero de una manera pr\u00e1ctica que es ejecutando en consola o terminal el siguiente comando, si ya lo tienes creado previamente entonces puedes saltar\u00a0al paso 2 :\r\n\r\n[code lang=\"bash\"]\r\n$ npm init\r\n[\/code]\r\n\r\nCon el comando anterior te generar\u00e1 una serie de preguntas para que formes un archivo llamado <span class=\"folder\">package.json<\/span> como standard propio de un paquete para el npm (Node Package Manager), pero en nuestro caso ser\u00e1 para manejar nuestro peque\u00f1a demo, aqui mi pantalla una vez ejecutado ese comando:\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/demo-terminal.jpg\" target=\"_blank\"><img class=\"alignnone size-full wp-image-1281\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/demo-terminal.jpg\" alt=\"demo-terminal\" width=\"644\" height=\"732\" \/><\/a>\r\n\r\nTenemos nuestro archivo <span class=\"folder\">package.json<\/span> generado, luego\u00a0tenemos que agregarle los paquetes necesarios para usar el documentador con\u00a0GruntJS\r\n\r\n<strong>Paso 2<\/strong>\r\nEditamos el <span class=\"folder\">package.json<\/span> creando un nuevo nodo llamado \"devDependencies\" agregando los paquetes necesarios que son <a href=\"https:\/\/www.npmjs.org\/package\/grunt\" target=\"_blank\">grunt<\/a>, <a href=\"https:\/\/www.npmjs.org\/package\/grunt-cli\" target=\"_blank\">grunt-cli<\/a>, y \u00a0<a href=\"https:\/\/www.npmjs.org\/package\/grunt-contrib-yuidoc\" target=\"_blank\">YUIDoc<\/a>\r\n\r\nquedando as\u00ed:\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/package-yuidoc.jpg\" target=\"_blank\"><img class=\"alignnone size-full wp-image-1377\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/package-yuidoc.jpg\" alt=\"package-yuidoc\" width=\"642\" height=\"399\" \/><\/a>\r\n\r\n<strong>Paso\u00a03<\/strong>\r\nTeniendo nuestras dependencias y estando en la carpeta donde est\u00e1 nuestro archivo <span class=\"folder\">package.json<\/span> ejecutamos en terminal o en consola el siguiente comando:\r\n\r\n[code lang=\"bash\"]\r\n$ npm install\r\n[\/code]\r\n\r\nHaciendo ello instalamos los paquetes indicados en el paso 2 y nos quedar\u00eda un \u00faltimo paso que es configurar el automatizador.\r\n\r\n<strong>Paso\u00a04<\/strong>\r\nCreamos un archivo llamado <span class=\"folder\">Gruntfile.js<\/span> dentro de nuestra carpeta <span class=\"folder\">docmycode<\/span>, y en ella ingresamos lo siguiente:\r\n\r\n[code lang=\"javascript\"]\r\nmodule.exports = function(grunt){\r\n \/\/establecemos la configuraci\u00f3n para el grunt en si\r\n grunt.initConfig({\r\n   \/\/pas\u00e1ndole con un nodo con nombre pkg\r\n   \/\/se puede trabajar las variables del archivo package.json\r\n   \/\/y poder pasarlos a otras configuraciones\r\n   pkg: grunt.file.readJSON('package.json'),\r\n   \/\/estableciendo la configuraci\u00f3n para el YUIDoc\r\n   \/\/este nodo servir\u00e1 para ejecutar la tarea de documentar\r\n   yuidoc:{\r\n     all: {\r\n        \/\/Aqui se est\u00e1 usando el nodo pkg indicado arriba\r\n        name: '&lt;%= pkg.name %&gt;',\r\n        description: '&lt;%= pkg.description %&gt;',\r\n        version: '&lt;%= pkg.version %&gt;',\r\n        url: '&lt;%= pkg.homepage %&gt;',\r\n        options:{\r\n          \/\/leer\u00e1 nuestra carpeta src donde est\u00e1 el archivo calculadora.js\r\n          paths: ['src'],\r\n          \/\/crear\u00e1 una carpeta llamada docs donde estar\u00e1 lo que documentemos\r\n          outdir: '.\/docs\/'\r\n        }\r\n     }\r\n   }\r\n });\r\n\r\n grunt.log.write(&quot;Iniciando GruntJS&quot;);\r\n \/\/cargando el contrib de YUIDoc\r\n grunt.loadNpmTasks('grunt-contrib-yuidoc');\r\n \/\/adicionando la tarea yuidoc a ser la tarea por defecto en grunt\r\n grunt.registerTask('default', 'yuidoc');\r\n};\r\n[\/code]\r\n\r\n<strong>Paso 5<\/strong>\r\nTeniendo esa peque\u00f1a configuraci\u00f3n ya podemos ejecutar este comando en consola:\r\n\r\n[code lang=\"bash\"]\r\n$ grunt\r\n[\/code]\r\n\r\nEn donde ver\u00e1s en la carpeta <span class=\"folder\">docs<\/span> y en ella se encuentra un archivo de nombre <span class=\"folder\">index.html<\/span> y abriendolo en un navegador podemos apreciar esto por el momento.\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/yui-browser.jpg\" target=\"_blank\"><img class=\"alignnone size-full wp-image-1384\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/yui-browser.jpg\" alt=\"yui-browser\" width=\"1280\" height=\"995\" \/><\/a>\r\n\r\n<strong>Documentando con\u00a0YUIDoc<\/strong>\r\nCuando empezamos un comentario que entienda YUIDoc debe contener al inicio\u00a0\"\/**\" o tambi\u00e9n se pueden usar los <a href=\"http:\/\/yui.github.io\/yuidoc\/syntax\/index.html#comment-styles\" target=\"_blank\">estilos de comentar<\/a>.\r\n\r\nTeniendo claro ello, YUIDoc tiene una jerarqu\u00eda de uso de etiquetas, las clasifica en <a href=\"http:\/\/yui.github.io\/yuidoc\/syntax\/index.html#primary-tags\" target=\"_blank\">primarias<\/a> y <a href=\"http:\/\/yui.github.io\/yuidoc\/syntax\/index.html#secondary-tags\" target=\"_blank\">secundarias.<\/a>\r\n\r\nGui\u00e1ndonos de lo que indica <a href=\"http:\/\/yui.github.io\/yuidoc\/syntax\/index.html\" target=\"_blank\">la sintaxis de documentar<\/a>\u00a0y\u00a0\u00a0de\u00a0<a href=\"http:\/\/yui.github.io\/yuidoc\/\" target=\"_blank\">c\u00f3mo\u00a0documentar<\/a> podemos usarlo con nuestro peque\u00f1o script llamado <span class=\"folder\">calculadora<\/span> si lo tomamos como una clase lo actualizamos coment\u00e1ndolo as\u00ed:\r\n\r\n[code lang=\"javascript\"]\r\n\/**\r\n * Clase donde realizamos c\u00e1lculos b\u00e1sicos\r\n *\r\n * @class calculadora\r\n * @constructor\r\n *\/\r\n var calculadora = function(){\r\n\r\n };\r\n[\/code]\r\n\r\nY al m\u00e9todo\u00a0\"sumar\":\r\n\r\n[code lang=\"javascript\"]\r\n\/**\r\n * Retorna el resultado de la suma de 2 valores ingresados\r\n * @method sumar\r\n * @param {Integer} a El 1er valor a sumar\r\n * @param {Integer} b El 2do valor a sumar\r\n * @return {Integer} la suma de a y b\r\n *\/\r\ncalculadora.prototype.sumar = function(a, b){\r\n return a + b;\r\n};\r\n[\/code]\r\n\r\nContinuando con los m\u00e9todos restantes:\r\n\r\n[code lang=\"javascript\"]\r\n\/**\r\n * Retorna el resultado de la resta de 2 valores ingresados\r\n * @method restar\r\n * @param {Integer} a El 1er valor a restar\r\n * @param {Integer} b El 2do valor a restar\r\n * @return {Integer} la resta de a y b\r\n *\/\r\ncalculadora.prototype.restar = function(a, b){\r\n return a - b;\r\n};\r\n\r\n\/**\r\n * Retorna el resultado de la multiplicaci\u00f3n de 2 valores ingresados\r\n * @method multiplicar\r\n * @param {Integer} a El 1er valor a multiplicar\r\n * @param {Integer} b El 2do valor a multiplicar\r\n * @return {Integer} la multiplicaci\u00f3n de a y b\r\n *\/\r\ncalculadora.prototype.multiplicar = function(a, b){\r\n return a * b;\r\n};\r\n\r\n\/**\r\n * Retorna el resultado de la divisi\u00f3n de 2 valores ingresados\r\n * @method dividir\r\n * @param {Integer} a El 1er valor a dividir\r\n * @param {Integer} b El 2do valor a dividir\r\n * @return {Integer} la divisi\u00f3n de a y b\r\n *\/\r\ncalculadora.prototype.dividir = function(){\r\n return a \/ b;\r\n};\r\n[\/code]\r\n\r\nY luego volvemos al terminal y ejecutamos:\r\n\r\n[code lang=\"bash\"]\r\n$ grunt\r\n[\/code]\r\n\r\nDocumentando hasta ahora deber\u00eda salir algo como esto:<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/documentando-con-yuidoc.jpg\" target=\"_blank\"><img class=\"alignnone size-full wp-image-1400\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/documentando-con-yuidoc.jpg\" alt=\"documentando-con-yuidoc\" width=\"1280\" height=\"995\" \/><\/a>\r\n\r\nComo se puede apreciar la\u00a0forma de comentar para YUIDoc nos da muchas facilidades para tener una documentaci\u00f3n agradable para el usuario.\r\n\r\n&nbsp;\r\n\r\n&nbsp;","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/yuidoc-logo.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":5,"created_at":"Wed, 16 Jul 2014 12:18:25 +0000","created_by":1,"updated_at":"Wed, 16 Jul 2014 19:23:41 +0000","updated_by":1,"published_at":"Wed, 16 Jul 2014 12:18:25 +0000","published_by":1},{"id":1490,"title":"JSON: \u00bfQu\u00e9 es JSON?, \u00bfC\u00f3mo se usa? y \u00bfPara qu\u00e9 sirve JSON?","slug":"json-que-es-json-parse-json-stringify","markdown":"\n**JSON** es un formato de texto para la serializaci\u00f3n de datos estructurados. Deriva de los Objetos Literales de Javascript y est\u00e1 definido en la tercera edici\u00f3n del est\u00e1ndar de Lenguaje de programaci\u00f3n\u00a0[ECMAScript](http:\/\/www.ecma-international.org\/ecma-262\/5.1\/ \"Standard ECMA-262 Quinta Edici\u00f3n\") [ECMA]. JSON puede representar** cuatro tipos primitivos**(cadenas, n\u00fameros, booleanos, valores nulos) y **dos tipos estructurados**(objetos y arreglos). **En JSON:**- **Una Cadena** es una secuencia de ceros o m\u00e1s caracteres Unicode.\n- **Un Objeto** es una colecci\u00f3n desordenada de cero o m\u00e1s pares **nombre:valor**, donde un **nombre **es una cadena y un **valor** es una cadena, n\u00famero, booleano, nulo, objeto o arreglo.\n- **Un Arreglo** es una secuencia desordenada de ceros o m\u00e1s valores.\n\n Los objetivos del dise\u00f1o de JSON fueron\u00a0que sea peque\u00f1o, port\u00e1til, textual y derivado\u00a0de JavaScript. ### Diferencias entre JavaScript y JSON\n\n<table><thead><tr><th>**Javascript**<\/th><th>**Diferencias en JSON**<\/th><\/tr><\/thead><tbody><tr><td>Objetos y Arreglos<\/td><td>Los nombres de propiedades(keys) deben ser cadenas entre comillas dobles; las comas finales est\u00e1n prohibidas.<\/td><\/tr><tr><td>N\u00fameros<\/td><td>Un punto decimal(.) debe ser seguido por al menos un d\u00edgito.<\/td><\/tr><tr><td>Cadenas<\/td><td>S\u00f3lo algunos caracteres pueden ser escapados; algunos caracteres de control est\u00e1n prohibidos. Los caracteres del *separador de l\u00ednea* (Unicode 2028) y el *separador de p\u00e1rrafo* Unicode (Unicode 2029) est\u00e1n permitidos.<\/td><\/tr><\/tbody><\/table>### Demostrando lo anterior\n\n Los nombres de propiedades(claves) deben ser cadenas entre **comillas dobles**: ![json-error-comilla-simple](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/json-error-comilla-simple.png) Las **comas finales** est\u00e1n prohibidas: ![json-error-coma-al-final](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/json-error-coma-al-final.png) Un **punto decimal**(.) debe ser seguido por al\u00a0menos *un d\u00edgito*: ![json-decimal-de-un-solo-digito](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/json-decimal-de-un-solo-digito.png) En cambio\u00a0en Javascript **esto si funciona**, veamos: ![javascript-decimal-de-un-solo-digito](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/javascript-decimal-de-un-solo-digito.png) Los caracteres del separador de l\u00ednea (Unicode 2028) y el separador de p\u00e1rrafo Unicode (Unicode 2029) est\u00e1n permitidos en JSON. ![javascript-error-no-eval-algunos-unicodes](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/javascript-error-no-eval-algunos-unicodes.png) Como podemos ver, cuando deserializamos(usamos JSON.parse) el contenido de la variable <span class=\"folder\">textoJson<\/span> obtenemos un objeto Javascript <span class=\"folder\">{a: \"\", b: \"\"}<\/span>. Pero cuando intentamos **evaluar**(eval) el contenido de la variable <span class=\"folder\">textoJson<\/span> como Javascript, obtenemos un error de Sintaxis. El objeto JSON nativo\n=====================\n\n Es un objeto Javascript nativo que contiene m\u00e9todos para la creaci\u00f3n y manipulaci\u00f3n de objetos JSON. Si bien es cierto este objeto es nativo, pero no tiene soporte en navegadores antiguos. ### M\u00e9todos\n\n El objeto JSON nativo incluye dos m\u00e9todos principales. JSON.parse(text[, reviver ])\n----------------------------\n\n El m\u00e9todo <span class=\"folder\">JSON.parse()<\/span> recibe una cadena JSON y en base a esta cadena construye un objeto JavaScript. Adicionalmente tiene el par\u00e1metro opcional **reviver**(resucitador). Si se especifica un reviver, el valor puede ser transformado antes de ser devuelto. Osea, las claves y los valores se ejecutan de forma individual a trav\u00e9s del resucitador como un bucle, all\u00ed nosotros podemos manipular su valor y retornarlo modificado. Si la funci\u00f3n retorna <span class=\"folder\">undefined<\/span>, la propiedad se elimina del objeto. Cuando el resucitador termina de iterar realiza una \u00faltima confirmaci\u00f3n, en esta env\u00eda una **clave vac\u00eda**(<span class=\"folder\">\"\"<\/span>) y como **valor** pone el nuevo objeto creado en base a las modificaciones que hicimos, entonces all\u00ed es cuando podemos hacerle una \u00faltima modificaci\u00f3n a todo el objeto o simplemente retornarlo. ### Uso de JSON.parse()\n\n Uso simple para convertir una cadena de texto JSON a un objeto Javascript: \tvar objetoJson = JSON.parse('{\"clave\":\"valor\"}');\n\tconsole.log(objetoJson.clave); \/\/ logs \"valor\"\n\n Uso completo(usando el par\u00e1metro **reviver**): \tvar textoJson = '{\"usb\" : 20, \"mouse\" : 30, \"mousepad\": 10}',\n\tprecioConIgv = function(producto, precio){\n\t  if (producto === \"mousepad\"){\n\t    return undefined; \/\/ no lo considero en el nuevo objeto\n\t  }\n\t  if (producto === \"\"){ \/\/ \u00faltima confirmaci\u00f3n\n\t    return precio; \/\/ retornamos el nuevo objeto\n\t  }\n\t  return precio + (precio * 0.18); \/\/ manipulamos a todos los demas\n\t},\n\tobjetoJson = JSON.parse(textoJson, precioConIgv);\n\tconsole.log(objetoJson); \/\/ logs Object {usb: 23.6, mouse: 35.4}\n\n Hemos utilizado la funci\u00f3n <span class=\"folder\">precioConIgv<\/span> como **reviver**, all\u00ed le indicamos que a los precios actuales les agregue un 18% m\u00e1s y adicionalmente no deseamos que registre el producto **mousepad** en nuestro nuevo objeto. Y vemos finalmente el uso del condicional <span class=\"folder\">if (producto === \"\")<\/span> donde le indicamos que luego de haber terminado con todos los productos nos devuelva el **nuevo objeto**, que en ese momento se encuentra contenido en la variable precio. JSON.stringify(value [ , replacer [ , space ] ])\n------------------------------------------------\n\n El m\u00e9todo <span class=\"folder\">JSON.stringify()<\/span> recibe un **objeto JavaScript** y devuelve su **JSON** equivalente y puede tomar hasta tres par\u00e1metros. El primer par\u00e1metro o el **par\u00e1metro valor** es obligatorio y suele ser un Objeto o Arreglo, aunque tambi\u00e9n puede ser una cadena, booleano, n\u00famero o un valor nulo. El **par\u00e1metro opcional replacer** es una funci\u00f3n que altera la forma en que los objetos y los arreglos se encadenan, este par\u00e1metro puede ser una funci\u00f3n que tiene dos par\u00e1metros, esta funci\u00f3n es como un bucle que itera las claves y valores, lo cual nos permite modificar los valores. Si deseamos que determinado clave y valor no sea parte del encadenamiento entonces simplemente retornarmos <span class=\"folder\">undefined<\/span>. El par\u00e1metro opcional replacer tambi\u00e9n puede ser usado como un Arreglo de cadenas y\/o n\u00fameros y de esta forma actuar\u00e1 como una lista blanca o un filtro indicando solo las claves que deben ser incluidas en la cadena de texto JSON resultante. El **par\u00e1metro opcional space** es una cadena o n\u00famero usado para insertar caracteres o espacios en blanco en la cadena de texto JSON, para una mejor legibilidad. Si ingresamos un n\u00famero este indicar\u00e1 la cantidad de espacios en blanco que se usar\u00e1n. El valor m\u00e1ximo para este n\u00famero ser\u00e1 10, si ingresas un n\u00famero mayor a 10 solo usar\u00e1 10 espacios en blanco como m\u00e1ximo. Si no se proporciona este par\u00e1metro (o es nulo), no se utiliza ning\u00fan espacio en blanco. ### Uso de JSON.stringify()\n\n Uso simple para convertir un objeto Javascript a una cadena de texto JSON: \tvar objetoJavascript = {\"clave\" : \"valor\"},\n\ttextoJson = JSON.stringify(objetoJavascript);\n\t\n\tconsole.log(typeof textoJson); \/\/ logs \"string\"\n\tconsole.log(textoJson); \/\/ logs {\"clave\":\"valor\"}\n\n Uso de un Arreglo como par\u00e1metro **replacer** para convertir un objeto Javascript a una cadena de texto JSON: \tvar objetoJavascript = {\"hora\": 11, \"dia\": 1, \"mes\": 7, \"a\u00f1o\": 2014},\n\t    textoJson = JSON.stringify(objetoJavascript , [\"mes\", \"a\u00f1o\"]);\n\t    console.log(textoJson); \/\/ logs '{\"a\u00f1o\" : 2014, \"mes\": 7}'\n\n En el c\u00f3digo anterior podemos ver que al colocar como segundo par\u00e1metro <span class=\"folder\">[\"mes\", \"a\u00f1o\"]<\/span> realiz\u00f3 un filtro de datos. Uso de una funci\u00f3n como par\u00e1metro **replacer** para convertir un objeto Javascript a una cadena de texto JSON: \tvar filtro = function (clave, valor) {\n\t  if (clave === \"hora\") {\n\t    return undefined;\n\t  }\n\t  return valor;\n\t}\n\t\n\tvar objetoJavascript = {\"hora\": 11, \"dia\": 1, \"mes\": 7, \"a\u00f1o\": 2014},\n\t    textoJson = JSON.stringify(objetoJavascript , filtro, 4);\n\t    console.log(textoJson);\n\t    \/*\n\t    logs:\n\t    {\n\t         \"dia\": 1,\n\t         \"mes\": 7,\n\t         \"a\u00f1o\": 2014\n\t    }\n\t    *\/\n\n En el ejemplo anterior usamos la funci\u00f3n <span class=\"folder\">filtro<\/span> para retirar la clave **<span class=\"folder\">hora<\/span>** de nuestra cadena de texto JSON resultante. Adicionalmente el resultado esta tabulado ya que en el tercer par\u00e1metro le indicamos que deseamos que delante de cada registro coloque <span class=\"folder\">4<\/span> espacios en blanco, esto gracias al par\u00e1metro <span class=\"folder\">space<\/span>. ### Polyfill\n\n El objeto JSON no viene incluido en los navegadores m\u00e1s antiguos. Pero esto se puede solucionar insertando el siguiente c\u00f3digo al inicio de todos tus scripts, con el cual permitir\u00e1s el uso del objeto JSON en las implementaciones que no lo soportan de forma nativa (como Internet Explorer 6). \tif (!window.JSON) {\n\t  window.JSON = {\n\t    parse: function (sJSON) { return eval(\"(\" + sJSON + \")\"); },\n\t    stringify: function (vContent) {\n\t      if (vContent instanceof Object) {\n\t        var sOutput = \"\";\n\t        if (vContent.constructor === Array) {\n\t          for (var nId = 0; nId\n\n Existen Polyfills conocidos para el objeto JSON, por ejemplo [JSON2](https:\/\/github.com\/douglascrockford\/JSON-js \"JSON2 de Douglas Crockford\") y [JSON3](http:\/\/bestiejs.github.com\/json3 \"JSON3 de BestieJS\"). ### Compatibilidad con navegadores\n\n<table><thead><tr><th>**Chrome**<\/th><th>**Firefox**<\/th><th>**IE**<\/th><th>**Opera**<\/th><th>**Safari**<\/th><\/tr><\/thead><tbody><tr><td>Si<\/td><td>3.5 +<\/td><td>8.0 +<\/td><td>10.5 +<\/td><td>4.0 +<\/td><\/tr><\/tbody><\/table>### JSON y jQuery\n\n jQuery tiene implementada la funci\u00f3n <span class=\"folder\">jQuery.parseJSON()<\/span> Sin embargo, esta funci\u00f3n realiza comprobaciones adicionales, innecesarias que tambi\u00e9n se llevan a cabo por <span class=\"folder\">JSON.parse()<\/span> por lo cual por un tema de rendimiento es recomendable usar JSON.parse en lugar de jQuery.parseJSON(), sin embargo si quieres utilizar el soporte de jQuery en navegadores que no tengan esta caracter\u00edstica de forma nativa puedes realizar el siguiente c\u00f3digo: \tvar textoJson = '{\"clave\" : \"valor\"}',\n\t    nuevoObjeto = JSON && JSON.parse(textoJson) || $.parseJSON(textoJson);\n\n De esta forma cuando tengas soporte nativo lo usar\u00e1s por defecto, de lo contrario usar\u00e1s la funci\u00f3n <span class=\"folder\">$.parseJSON()<\/span> de jQuery. ### Herramientas Online\n\n- [JSON Parser Online](http:\/\/json.parser.online.fr\/ \"Json parser online\")\u00a0(visor).\n- [JSON Editor Online](http:\/\/www.jsoneditoronline.org\/ \"JSON Editor Online\")\u00a0(visor).\n- [JSON Formatter & Validator](http:\/\/jsonformatter.curiousconcept.com\/ \"JSON Formatter & Validator\")\u00a0(validador).\n- [JS Beautifier](http:\/\/jsbeautifier.org\/ \"JS Beautifier\")\u00a0(JS, HTML y JSON legible).\n\n \u00a0\n","html":"<strong>JSON<\/strong> es un formato de texto para la serializaci\u00f3n de datos estructurados.\r\n\r\nDeriva de los Objetos Literales de Javascript y est\u00e1 definido en la tercera edici\u00f3n del est\u00e1ndar de Lenguaje de programaci\u00f3n\u00a0<a title=\"Standard ECMA-262 Quinta Edici\u00f3n\" href=\"http:\/\/www.ecma-international.org\/ecma-262\/5.1\/\" target=\"_blank\">ECMAScript<\/a> [ECMA].\r\n\r\nJSON puede representar<strong> cuatro tipos primitivos<\/strong>(cadenas, n\u00fameros, booleanos, valores nulos) y <strong>dos tipos estructurados<\/strong>(objetos y arreglos).\r\n\r\n<strong>En JSON:<\/strong>\r\n<ul>\r\n  <li><strong>Una Cadena<\/strong> es una secuencia de ceros o m\u00e1s caracteres Unicode.<\/li>\r\n  <li><strong>Un Objeto<\/strong> es una colecci\u00f3n desordenada de cero o m\u00e1s pares <strong>nombre:valor<\/strong>, donde un <strong>nombre <\/strong>es una cadena y un <strong>valor<\/strong> es una cadena, n\u00famero, booleano, nulo, objeto o arreglo.<\/li>\r\n  <li><strong>Un Arreglo<\/strong> es una secuencia desordenada de ceros o m\u00e1s valores.<\/li>\r\n<\/ul>\r\nLos objetivos del dise\u00f1o de JSON fueron\u00a0que sea peque\u00f1o, port\u00e1til, textual y derivado\u00a0de JavaScript.\r\n<h3>Diferencias entre JavaScript y JSON<\/h3>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th><strong>Javascript<\/strong><\/th>\r\n<th><strong>Diferencias en JSON<\/strong><\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td>Objetos y Arreglos<\/td>\r\n<td>Los nombres de propiedades(keys) deben ser cadenas entre comillas dobles; las comas finales est\u00e1n prohibidas.<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>N\u00fameros<\/td>\r\n<td>Un punto decimal(.) debe ser seguido por al menos un d\u00edgito.<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Cadenas<\/td>\r\n<td>S\u00f3lo algunos caracteres pueden ser escapados; algunos caracteres de control est\u00e1n prohibidos. Los caracteres del <em>separador de l\u00ednea<\/em> (Unicode 2028) y el <em>separador de p\u00e1rrafo<\/em> Unicode (Unicode 2029) est\u00e1n permitidos.<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h3>Demostrando lo anterior<\/h3>\r\nLos nombres de propiedades(claves) deben ser cadenas entre <strong>comillas dobles<\/strong>:\r\n\r\n<img class=\"aligncenter size-full wp-image-1541\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/json-error-comilla-simple.png\" alt=\"json-error-comilla-simple\" width=\"720\" height=\"300\" \/>\r\nLas <strong>comas finales<\/strong> est\u00e1n prohibidas:\r\n\r\n<img class=\"aligncenter size-full wp-image-1540\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/json-error-coma-al-final.png\" alt=\"json-error-coma-al-final\" width=\"720\" height=\"300\" \/>\r\n\r\nUn <strong>punto decimal<\/strong>(.) debe ser seguido por al\u00a0menos <em>un d\u00edgito<\/em>:\r\n\r\n<img class=\"aligncenter size-full wp-image-1539\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/json-decimal-de-un-solo-digito.png\" alt=\"json-decimal-de-un-solo-digito\" width=\"720\" height=\"300\" \/>\r\n\r\nEn cambio\u00a0en Javascript <strong>esto si funciona<\/strong>, veamos:\r\n\r\n<img class=\"aligncenter size-full wp-image-1538\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/javascript-decimal-de-un-solo-digito.png\" alt=\"javascript-decimal-de-un-solo-digito\" width=\"720\" height=\"200\" \/>\r\n\r\nLos caracteres del separador de l\u00ednea (Unicode 2028) y el separador de p\u00e1rrafo Unicode (Unicode 2029) est\u00e1n permitidos en JSON.\r\n\r\n<img class=\"aligncenter size-full wp-image-1548\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/javascript-error-no-eval-algunos-unicodes.png\" alt=\"javascript-error-no-eval-algunos-unicodes\" width=\"720\" height=\"200\" \/>\r\n\r\nComo podemos ver, cuando deserializamos(usamos JSON.parse) el contenido de la variable <span class=\"folder\">textoJson<\/span> obtenemos un objeto Javascript <span class=\"folder\">{a: \"\", b: \"\"}<\/span>.\r\n\r\nPero cuando intentamos <strong>evaluar<\/strong>(eval) el contenido de la variable <span class=\"folder\">textoJson<\/span> como Javascript, obtenemos un error de Sintaxis.\r\n<h1>El objeto JSON nativo<\/h1>\r\nEs un objeto Javascript nativo que contiene m\u00e9todos para la creaci\u00f3n y manipulaci\u00f3n de objetos JSON. Si bien es cierto este objeto es nativo, pero no tiene soporte en navegadores antiguos.\r\n\r\n<h3>M\u00e9todos<\/h3>\r\n\r\nEl objeto JSON nativo incluye dos m\u00e9todos principales.\r\n\r\n<h2>JSON.parse(text[, reviver ])<\/h2>\r\n\r\nEl m\u00e9todo <span class=\"folder\">JSON.parse()<\/span> recibe una cadena JSON y en base a esta cadena construye un objeto JavaScript.\r\n\r\nAdicionalmente tiene el par\u00e1metro opcional <strong>reviver<\/strong>(resucitador). Si se especifica un reviver, el valor puede ser transformado antes de ser devuelto. Osea, las claves y los valores se ejecutan de forma individual a trav\u00e9s del resucitador como un bucle, all\u00ed nosotros podemos manipular su valor y retornarlo modificado.\r\n\r\nSi la funci\u00f3n retorna <span class=\"folder\">undefined<\/span>, la propiedad se elimina del objeto.\r\n\r\nCuando el resucitador termina de iterar realiza una \u00faltima confirmaci\u00f3n, en esta env\u00eda una <strong>clave vac\u00eda<\/strong>(<span class=\"folder\">\"\"<\/span>) y como <strong>valor<\/strong> pone el nuevo objeto creado en base a las modificaciones que hicimos, entonces all\u00ed es cuando podemos hacerle una \u00faltima modificaci\u00f3n a todo el objeto o simplemente retornarlo.\r\n<h3>Uso de JSON.parse()<\/h3>\r\nUso simple para convertir una cadena de texto JSON a un objeto Javascript:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar objetoJson = JSON.parse('{\"clave\":\"valor\"}');\r\nconsole.log(objetoJson.clave); \/\/ logs \"valor\"\r\n<\/code>\r\n<\/pre>\r\n\r\nUso completo(usando el par\u00e1metro <strong>reviver<\/strong>):\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar textoJson = '{\"usb\" : 20, \"mouse\" : 30, \"mousepad\": 10}',\r\nprecioConIgv = function(producto, precio){\r\n  if (producto === \"mousepad\"){\r\n    return undefined; \/\/ no lo considero en el nuevo objeto\r\n  }\r\n  if (producto === \"\"){ \/\/ \u00faltima confirmaci\u00f3n\r\n    return precio; \/\/ retornamos el nuevo objeto\r\n  }\r\n  return precio + (precio * 0.18); \/\/ manipulamos a todos los demas\r\n},\r\nobjetoJson = JSON.parse(textoJson, precioConIgv);\r\nconsole.log(objetoJson); \/\/ logs Object {usb: 23.6, mouse: 35.4}\r\n<\/code>\r\n<\/pre>\r\n\r\nHemos utilizado la funci\u00f3n <span class=\"folder\">precioConIgv<\/span> como <strong>reviver<\/strong>, all\u00ed le indicamos que a los precios actuales les agregue un 18% m\u00e1s y adicionalmente no deseamos que registre el producto <strong>mousepad<\/strong> en nuestro nuevo objeto.\r\n\r\nY vemos finalmente el uso del condicional <span class=\"folder\">if (producto === \"\")<\/span> donde le indicamos que luego de haber terminado con todos los productos nos devuelva el <strong>nuevo objeto<\/strong>, que en ese momento se encuentra contenido en la variable precio.\r\n\r\n<h2>JSON.stringify(value [ , replacer [ , space ] ])<\/h2>\r\n\r\nEl m\u00e9todo <span class=\"folder\">JSON.stringify()<\/span> recibe un <strong>objeto JavaScript<\/strong> y devuelve su <strong>JSON<\/strong> equivalente y puede tomar hasta tres par\u00e1metros.\r\n\r\nEl primer par\u00e1metro o el <strong>par\u00e1metro valor<\/strong> es obligatorio y suele ser un Objeto o Arreglo, aunque tambi\u00e9n puede ser una cadena, booleano, n\u00famero o un valor nulo.\r\n\r\nEl <strong>par\u00e1metro opcional replacer<\/strong> es una funci\u00f3n que altera la forma en que los objetos y los arreglos se encadenan, este par\u00e1metro puede ser una funci\u00f3n que tiene dos par\u00e1metros, esta funci\u00f3n es como un bucle que itera las claves y valores, lo cual nos permite modificar los valores. Si deseamos que determinado clave y valor no sea parte del encadenamiento entonces simplemente retornarmos <span class=\"folder\">undefined<\/span>.\r\n\r\nEl par\u00e1metro opcional replacer tambi\u00e9n puede ser usado como un Arreglo de cadenas y\/o n\u00fameros y de esta forma actuar\u00e1 como una lista blanca o un filtro indicando solo las claves que deben ser incluidas en la cadena de texto JSON resultante.\r\n\r\nEl <strong>par\u00e1metro opcional space<\/strong> es una cadena o n\u00famero usado para insertar caracteres o espacios en blanco en la cadena de texto JSON, para una mejor legibilidad. Si ingresamos un n\u00famero este indicar\u00e1 la cantidad de espacios en blanco que se usar\u00e1n. El valor m\u00e1ximo para este n\u00famero ser\u00e1 10, si ingresas un n\u00famero mayor a 10 solo usar\u00e1 10 espacios en blanco como m\u00e1ximo.\r\n\r\nSi no se proporciona este par\u00e1metro (o es nulo), no se utiliza ning\u00fan espacio en blanco.\r\n\r\n<h3>Uso de JSON.stringify()<\/h3>\r\n\r\nUso simple para convertir un objeto Javascript a una cadena de texto JSON:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar objetoJavascript = {\"clave\" : \"valor\"},\r\ntextoJson = JSON.stringify(objetoJavascript);\r\n\r\nconsole.log(typeof textoJson); \/\/ logs \"string\"\r\nconsole.log(textoJson); \/\/ logs {\"clave\":\"valor\"}\r\n<\/code>\r\n<\/pre>\r\n\r\nUso de un Arreglo como par\u00e1metro <strong>replacer<\/strong> para convertir un objeto Javascript a una cadena de texto JSON:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar objetoJavascript = {\"hora\": 11, \"dia\": 1, \"mes\": 7, \"a\u00f1o\": 2014},\r\n    textoJson = JSON.stringify(objetoJavascript , [\"mes\", \"a\u00f1o\"]);\r\n    console.log(textoJson); \/\/ logs '{\"a\u00f1o\" : 2014, \"mes\": 7}'\r\n<\/code>\r\n<\/pre>\r\n\r\nEn el c\u00f3digo anterior podemos ver que al colocar como segundo par\u00e1metro <span class=\"folder\">[\"mes\", \"a\u00f1o\"]<\/span> realiz\u00f3 un filtro de datos.\r\n\r\nUso de una funci\u00f3n como par\u00e1metro <strong>replacer<\/strong> para convertir un objeto Javascript a una cadena de texto JSON:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar filtro = function (clave, valor) {\r\n  if (clave === \"hora\") {\r\n    return undefined;\r\n  }\r\n  return valor;\r\n}\r\n\r\nvar objetoJavascript = {\"hora\": 11, \"dia\": 1, \"mes\": 7, \"a\u00f1o\": 2014},\r\n    textoJson = JSON.stringify(objetoJavascript , filtro, 4);\r\n    console.log(textoJson);\r\n    \/*\r\n    logs:\r\n    {\r\n         \"dia\": 1,\r\n         \"mes\": 7,\r\n         \"a\u00f1o\": 2014\r\n    }\r\n    *\/\r\n<\/code>\r\n<\/pre>\r\n\r\nEn el ejemplo anterior usamos la funci\u00f3n <span class=\"folder\">filtro<\/span> para retirar la clave <strong><span class=\"folder\">hora<\/span><\/strong> de nuestra cadena de texto JSON resultante.\r\n\r\nAdicionalmente el resultado esta tabulado ya que en el tercer par\u00e1metro le indicamos que deseamos que delante de cada registro coloque <span class=\"folder\">4<\/span> espacios en blanco, esto gracias al par\u00e1metro <span class=\"folder\">space<\/span>.\r\n<h3>Polyfill<\/h3>\r\nEl objeto JSON no viene incluido en los navegadores m\u00e1s antiguos. Pero esto se puede solucionar insertando el siguiente c\u00f3digo al inicio de todos tus scripts, con el cual permitir\u00e1s el uso del objeto JSON en las implementaciones que no lo soportan de forma nativa (como Internet Explorer 6).\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nif (!window.JSON) {\r\n  window.JSON = {\r\n    parse: function (sJSON) { return eval(\"(\" + sJSON + \")\"); },\r\n    stringify: function (vContent) {\r\n      if (vContent instanceof Object) {\r\n        var sOutput = \"\";\r\n        if (vContent.constructor === Array) {\r\n          for (var nId = 0; nId < vContent.length; sOutput += this.stringify(vContent[nId]) + \",\", nId++);\r\n            return \"[\" + sOutput.substr(0, sOutput.length - 1) + \"]\";\r\n        }\r\n        if (vContent.toString !== Object.prototype.toString) {\r\n          return \"\\\"\" + vContent.toString().replace(\/\"\/g, \"\\\\$&\") + \"\\\"\";\r\n        }\r\n        for (var sProp in vContent) {\r\n          sOutput += \"\\\"\" + sProp.replace(\/\"\/g, \"\\\\$&\") + \"\\\":\" + this.stringify(vContent[sProp]) + \",\";\r\n        }\r\n        return \"{\" + sOutput.substr(0, sOutput.length - 1) + \"}\";\r\n     }\r\n     return typeof vContent === \"string\" ? \"\\\"\" + vContent.replace(\/\"\/g, \"\\\\$&\") + \"\\\"\" : String(vContent);\r\n    }\r\n  };\r\n}\r\n<\/code>\r\n<\/pre>\r\n\r\nExisten Polyfills conocidos para el objeto JSON, por ejemplo <a title=\"JSON2 de Douglas Crockford\" href=\"https:\/\/github.com\/douglascrockford\/JSON-js\" target=\"_blank\">JSON2<\/a> y <a title=\"JSON3 de BestieJS\" href=\"http:\/\/bestiejs.github.com\/json3\" target=\"_blank\">JSON3<\/a>.\r\n<h3>Compatibilidad con navegadores<\/h3>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th><strong>Chrome<\/strong><\/th>\r\n<th><strong>Firefox<\/strong><\/th>\r\n<th><strong>IE<\/strong><\/th>\r\n<th><strong>Opera<\/strong><\/th>\r\n<th><strong>Safari<\/strong><\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td>Si<\/td>\r\n<td>3.5 +<\/td>\r\n<td>8.0 +<\/td>\r\n<td>10.5 +<\/td>\r\n<td>4.0 +<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h3>JSON y jQuery<\/h3>\r\njQuery tiene implementada la funci\u00f3n <span class=\"folder\">jQuery.parseJSON()<\/span> Sin embargo, esta funci\u00f3n realiza comprobaciones adicionales, innecesarias que tambi\u00e9n se llevan a cabo por <span class=\"folder\">JSON.parse()<\/span> por lo cual por un tema de rendimiento es recomendable usar JSON.parse en lugar de jQuery.parseJSON(), sin embargo si quieres utilizar el soporte de jQuery en navegadores que no tengan esta caracter\u00edstica de forma nativa puedes realizar el siguiente c\u00f3digo:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar textoJson = '{\"clave\" : \"valor\"}',\r\n    nuevoObjeto = JSON && JSON.parse(textoJson) || $.parseJSON(textoJson);\r\n<\/code>\r\n<\/pre>\r\n\r\nDe esta forma cuando tengas soporte nativo lo usar\u00e1s por defecto, de lo contrario usar\u00e1s la funci\u00f3n <span class=\"folder\">$.parseJSON()<\/span> de jQuery.\r\n<h3>Herramientas Online<\/h3>\r\n<ul>\r\n  <li><a title=\"Json parser online\" href=\"http:\/\/json.parser.online.fr\/\" target=\"_blank\">JSON Parser Online<\/a>\u00a0(visor).<\/li>\r\n  <li><a title=\"JSON Editor Online\" href=\"http:\/\/www.jsoneditoronline.org\/\" target=\"_blank\">JSON Editor Online<\/a>\u00a0(visor).<\/li>\r\n  <li><a title=\"JSON Formatter &amp; Validator\" href=\"http:\/\/jsonformatter.curiousconcept.com\/\" target=\"_blank\">JSON Formatter &amp; Validator<\/a>\u00a0(validador).<\/li>\r\n  <li><a title=\"JS Beautifier\" href=\"http:\/\/jsbeautifier.org\/\" target=\"_blank\">JS Beautifier<\/a>\u00a0(JS, HTML y JSON legible).<\/li>\r\n<\/ul>\r\n&nbsp;","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/json-javascript-object-notation.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Sat, 26 Jul 2014 01:14:36 +0000","created_by":1,"updated_at":"Fri, 24 Oct 2014 23:37:28 +0000","updated_by":1,"published_at":"Sat, 26 Jul 2014 01:14:36 +0000","published_by":1},{"id":1483,"title":"\u00bfComo pensar en \"Angular JS\" si se JQuery?","slug":"pensar-angular-js-jquery-paradigmas","markdown":"\nConceptually, directives are\u00a0*not*\u00a0packaged jQuery\n==================================================\n\n Mucho de nosotros conocemos JQuery y puede resultar dificil cambiar de JQuery a Angular JS ya que el cambio no es solo de herramienta, si no el cambio tambi\u00e9n es de mentalidad, es un cambio de paradigma. En este post te ayudaremos a entender mejor como funciona Angular JS y que diferencias tiene con JQuery. 1. No dise\u00f1es tu pagina y luego manipules el DOM 2. No juntes Angular con JQuery 3. Siempre piensa en terminos de arquitectura 4. Siempre desarrolla orientado al testeo \u00a0 http:\/\/stackoverflow.com\/questions\/14994391\/how-do-i-think-in-angularjs-if-i-have-a-jquery-background\n","html":"<h1 style=\"color: #000000;\">Conceptually, directives are\u00a0<em>not<\/em>\u00a0packaged jQuery<\/h1>\r\nMucho de nosotros conocemos JQuery y puede resultar dificil cambiar de JQuery a Angular JS ya que el cambio no es solo de herramienta, si no el cambio tambi\u00e9n es de mentalidad, es un cambio de paradigma. En este post te ayudaremos a entender mejor como funciona Angular JS y que diferencias tiene con JQuery.\r\n\r\n1. No dise\u00f1es tu pagina y luego manipules el DOM\r\n\r\n2. No juntes Angular con JQuery\r\n\r\n3. Siempre piensa en terminos de arquitectura\r\n\r\n4. Siempre desarrolla orientado al testeo\r\n\r\n&nbsp;\r\n\r\nhttp:\/\/stackoverflow.com\/questions\/14994391\/how-do-i-think-in-angularjs-if-i-have-a-jquery-background","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Fri, 01 Aug 2014 17:07:51 +0000","created_by":1,"updated_at":"Fri, 01 Aug 2014 17:07:51 +0000","updated_by":1,"published_at":"","published_by":1},{"id":989,"title":"Conceptos b\u00e1sicos de Animaci\u00f3n - Parte 1: Loops","slug":"conceptos-basicos-de-javascript-para-la-animacion-html5","markdown":"\nLa animaci\u00f3n es movimiento. El movimiento es un cambio en la posici\u00f3n de un objeto en el tiempo de tal forma que un minuto esta aqu\u00ed, y al minuto siguiente, esta por all\u00e1. Mediante la aplicaci\u00f3n de f\u00f3rmulas matem\u00e1ticas para la ubicaci\u00f3n de un objeto, se puede determinar su posici\u00f3n siguiente y afectar el comportamiento del objeto. Pero la animaci\u00f3n no es s\u00f3lo el movimiento, tambi\u00e9n es el cambio de cualquier atributo visual: forma, tama\u00f1o, orientaci\u00f3n, color, etc. As\u00ed mismo\u00a0es importante decir que el tiempo es un componente fundamental para\u00a0la animaci\u00f3n. Es el mecanismo utilizado para expresar el cambio en un objeto de una posici\u00f3n a la siguiente.\n\nSoporte Canvas HTML5\n--------------------\n\n Canvas es una etiqueta de HTML5 para en ella crear animaciones, es nuestro lienzo de trabajo, la etiqueta canvas tiene soporte por la mayor\u00eda de los navegadores modernos. <table align=\"center\" border=\"0\" id=\"browsers\" width=\"100%\"><tbody><tr><td>IE<\/td><td>Firefox<\/td><td>Safari<\/td><td>Chrome<\/td><td>Opera<\/td><td>iOS Safari<\/td><td>Android Browser<\/td><\/tr><tr><td>9+<\/td><td>3.5+<\/td><td>3.2+<\/td><td>9+<\/td><td>10.6+<\/td><td>3.2+<\/td><td>2.1+<\/td><\/tr><\/tbody><\/table> En caso de que la etiqueta canvas no se admite en el\u00a0navegador, se puede incluir dentro de las mismas\u00a0un mensaje de advertencia: [code lang=\"html\"] <canvas width=\"400\" height=\"400\"> <p>Este navegador no soporta el elemento canvas.<\/p> <\/canvas> [\/code] El mensaje de advertencia aparece s\u00f3lo si el navegador no reconoce la etiqueta canvas. Si el navegador soporta canvas entonces lo renderiza y pasa por alto el elemento <p> anidado. [code lang=\"javascript\"] if (document.createElement('canvas').getContext) { console.log(\"El elemento canvas es soportado.\"); } [\/code] Documento b\u00e1sico HTML5\n----------------------\n\n Una de las mejores partes de hacer una animaci\u00f3n en la web, es lo f\u00e1cil de\u00a0crearla, a continuaci\u00f3n vemos un ejemplo de una estructura b\u00e1sica. [code lang=\"html\"] <!doctype html> <canvas id=\"canvas\" width=\"400\" height=\"400\"><\/canvas><script>\/\/ <![CDATA[ window.onload = function () { \/\/Aqu\u00ed va tu codigo... }; \/\/ ]]><\/script>[\/code] Nuestro codigo\u00a0se colocar\u00eda dentro de la funci\u00f3n onload, debido a que este se ejecuta, cuando ya termino de cargar todo los elementos del documento. Si el documento tiene muchos datos incrustados lo mejor no seria usar esta t\u00e9cnica, mas adelante les ense\u00f1are otra\u00a0t\u00e9cnica. Bucles o loops de animaci\u00f3n\n---------------------------\n\n Todas las animaciones son expresadas como una especie de bucle, entonces la animaci\u00f3n seria expresada como\u00a0fotograma en fotograma, en donde cada fotograma tendr\u00eda posici\u00f3n, el tama\u00f1o, color y otros atributos de todos los objetos dibujados en el canvas. [caption id=\"attachment_1416\" align=\"aligncenter\" width=\"376\"][![animaci\u00f3n html5](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/imagenesFrame.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/imagenesFrame.png) Animaci\u00f3n frame por frame[\/caption] Por lo tanto, si tenemos una pelota que se mueve, entonces en cada frame tendr\u00edamos que almacenar la posici\u00f3n de la pelota. Entonces en el frame 1 indicar\u00eda la posici\u00f3n de la pelota de 10 p\u00edxeles desde la parte izquierda, en el frame 2 indicar\u00eda que es 15 p\u00edxeles, y as\u00ed sucesivamente. El c\u00f3digo lee estos datos, dibuja el objeto de acuerdo a la descripci\u00f3n dada, y muestra el fotograma. [caption id=\"attachment_1417\" align=\"aligncenter\" width=\"474\"]![imagenesFrameRender](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/imagenesFrameRender.png \"Renderizando para mostrar frame\") Procesando y luego\u00a0para mostrar frames[\/caption] Pero si nos damos\u00a0cuenta la forma en que describimos una animaci\u00f3n con c\u00f3digo din\u00e1mico se parece m\u00e1s este diagrama de flujo. [caption id=\"attachment_1418\" align=\"aligncenter\" width=\"464\"]![imagenesFrameRenderBucle](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/imagenesFrameRenderBucle.png \"Diagrama de flujo de una animaci\u00f3n \") Animaci\u00f3n del Script[\/caption] Entonces podemos entender a que nos referimos con un bucle. En primer lugar se configura el estado inicial, despu\u00e9s se aplican las reglas como por ejemplo mover una pelota 5 pixeles hacia la derecha, referente a las reglas tendr\u00edamos un\u00a0conjunto de reglas que puedan manejar todas las situaciones posibles que puedan surgir en la escena. Siempre se comienza con un comportamiento sencillo mediante la creaci\u00f3n de una regla o dos,\u00a0y cuando eso funciona, se agrega otra regla. Las reglas a que nos referimos en realidad son declaraciones, en el caso de mover las bolas 5 pixeles a la derecha, se expresa en javascript as\u00ed: [code lang=\"javascript\"] ball.x = ball.x + 5; [\/code] Esta es la secuencia de las acciones que debe tomar en cada frame de la animaci\u00f3n: 1. <span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">Ejecutar todo el c\u00f3digo que es necesario para <\/span><span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">este\u00a0<\/span><span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">frame<\/span><span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">.<\/span>\n2. Dibuja todos los objetos con el elemento canvas.\n3. Reiniciar el proceso para renderizar el siguiente frame.\n\n Ahora con estos puntos vamos a crear una funci\u00f3n que podamos llamar varias veces para actualizar la posici\u00f3n del objeto y traerlo hacia el elemento canvas, luego creamos un temporizador javascript para configurar el bucle. [code lang=\"javascript\"] function drawFrame () { ball.x += 1; ball.draw(context); } window.setInterval(drawFrame, 1000\/60); [\/code] La funci\u00f3n drawFrame actualiza\u00a0la posici\u00f3n y dibuja la pelota\u00a0en el canvas. Pasamos como primer par\u00e1metro la funci\u00f3n drawFrame y como segundo par\u00e1metro el tiempo a la funci\u00f3n window.setInterval, que ejecuta varias veces esta funci\u00f3n en un intervalo especificado en mili segundos. En este ejemplo, eso es 1000\/60, que es de 60 frames por segundo, o alrededor de 17 ms. El problema de esto, es que la funci\u00f3n setInterval nunca fue creada para hacer animaciones no son exactos a resoluciones en\u00a0milisegundos var\u00edan a trav\u00e9s de los browsers, no se puede tratar con ellos para animaciones de alta calidad, tambi\u00e9n si se desea animaciones suaves se deben de pintar frames mas r\u00e1pido que la pantalla pueda mostrar, com\u00fanmente las pantallas tienen una frecuencia de 60 cuadros por segundo o FPS, esto da como resultado el calculo innecesario, otro problema con el uso de setInterval o setTimeout es que las animaciones continuar\u00e1n funcionando incluso si la p\u00e1gina no es visible para el usuario. Debido a que la animaci\u00f3n no era una caracter\u00edstica del html los navegadores no hab\u00edan puesto mucha prioridad a este tipo de optimizaciones. Sin embargo con el elemento canvas de HTML5 optimizaron este punto d\u00e9bil, \u00a0mejorando el \u00a0rendimiento y velocidad en la\u00a0animaci\u00f3n. Un loop\u00a0de animaci\u00f3n utilizando requestAnimationFrame\n-----------------------------------------------------\n\n Debido al creciente inter\u00e9s en la animaci\u00f3n basada en HTML5, los navegadores web han implementado una API, que permite hacer animaciones a los desarrolladores que est\u00e1n\u00a0utilizando JavaScript, lo cual optimiza la animaci\u00f3n en el\u00a0navegador. La funci\u00f3n window.requestAnimationFrame acepta una funci\u00f3n callback como argumento que ejecuta antes de volver a dibujar en la pantalla. Para crear un bucle de animaci\u00f3n, encadenar varias llamadas a requestAnimationFrame. [code lang=\"javascript\"] (function drawFrame () { window.requestAnimationFrame(drawFrame, canvas); \/\/animation code... }()); [\/code] Hemos definido una funci\u00f3n, drawFrame, que contiene el c\u00f3digo de animaci\u00f3n para ejecutar en cada frame. En la primera l\u00ednea en esta funci\u00f3n, hacemos un llamado a window.requestAnimationFrame y pasamos\u00a0una referencia a la misma funci\u00f3n \"drawFrame\"\u00a0que estamos definiendo, el segundo argumento opcional es el elemento canvas que vamos a dibujar. Cuando ejecutamos la funci\u00f3n drawFrame, window.requestAnimationFrame pone en cola la funci\u00f3n de drawFrame\u00a0para ejecutarse nuevamente\u00a0en el siguiente intervalo de animaci\u00f3n. Cuando\u00a0hacemos que la funci\u00f3n corra de nuevo estamos haciendo un\u00a0bucle. Por lo tanto, cualquier c\u00f3digo que colocamos\u00a0dentro de esta funci\u00f3n se llama una y otra vez. [code lang=\"javascript\"] if (!window.requestAnimationFrame) { window.requestAnimationFrame = (window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) { return window.setTimeout(callback, 1000\/60); }); } [\/code] Esta funci\u00f3n verifica si window.requestAnimationFrame esta definida, si no lo esta, verifica con algunas de las funciones para distintas versiones del browsers, si no se puede encontrar una versi\u00f3n especifica se ejecuta la funci\u00f3n setTimeout en un intervalo de 60 fps, un estandar entre los monitores para soportar animaciones. Y mediante\u00a0este proceso se realizar\u00edan los bucles o loops para realizar nuestras animaciones, en el siguiente post hablaremos del elemento canvas, que justamente lo vemos en este ejemplo. See the Pen [LvCJx](http:\/\/codepen.io\/jjhoncv\/pen\/LvCJx\/) by Jhonnatan ([@jjhoncv](http:\/\/codepen.io\/jjhoncv)) on [CodePen](http:\/\/codepen.io).\n\n<script async=\"\" src=\"\/\/codepen.io\/assets\/embed\/ei.js\"><\/script>\n","html":"La animaci\u00f3n es movimiento. El movimiento es un cambio en la posici\u00f3n de un objeto en el tiempo de tal forma que un minuto esta aqu\u00ed, y al minuto siguiente, esta por all\u00e1. Mediante la aplicaci\u00f3n de f\u00f3rmulas matem\u00e1ticas para la ubicaci\u00f3n de un objeto, se puede determinar su posici\u00f3n siguiente y afectar el comportamiento del objeto. Pero la animaci\u00f3n no es s\u00f3lo el movimiento, tambi\u00e9n es el cambio de cualquier atributo visual: forma, tama\u00f1o, orientaci\u00f3n, color, etc. As\u00ed mismo\u00a0es importante decir que el tiempo es un componente fundamental para\u00a0la animaci\u00f3n. Es el mecanismo utilizado para expresar el cambio en un objeto de una posici\u00f3n a la siguiente.\r\n<h2>Soporte Canvas HTML5<\/h2>\r\nCanvas es una etiqueta de HTML5 para en ella crear animaciones, es nuestro lienzo de trabajo, la etiqueta canvas tiene soporte por la mayor\u00eda de los navegadores modernos.\r\n<table id=\"browsers\" border=\"0\" width=\"100%\" align=\"center\">\r\n<tbody>\r\n<tr>\r\n<td>IE<\/td>\r\n<td>Firefox<\/td>\r\n<td>Safari<\/td>\r\n<td>Chrome<\/td>\r\n<td>Opera<\/td>\r\n<td>iOS Safari<\/td>\r\n<td>Android Browser<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>9+<\/td>\r\n<td>3.5+<\/td>\r\n<td>3.2+<\/td>\r\n<td>9+<\/td>\r\n<td>10.6+<\/td>\r\n<td>3.2+<\/td>\r\n<td>2.1+<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\nEn caso de que la etiqueta canvas no se admite en el\u00a0navegador, se puede incluir dentro de las mismas\u00a0un mensaje de advertencia:\r\n\r\n[code lang=\"html\"]\r\n&lt;canvas width=&quot;400&quot; height=&quot;400&quot;&gt;\r\n&lt;p&gt;Este navegador no soporta el elemento canvas.&lt;\/p&gt;\r\n&lt;\/canvas&gt;\r\n[\/code]\r\n\r\nEl mensaje de advertencia aparece s\u00f3lo si el navegador no reconoce la etiqueta canvas. Si el navegador soporta canvas entonces lo renderiza y pasa por alto el elemento &lt;p&gt; anidado.\r\n\r\n[code lang=\"javascript\"]\r\nif (document.createElement('canvas').getContext) {\r\n console.log(&quot;El elemento canvas es soportado.&quot;);\r\n}\r\n[\/code]\r\n\r\n<h2>Documento b\u00e1sico HTML5<\/h2>\r\nUna de las mejores partes de hacer una animaci\u00f3n en la web, es lo f\u00e1cil de\u00a0crearla, a continuaci\u00f3n vemos un ejemplo de una estructura b\u00e1sica.\r\n\r\n[code lang=\"html\"]\r\n&lt;!doctype html&gt;\r\n\r\n &lt;canvas id=&quot;canvas&quot; width=&quot;400&quot; height=&quot;400&quot;&gt;&lt;\/canvas&gt;&lt;script&gt;\/\/ &lt;![CDATA[\r\n window.onload = function () {\r\n \/\/Aqu\u00ed va tu codigo...\r\n };\r\n\r\n\/\/ ]]&gt;&lt;\/script&gt;[\/code]\r\n\r\nNuestro codigo\u00a0se colocar\u00eda dentro de la funci\u00f3n onload, debido a que este se ejecuta, cuando ya termino de cargar todo los elementos del documento. Si el documento tiene muchos datos incrustados lo mejor no seria usar esta t\u00e9cnica, mas adelante les ense\u00f1are otra\u00a0t\u00e9cnica.\r\n<h2>Bucles o loops de animaci\u00f3n<\/h2>\r\nTodas las animaciones son expresadas como una especie de bucle, entonces la animaci\u00f3n seria expresada como\u00a0fotograma en fotograma, en donde cada fotograma tendr\u00eda posici\u00f3n, el tama\u00f1o, color y otros atributos de todos los objetos dibujados en el canvas.\r\n\r\n[caption id=\"attachment_1416\" align=\"aligncenter\" width=\"376\"]<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/imagenesFrame.png\"><img class=\"wp-image-1416 size-full\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/imagenesFrame.png\" alt=\"animaci\u00f3n html5\" width=\"376\" height=\"83\" \/><\/a> Animaci\u00f3n frame por frame[\/caption]\r\n\r\nPor lo tanto, si tenemos una pelota que se mueve, entonces en cada frame tendr\u00edamos que almacenar la posici\u00f3n de la pelota. Entonces en el frame 1 indicar\u00eda la posici\u00f3n de la pelota de 10 p\u00edxeles desde la parte izquierda, en el frame 2 indicar\u00eda que es 15 p\u00edxeles, y as\u00ed sucesivamente. El c\u00f3digo lee estos datos, dibuja el objeto de acuerdo a la descripci\u00f3n dada, y muestra el fotograma.\r\n\r\n[caption id=\"attachment_1417\" align=\"aligncenter\" width=\"474\"]<img class=\"wp-image-1417 size-full\" title=\"Renderizando para mostrar frame\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/imagenesFrameRender.png\" alt=\"imagenesFrameRender\" width=\"474\" height=\"74\" \/> Procesando y luego\u00a0para mostrar frames[\/caption]\r\n\r\nPero si nos damos\u00a0cuenta la forma en que describimos una animaci\u00f3n con c\u00f3digo din\u00e1mico se parece m\u00e1s este diagrama de flujo.\r\n\r\n[caption id=\"attachment_1418\" align=\"aligncenter\" width=\"464\"]<img class=\"wp-image-1418 size-full\" title=\"Diagrama de flujo de una animaci\u00f3n \" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/imagenesFrameRenderBucle.png\" alt=\"imagenesFrameRenderBucle\" width=\"464\" height=\"110\" \/> Animaci\u00f3n del Script[\/caption]\r\n\r\nEntonces podemos entender a que nos referimos con un bucle. En primer lugar se configura el estado inicial, despu\u00e9s se aplican las reglas como por ejemplo mover una pelota 5 pixeles hacia la derecha, referente a las reglas tendr\u00edamos un\u00a0conjunto de reglas que puedan manejar todas las situaciones posibles que puedan surgir en la escena.\r\n\r\nSiempre se comienza con un comportamiento sencillo mediante la creaci\u00f3n de una regla o dos,\u00a0y cuando eso funciona, se agrega otra regla. Las reglas a que nos referimos en realidad son declaraciones, en el caso de mover las bolas 5 pixeles a la derecha, se expresa en javascript as\u00ed:\r\n\r\n[code lang=\"javascript\"]\r\nball.x = ball.x + 5;\r\n[\/code]\r\n\r\nEsta es la secuencia de las acciones que debe tomar en cada frame de la animaci\u00f3n:\r\n<ol>\r\n\t<li><span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">Ejecutar todo el c\u00f3digo que es necesario para <\/span><span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">este\u00a0<\/span><span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">frame<\/span><span style=\"font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;\">.<\/span><\/li>\r\n\t<li>Dibuja todos los objetos con el elemento canvas.<\/li>\r\n\t<li>Reiniciar el proceso para renderizar el siguiente frame.<\/li>\r\n<\/ol>\r\nAhora con estos puntos vamos a crear una funci\u00f3n que podamos llamar varias veces para actualizar la posici\u00f3n del objeto y traerlo hacia el elemento canvas, luego creamos un temporizador javascript para configurar el bucle.\r\n\r\n[code lang=\"javascript\"]\r\nfunction drawFrame () {\r\n ball.x += 1;\r\n ball.draw(context);\r\n}\r\nwindow.setInterval(drawFrame, 1000\/60);\r\n[\/code]\r\n\r\nLa funci\u00f3n drawFrame actualiza\u00a0la posici\u00f3n y dibuja la pelota\u00a0en el canvas. Pasamos como primer par\u00e1metro la funci\u00f3n drawFrame y como segundo par\u00e1metro el tiempo a la funci\u00f3n window.setInterval, que ejecuta varias veces esta funci\u00f3n en un intervalo especificado en mili segundos. En este ejemplo, eso es 1000\/60, que es de 60 frames por segundo, o alrededor de 17 ms.\r\n\r\nEl problema de esto, es que la funci\u00f3n setInterval nunca fue creada para hacer animaciones no son exactos a resoluciones en\u00a0milisegundos var\u00edan a trav\u00e9s de los browsers, no se puede tratar con ellos para animaciones de alta calidad, tambi\u00e9n si se desea animaciones suaves se deben de pintar frames mas r\u00e1pido que la pantalla pueda mostrar, com\u00fanmente las pantallas tienen una frecuencia de 60 cuadros por segundo o FPS, esto da como resultado el calculo innecesario, otro problema con el uso de setInterval o setTimeout es que las animaciones continuar\u00e1n funcionando incluso si la p\u00e1gina no es visible para el usuario.\r\n\r\nDebido a que la animaci\u00f3n no era una caracter\u00edstica del html los navegadores no hab\u00edan puesto mucha prioridad a este tipo de optimizaciones. Sin embargo con el elemento canvas de HTML5 optimizaron este punto d\u00e9bil, \u00a0mejorando el \u00a0rendimiento y velocidad en la\u00a0animaci\u00f3n.\r\n<h2>Un loop\u00a0de animaci\u00f3n utilizando requestAnimationFrame<\/h2>\r\nDebido al creciente inter\u00e9s en la animaci\u00f3n basada en HTML5, los navegadores web han implementado una API, que permite hacer animaciones a los desarrolladores que est\u00e1n\u00a0utilizando JavaScript, lo cual optimiza la animaci\u00f3n en el\u00a0navegador. La funci\u00f3n window.requestAnimationFrame acepta una funci\u00f3n callback como argumento que ejecuta antes de volver a dibujar en la pantalla. Para crear un bucle de animaci\u00f3n, encadenar varias llamadas a requestAnimationFrame.\r\n\r\n[code lang=\"javascript\"]\r\n(function drawFrame () {\r\n window.requestAnimationFrame(drawFrame, canvas); \r\n\r\n \/\/animation code...\r\n}());\r\n[\/code]\r\n\r\nHemos definido una funci\u00f3n, drawFrame, que contiene el c\u00f3digo de animaci\u00f3n para ejecutar en cada frame. En la primera l\u00ednea en esta funci\u00f3n, hacemos un llamado a window.requestAnimationFrame y pasamos\u00a0una referencia a la misma funci\u00f3n \"drawFrame\"\u00a0que estamos definiendo, el segundo argumento opcional es el elemento canvas que vamos a dibujar.\r\n\r\nCuando ejecutamos la funci\u00f3n drawFrame, window.requestAnimationFrame pone en cola la funci\u00f3n de drawFrame\u00a0para ejecutarse nuevamente\u00a0en el siguiente intervalo de animaci\u00f3n. Cuando\u00a0hacemos que la funci\u00f3n corra de nuevo estamos haciendo un\u00a0bucle. Por lo tanto, cualquier c\u00f3digo que colocamos\u00a0dentro de esta funci\u00f3n se llama una y otra vez.\r\n\r\n[code lang=\"javascript\"]\r\nif (!window.requestAnimationFrame) {\r\nwindow.requestAnimationFrame = (window.webkitRequestAnimationFrame ||\r\nwindow.mozRequestAnimationFrame ||\r\nwindow.oRequestAnimationFrame ||\r\nwindow.msRequestAnimationFrame ||\r\n  function (callback) {\r\n    return window.setTimeout(callback, 1000\/60);\r\n  });\r\n}\r\n[\/code]\r\n\r\nEsta funci\u00f3n verifica si window.requestAnimationFrame esta definida, si no lo esta, verifica con algunas de las funciones para distintas versiones del browsers, si no se puede encontrar una versi\u00f3n especifica se ejecuta la funci\u00f3n setTimeout en un intervalo de 60 fps, un estandar entre los monitores para soportar animaciones.\r\n\r\nY mediante\u00a0este proceso se realizar\u00edan los bucles o loops para realizar nuestras animaciones, en el siguiente post hablaremos del elemento canvas, que justamente lo vemos en este ejemplo.\r\n<p class=\"codepen\" data-height=\"268\" data-theme-id=\"0\" data-slug-hash=\"LvCJx\" data-default-tab=\"result\">See the Pen <a href=\"http:\/\/codepen.io\/jjhoncv\/pen\/LvCJx\/\">LvCJx<\/a> by Jhonnatan (<a href=\"http:\/\/codepen.io\/jjhoncv\">@jjhoncv<\/a>) on <a href=\"http:\/\/codepen.io\">CodePen<\/a>.<\/p>\r\n<script src=\"\/\/codepen.io\/assets\/embed\/ei.js\" async=\"\"><\/script>","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/08\/animacion_loops.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":6,"created_at":"Mon, 04 Aug 2014 14:38:44 +0000","created_by":1,"updated_at":"Thu, 07 Aug 2014 12:19:07 +0000","updated_by":1,"published_at":"Mon, 04 Aug 2014 14:38:44 +0000","published_by":1},{"id":1412,"title":"Conociendo pruebas unitarias en JavaScript","slug":"conociendo-pruebas-unitarias-javascript","markdown":"\nTrabajar con Pruebas unitarias es\u00a0un\u00a0paradigma de desarrollo de software conocido por ser\u00a0potencialmente bueno, nos da muchos beneficios y uno como ejemplo es que en todo lenguaje es saludable poder ponerlo a prueba nuestras funciones y nuestro c\u00f3digo en un entorno de pruebas o mejor dicho donde no afecte nuestro sistema real o proyecto del cual posiblemente muchos usuarios estean us\u00e1ndolo. Una prueba unitaria es una afirmaci\u00f3n que puede entenderse seg\u00fan su contexto o a qu\u00e9 va orientado esta prueba, y pueden ser:\n\n- Manejo de Pruebas\u00a0de Desarrollo\n- Manejo de Pruebas\u00a0de Comportamiento\n- Manejo de Pruebas de Aceptaci\u00f3n\n\n En este caso se explicar\u00e1 sobre lo que\u00a0es el Manejo de Pruebas de Desarrollo o conocido en ingl\u00e9s con las siglas TDD (Test Driven Development). **Flujo de una prueba Unitaria**[![tdd_flow](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/tdd_flow.png)](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/tdd_flow.png) \u00a0 Como puedes ver\u00a0iniciar con el flujo de hacer prueba unitarias sin conocer c\u00f3mo funciona una prueba misma o una suite de pruebas unitarias puede ser estresante, para ello si estas entusiasmado por aprender pero sin morir en el intento se propone ir de a pocos con este flujo alternativo: Haz\u00a0que tu c\u00f3digo funcione depur\u00e1ndolo como normalmente se hace, luego creas tu prueba unitaria, si en caso falle verifica bien c\u00f3mo estas componiendo tu prueba unitaria y si no falla refactorizas tu c\u00f3digo. OJO: Ten en cuenta cuando refactorizas c\u00f3digo debes de volver a ejecutar la prueba unitaria creada para asegurarte que la funcionalidad se mantiene y de a pocos ve adoptando el flujo del mantra del TDD porque mejorar\u00e1 tu nivel de plasmar los escenarios. Para hacer los ejemplos\u00a0se usar\u00e1 este peque\u00f1o m\u00e9todo para hacer una simple prueba: [code lang=\"javascript\"] var test\u00a0= function(description, expression){ \u00a0 \u00a0 \u00a0if(expression === false){ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 throw new Error(description); \u00a0 \u00a0 \u00a0 \u00a0} test.count++; \u00a0 \u00a0 \u00a0 return true; }; test.count = 0; [\/code] **Escenario** Aplicando el flujo alternativo, se tiene la simple\u00a0funci\u00f3n de traer el total de meses del a\u00f1o: [code lang=\"javascript\"] var getTotalMonths = function(){ return 12; }; [\/code] **Como lo validar\u00eda aplicando\u00a0TDD?** Usando el peque\u00f1o m\u00e9todo ser\u00eda: [code lang=\"javascript\"] test(\"Debe retornarme el total de meses del a\u00f1o que es 12\", getTotalMonths() == 12); [\/code] \n","html":"Trabajar con Pruebas unitarias es\u00a0un\u00a0paradigma de desarrollo de software conocido por ser\u00a0potencialmente bueno, nos da muchos beneficios y uno como ejemplo es que en todo lenguaje es saludable poder ponerlo a prueba nuestras funciones y nuestro c\u00f3digo en un entorno de pruebas o mejor dicho donde no afecte nuestro sistema real o proyecto del cual posiblemente muchos usuarios estean us\u00e1ndolo.\r\n\r\nUna prueba unitaria es una afirmaci\u00f3n que puede entenderse seg\u00fan su contexto o a qu\u00e9 va orientado esta prueba, y pueden ser:\r\n<ul>\r\n\t<li>Manejo de Pruebas\u00a0de Desarrollo<\/li>\r\n\t<li>Manejo de Pruebas\u00a0de Comportamiento<\/li>\r\n\t<li>Manejo de Pruebas de Aceptaci\u00f3n<\/li>\r\n<\/ul>\r\nEn este caso se explicar\u00e1 sobre lo que\u00a0es el Manejo de Pruebas de Desarrollo o conocido en ingl\u00e9s con las siglas TDD (Test Driven Development).\r\n\r\n<strong>Flujo de una prueba Unitaria<\/strong>\r\n\r\n<a href=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/tdd_flow.png\"><img class=\"alignnone  wp-image-1449\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/tdd_flow.png\" alt=\"tdd_flow\" width=\"388\" height=\"405\" \/><\/a>\r\n\r\n&nbsp;\r\n\r\nComo puedes ver\u00a0iniciar con el flujo de hacer prueba unitarias sin conocer c\u00f3mo funciona una prueba misma o una suite de pruebas unitarias puede ser estresante, para ello si estas entusiasmado por aprender pero sin morir en el intento se propone ir de a pocos con este flujo alternativo:\r\n\r\nHaz\u00a0que tu c\u00f3digo funcione depur\u00e1ndolo como normalmente se hace, luego creas tu prueba unitaria, si en caso falle verifica bien c\u00f3mo estas componiendo tu prueba unitaria y si no falla refactorizas tu c\u00f3digo.\r\n\r\nOJO: Ten en cuenta cuando refactorizas c\u00f3digo debes de volver a ejecutar la prueba unitaria creada para asegurarte que la funcionalidad se mantiene y de a pocos ve adoptando el flujo del mantra del TDD porque mejorar\u00e1 tu nivel de plasmar los escenarios.\r\n\r\nPara hacer los ejemplos\u00a0se usar\u00e1 este peque\u00f1o m\u00e9todo para hacer una simple prueba:\r\n\r\n[code lang=\"javascript\"]\r\nvar test\u00a0= function(description, expression){\r\n \u00a0 \u00a0 \u00a0if(expression === false){\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 throw new Error(description);\r\n\u00a0 \u00a0 \u00a0 \u00a0}\r\n       test.count++;\r\n\u00a0 \u00a0 \u00a0  return true;\r\n};\r\ntest.count = 0;\r\n[\/code]\r\n\r\n<strong>Escenario<\/strong>\r\n\r\nAplicando el flujo alternativo, se tiene la simple\u00a0funci\u00f3n de traer el total de meses del a\u00f1o:\r\n\r\n[code lang=\"javascript\"]\r\nvar getTotalMonths = function(){\r\n   return 12;\r\n};\r\n[\/code]\r\n\r\n<strong>Como lo validar\u00eda aplicando\u00a0TDD?<\/strong>\r\n\r\nUsando el peque\u00f1o m\u00e9todo ser\u00eda:\r\n\r\n[code lang=\"javascript\"]\r\n   test(&quot;Debe retornarme el total de meses del a\u00f1o que es 12&quot;, getTotalMonths() == 12);\r\n[\/code]\r\n","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":5,"created_at":"Mon, 04 Aug 2014 18:51:11 +0000","created_by":1,"updated_at":"Mon, 04 Aug 2014 18:51:11 +0000","updated_by":1,"published_at":"","published_by":1},{"id":1647,"title":"3 Tips para hacer c\u00f3digo limpio en JavaScript","slug":"3-tips-para-hacer-codigo-limpio-en-javascript","markdown":"\nEstos son 3 tips que se aconseja usar al momento de programar\u00a0en JavaScript. 1. Tabula tu c\u00f3digo 2. Declara tus variables con \"var\" 3. Nombra tus variables de manera entendible\n\n\n","html":"Estos son 3 tips que se aconseja usar al momento de programar\u00a0en JavaScript.\r\n\r\n1. Tabula tu c\u00f3digo\r\n\r\n2. Declara tus variables con \"var\"\r\n\r\n3. Nombra tus variables de manera entendible","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":5,"created_at":"Tue, 05 Aug 2014 11:25:11 +0000","created_by":1,"updated_at":"Tue, 05 Aug 2014 11:25:11 +0000","updated_by":1,"published_at":"","published_by":1},{"id":1650,"title":"Conociendo JavaScript - 1era parte","slug":"conociendo-javascript-1era-parte","markdown":"\nJavaScript es un lenguaje de programaci\u00f3n muy popular, su evoluci\u00f3n y adaptaci\u00f3n a sido tal que actualmente\u00a0existen muchos paradigmas y nuevas adaptaciones del lenguaje como por ejemplo: nodejs -> como lenguaje de programaci\u00f3n en servidor jhonny5-> como lenguaje para uso de hardware en este caso es una adaptaci\u00f3n para dispositivos arduino leapmotion SDK-> como lenguaje para programar con dispositivos leapmotion unity 3D -> Para programaci\u00f3n de juegos en 3D bajo un propio motor de juegos WebRTC-> Como parte del nucleo de windows 8 firefoxOS-> Parte de la base de programaci\u00f3n de aplicaciones m\u00f3viles web-> su entorno natal, y orientado a volverse un aplicacion entera En este caso nos centraremos al poder que tiene en su entorno natal que es la web\n\n\n","html":"JavaScript es un lenguaje de programaci\u00f3n muy popular, su evoluci\u00f3n y adaptaci\u00f3n a sido tal que actualmente\u00a0existen muchos paradigmas y nuevas adaptaciones del lenguaje como por ejemplo:\r\n\r\nnodejs -&gt; como lenguaje de programaci\u00f3n en servidor\r\n\r\njhonny5-&gt; como lenguaje para uso de hardware en este caso es una adaptaci\u00f3n para dispositivos arduino\r\n\r\nleapmotion SDK-&gt; como lenguaje para programar con dispositivos leapmotion\r\n\r\nunity 3D -&gt; Para programaci\u00f3n de juegos en 3D bajo un propio motor de juegos\r\n\r\nWebRTC-&gt; Como parte del nucleo de windows 8\r\n\r\nfirefoxOS-&gt; Parte de la base de programaci\u00f3n de aplicaciones m\u00f3viles\r\n\r\nweb-&gt; su entorno natal, y orientado a volverse un aplicacion entera\r\n\r\nEn este caso nos centraremos al poder que tiene en su entorno natal que es la web","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":5,"created_at":"Tue, 05 Aug 2014 11:43:07 +0000","created_by":1,"updated_at":"Tue, 05 Aug 2014 11:43:07 +0000","updated_by":1,"published_at":"","published_by":1},{"id":1621,"title":"Aprende Expresiones Regulares en espa\u00f1ol (videoTutorial) - Parte 1","slug":"aprender-expresiones-regulares-en-espanol-videotutorial-parte-1","markdown":"\nMuchas veces nos encontramos con situaciones en donde se tiene que validar un campo o hacer un filtro con expresiones regulares y otras situaciones como:\n\n- Validar un campo que s\u00f3lo ingrese n\u00fameros.\n- Validar un correo\n- Realizar filtros de b\u00fasquedas\n- etc ..\n\n Y lo que com\u00fanmente se hace es buscar la expresiones regulares, copiarlas y pegarlas en nuestro c\u00f3digo, dejando de lado lo que significan esos misteriosos s\u00edmbolos que est\u00e1n en la expresi\u00f3n regular. En esta oportunidad aprenderemos por medio de un video-tutorial lo que son estos s\u00edmbolos en las expresiones regulares y de c\u00f3mo entenderlas. Las expresiones regulares que ser\u00e1n explicadas en el video, se detallan a continuaci\u00f3n: <table class=\"cheatsheet\" style=\"height: 177px;\" width=\"790\"><tbody><tr><th colspan=\"2\">Expresiones Regulares<\/th><\/tr><tr><td>.<\/td><td>cualquier car\u00e1cter excepto saltos de linea<\/td><\/tr><tr><td>\\w \\d \\s<\/td><td>palabra, d\u00edgito, espacios en blanco<\/td><\/tr><tr><td>\\W \\D \\S<\/td><td>todo lo que no sea palabra,\u00a0espacios en blanco<\/td><\/tr><tr><td>[abc]<\/td><td>cualquiera que sea\u00a0\"a\" o \"b\", o \"c\"<\/td><\/tr><tr><td>[^abc]<\/td><td>cualquiera que no sea\u00a0\"a\" ni \"b\", ni \"c\"<\/td><\/tr><tr><td>[a-g]<\/td><td>cualquier car\u00e1cter que est\u00e9 entre\u00a0a & g<\/td><\/tr><\/tbody><\/table><iframe allowfullscreen=\"allowfullscreen\" frameborder=\"0\" height=\"415\" src=\"\/\/www.youtube.com\/embed\/iU3YVk0Gmrc\" width=\"100%\"><\/iframe>M\u00e9todos javascript donde se usa expresiones regulares\n-----------------------------------------------------\n\n### Test :\n\n Funci\u00f3n para revisar si la cadena cumple o no con la expresi\u00f3n regular. [code lang=\"javascript\"] var str = 'los buenos tacos son opacos'; console.log(\/o\/g.test(str)); \/\/true [\/code] Explicaci\u00f3n: Evalua en toda la cadena si contiene o no la letra <span class=\"folder\">o<\/span>### Replace :\n\n Funci\u00f3n para reemplazar en la cadena lo que buscamos por un expresi\u00f3n regular y luego reemplazarla. [code lang=\"javascript\"] var str = 'los buenos tacos son opacos'; console.log(str.replace(\/buenos\/g,\u2019malos\u2019)); \/\/los malos tacos son opacos [\/code] Explicaci\u00f3n: Reemplaza en la cadena la palabra <span class=\"folder\">buenos<\/span> por <span class=\"folder\">malos<\/span>### Split :\n\n Funci\u00f3n para dividir una cadena seg\u00fan la expresi\u00f3n regular que indiquemos. [code lang=\"javascript\"] var str = 'los buenos tacos son opacos'; console.log(str.split(\/ \/g)); \/\/[\u201clos\u201d,\u201cbuenos\u201d,\u201ctacos\u201d, \u201cson\u201d,\u201dopacos\u201d] [\/code] Explicaci\u00f3n: Divide la cadena cada vez que se encuentre un <span class=\"folder\">espacio en blanco<\/span>### Match :\n\n Funci\u00f3n para buscar en una cadena por medio de una expresi\u00f3n regular. [code lang=\"javascript\"] var str = 'los buenos tacos son opacos'; console.log(str.match(\/o\/g)); \/\/[\"o\", \"o\", \"o\", \"o\", \"o\", \"o\"] [\/code] Explicaci\u00f3n: Busca en la cadena todas las letras <span class=\"folder\">o<\/span>**M\u00e1s adelante seguiremos explicando sobre este tema**\n","html":"Muchas veces nos encontramos con situaciones en donde se tiene que validar un campo o hacer un filtro con expresiones regulares y otras situaciones como:\r\n<ul>\r\n\t<li>Validar un campo que s\u00f3lo ingrese n\u00fameros.<\/li>\r\n\t<li>Validar un correo<\/li>\r\n\t<li>Realizar filtros de b\u00fasquedas<\/li>\r\n\t<li>etc ..<\/li>\r\n<\/ul>\r\nY lo que com\u00fanmente se hace es buscar la expresiones regulares, copiarlas y pegarlas en nuestro c\u00f3digo, dejando de lado lo que significan esos misteriosos s\u00edmbolos que est\u00e1n en la expresi\u00f3n regular.\r\n\r\nEn esta oportunidad aprenderemos por medio de un video-tutorial lo que son estos s\u00edmbolos en las expresiones regulares y de c\u00f3mo entenderlas.\r\n\r\nLas expresiones regulares que ser\u00e1n explicadas en el video, se detallan a continuaci\u00f3n:\r\n<table class=\"cheatsheet\" style=\"height: 177px;\" width=\"790\">\r\n<tbody>\r\n<tr>\r\n<th colspan=\"2\">Expresiones Regulares<\/th>\r\n<\/tr>\r\n<tr>\r\n<td>.<\/td>\r\n<td>cualquier car\u00e1cter excepto saltos de linea<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>\\w \\d \\s<\/td>\r\n<td>palabra, d\u00edgito, espacios en blanco<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>\\W \\D \\S<\/td>\r\n<td>todo lo que no sea palabra,\u00a0espacios en blanco<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>[abc]<\/td>\r\n<td>cualquiera que sea\u00a0\"a\" o \"b\", o \"c\"<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>[^abc]<\/td>\r\n<td>cualquiera que no sea\u00a0\"a\" ni \"b\", ni \"c\"<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>[a-g]<\/td>\r\n<td>cualquier car\u00e1cter que est\u00e9 entre\u00a0a &amp; g<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<iframe src=\"\/\/www.youtube.com\/embed\/iU3YVk0Gmrc\" width=\"100%\" height=\"415\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"><\/iframe>\r\n<h2>M\u00e9todos javascript donde se usa expresiones regulares<\/h2>\r\n<h3 style=\"margin:0\">Test :<\/h3>\r\nFunci\u00f3n para revisar si la cadena cumple o no con la expresi\u00f3n regular.\r\n\r\n[code lang=\"javascript\"]\r\nvar str = 'los buenos tacos son opacos';\r\nconsole.log(\/o\/g.test(str));\r\n\/\/true\r\n[\/code]\r\nExplicaci\u00f3n: Evalua en toda la cadena si contiene o no la letra <span class=\"folder\">o<\/span>\r\n\r\n<h3 style=\"margin:0\">Replace :<\/h3>\r\nFunci\u00f3n para reemplazar en la cadena lo que buscamos por un expresi\u00f3n regular y luego reemplazarla.\r\n\r\n[code lang=\"javascript\"]\r\nvar str = 'los buenos tacos son opacos';\r\nconsole.log(str.replace(\/buenos\/g,\u2019malos\u2019));\r\n\/\/los malos tacos son opacos\r\n[\/code]\r\nExplicaci\u00f3n: Reemplaza en la cadena la palabra <span class=\"folder\">buenos<\/span> por <span class=\"folder\">malos<\/span>\r\n\r\n<h3 style=\"margin:0\">Split :<\/h3>\r\nFunci\u00f3n para dividir una cadena seg\u00fan la expresi\u00f3n regular que indiquemos.\r\n\r\n[code lang=\"javascript\"]\r\nvar str = 'los buenos tacos son opacos';\r\nconsole.log(str.split(\/ \/g));\r\n\/\/[\u201clos\u201d,\u201cbuenos\u201d,\u201ctacos\u201d, \u201cson\u201d,\u201dopacos\u201d]\r\n[\/code]\r\nExplicaci\u00f3n: Divide la cadena cada vez que se encuentre un <span class=\"folder\">espacio en blanco<\/span>\r\n\r\n<h3 style=\"margin:0\">Match :<\/h3>\r\nFunci\u00f3n para buscar en una cadena por medio de una expresi\u00f3n regular.\r\n\r\n[code lang=\"javascript\"]\r\nvar str = 'los buenos tacos son opacos';\r\nconsole.log(str.match(\/o\/g));\r\n\/\/[&quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;] \r\n[\/code]\r\nExplicaci\u00f3n: Busca en la cadena todas las letras <span class=\"folder\">o<\/span>\r\n\r\n<b>M\u00e1s adelante seguiremos explicando sobre este tema<\/b>","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/regex1.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":7,"created_at":"Fri, 08 Aug 2014 11:00:18 +0000","created_by":1,"updated_at":"Fri, 08 Aug 2014 12:31:21 +0000","updated_by":1,"published_at":"Fri, 08 Aug 2014 11:00:18 +0000","published_by":1},{"id":1463,"title":"Tutorial B\u00e1sico de Python \u2013 Parte V : Funciones B\u00e1sicas","slug":"tutorial-basico-de-python-parte-v-objetos-de-python","markdown":"\nSiguiendo con los tutoriales de python, hoy veremos con m\u00e1s profundidad los diccionarios, listas y cadenas. Puesto que en el [tutorial anterior hablamos de la programaci\u00f3n orientada a objetos](http:\/\/frontend-labs.com\/1305--tutorial-basico-de-python-parte-iv-programacion-orientada-a-objetos \"Tutorial B\u00e1sico de Python \u2013 Parte IV : Programaci\u00f3n orientada a objetos\"),\u00a0ya estamos en el nivel de profundizar m\u00e1s en lo que son los objetos b\u00e1sicos que tiene python para entender las distintas maneras de poder manipular elementos de colecci\u00f3n o cadenas. En mi opini\u00f3n es importante presentar estas funciones ya que ayuda mucho al momento de programar en python. Para python tanto las cadenas y tuplas tienen ciertas caracteristicas parecidas. Por el hecho que son iterables e inmutables, es decir pueden ser utilizadas en un bucles para recorrer sus elementos (en el caso de las cadenas se itera sus car\u00e1cteres) y estas no pueden se modificadas.\n\n### Cadenas\n\n Declaramos la cadena a probar [sourcecode language=\"python\"] cadena = 'hola mundo!' [\/sourcecode] **C.endswith(str)** [sourcecode language=\"python\"] cadena.endswith('!') # True cadena.endswith('o!') # True [\/sourcecode] **C.find(str)**, devuelve el indice de la primera incidencia encontrada. Si no lo encuentra devuelve -1. [sourcecode language=\"python\"] cadena.find('H') # 0 cadena.find('o!') # 10 cadena.find('op') # -1 [\/sourcecode] **C.isalnum()**, Verifica que la cadena sea alfanumerica [sourcecode language=\"python\"] cadena.isalnum() # False 'abc123'.isalnum() # True 'abc'.isalnum() # True '123'.isalnum() # True [\/sourcecode] **C.isalpha()**, Verifica que la cadena sea alfab\u00e9tica. [sourcecode language=\"python\"] cadena.isalpha() # False 'abc123'.isalpha() # False 'abc'.isalpha() # True '123'.isalpha() # False [\/sourcecode] **C.isdigit()**, Verifica que la cadena es un digito. [sourcecode language=\"python\"] cadena.isdigit() # False 'abc123'.isdigit() # False 'abc'.isdigit() # False '123'.isdigit() # True [\/sourcecode] De la misma manera python tiene mas funciones como \"isupper()\", para verificar si toda la cadena esta en may\u00fasculas; \"islower()\", para constatar que toda la cadena esta en min\u00fascula; \"istitle(), verifica que tenga el formato de un titulo\" y finalmente \"isspace()\", valida que la cadena enviada contenga solo espacios. **C.count(str)**, esat funci\u00f3n de python cuenta el numero de veces que se repite un caracter en especifico. [sourcecode language=\"python\"] cadena.count('!') # 1 cadena.count('o') # 2 cadena.count('z') # 0 [\/sourcecode] **C.join(str)**, devuelve una cadena de texto concatenada. [sourcecode language=\"python\"] ','.join('123') # 1,2,3 '-'.join('abc') # a-b-c [\/sourcecode] **C.split(sep)**, devuelve una lista la cual es divida por la cadena sep. En caso que no se pueda dividir devuelve la lista con un solo elemento. [sourcecode language=\"python\"] 'a-b-c'.split('-') # ['a', 'b', 'c'] '1, 2, 3'.split(',') # ['1', '2', '3'] 'a-b-c'.split('z') # ['a-b-c'] [\/sourcecode] **C.replace(old, new)**, devuelve el remplazo de la cadena old a new de la cadena C. [sourcecode language=\"python\"] cadena.replace('!', '?') # hola mundo? [\/sourcecode] ### Listas\n\n Declaramos una lista seg\u00fan la sintaxis aprendida en tutoriales anteriores. [sourcecode language=\"python\"] lista = list() [\/sourcecode] **L.append(item)**, agrega un item a la lista. [sourcecode language=\"python\"] lista.append('a') print lista # ['a'] [\/sourcecode] **L.extend(element)**, agrega los elementos a las listas. [sourcecode language=\"python\"] lista.extend('b') print lista # ['a', 'b'] [\/sourcecode] Seguro dir\u00e1n que \"extend\" trabaja igual que \"append\", pues no, no es asi. Analizemos, \u00bfQu\u00e9 pasaria si... le env\u00edo como par\u00e1metro una lista? Observemos [sourcecode language=\"python\"] nueva_lista = ['y', 'z'] lista.extend(nueva_lista) print lista # ['a', 'b', 'y', 'z'] lista.append(nueva_lista) print lista # ['a', 'b', 'y', 'z', ['y', 'z']] [\/sourcecode] Si logran apreciar detalladamente, entender\u00e1n que al usar la funci\u00f3n **extend** lo que logramos es a\u00f1adir los elementos de la **nueva_lista** a la **lista** que tenemos actualmente. Sin embargo al usar la funci\u00f3n **append** a\u00f1adimos la **nueva_lista** a la **lista** que tenemos actualmente. Para que quede claro la diferencia entre estas dos funciones agregaremos la cadena 'item' y veamos que sucede. [sourcecode language=\"python\"] lista.extend('item') print lista # ['a', 'b', 'y', 'z', ['y', 'z'], 'i', 't', 'e', 'm'] lista.append(nueva_lista) print lista # ['a', 'b', 'y', 'z', ['y', 'z'], 'i', 't', 'e', 'm', 'item'] [\/sourcecode] La funci\u00f3n **extend** toma la cadena y lo itera como si fuera una lista. Mientras que **append** solo a\u00f1ade la palabra. **L.insert(pos, item)**, Inserta a la lista el item en la posicion indicada. [sourcecode language=\"python\"] lista.insert(0, 'primer_elemento') print lista # ['primer_elemento', 'a', 'b', 'y', 'z', ['y', 'z'], 'i', 't', 'e', 'm'] [\/sourcecode] **L.pop(index)**, devuelve el valor que se encuentra en ese indice y luego elimina dicho elemento de la lista. [sourcecode language=\"python\"] elemento_retornado = lista.pop(0) print lista # ['a', 'b', 'y', 'z', ['y', 'z'], 'i', 't', 'e', 'm'] print elemento_retornado # 'primer_elemento' [\/sourcecode] **L.reverse()**, invierte la lista que invoca esta funci\u00f3n. [sourcecode language=\"python\"] lista.reverse() print lista # ['m', 'e', 't', 'i', ['y', 'z'], 'z', 'y', 'b', 'a'] print elemento_retornado # 'primer_elemento' [\/sourcecode] **L.sort(cmp=None, key=None, reverse=False)**, se encarga de ordenar la lista. [sourcecode language=\"python\"] lista.sort() print lista # [['y', 'z'], 'a', 'b', 'e', 'i', 'm', 't', 'y', 'z'] lista.sort(reverse=True) print lista # ['z', 'y', 't', 'm', 'i', 'e', 'b', 'a', ['y', 'z']] [\/sourcecode] El par\u00e1metro **cmp** debe ser una funci\u00f3n el cual reciba como par\u00e1metro dos valores x e y de la lista y que retorne -1 si x es menor que y, 0 si son iguales y 1 si x es mayor que y. Finalmente, el par\u00e1metro **key** debe ser una funci\u00f3n que tome un elemento de la lista y devuelva el elemento suplente que sera utilizado para evaluar los elements de la lista. ### Diccionarios\n\n Declaramos el diccionario a utilizar [sourcecode language=\"python\"] diccionario = {'key_a':'value_1', 'key_b': 'value_2'} [\/sourcecode] **D.get(key)**, sirve para obtener el valor de una elemento en especifico usando su key como intermediario. [sourcecode language=\"python\"] print diccionario.get('key_a') 'value_1' [\/sourcecode] Esto funciona muy similar a esto : \"diccionario['key_a']\". Esto devolveria lo mismo que la funciona antes mencionada. Entonces.. \u00bfCu\u00e1l es la diferencia? La diferencia esta en que la funci\u00f3n get puede obtener un valor por defecto para el valor buscado. [sourcecode language=\"python\"] print diccionario.get('key_c', 'no tengo este valor') 'no tengo este valor' # mientras que con el otro print diccionario['key_c'] Traceback (most recent call last): File \"<stdin>\", line 1, in <module> KeyError: 'key_c' [\/sourcecode] **D.has_key(key)**, Devuelve un boolean indicando si la llave se encuentra en dicho diccionario. Es lo mismo que indicar \" 'element' in diccionario \". [sourcecode language=\"python\"] print diccionario.has_key('key_a') # True print diccionario.has_key('value_1') # False print 'key_a' in diccionario # True [\/sourcecode] **D.items()**, esta funci\u00f3n nos devuelve una lista de tuplas con los elementos del diccionario en pares de clave-valor. [sourcecode language=\"python\"] print diccionario.items() # [('key_a', 'value_1'), ('key_b', 'value_2')] [\/sourcecode] **D.keys()**, devuelve una lista con todas las llaves del diccionario. [sourcecode language=\"python\"] print diccionario.keys() # ['key_a', 'key_b'] [\/sourcecode] **D.values()**, devuelve una lista con todas las valores del diccionario. [sourcecode language=\"python\"] print diccionario.keys() # ['value_1', 'value_2'] [\/sourcecode] **D.pop(key)**, devuelve el valor de la llave y lo elimina del diccionario [sourcecode language=\"python\"] valor = diccionario.pop('key_a') print diccionario # {'key_b': 'value_2'} print valor # 'value_1' # Podemos agregar un mensaje si no se encuentre la llave valor = diccionario.pop('key_c', 'no se encuentra') print valor # no se encuentra print diccionario # {'key_b': 'value_2'} [\/sourcecode] Esto ha aqui ha llegado el tutorial de python de hoy. Espero que les sea de utilidad. En todo caso si desean profundizar en el tema pueden visitar la [documentaci\u00f3n oficial de python](https:\/\/docs.python.org\/2\/tutorial\/datastructures.html \"Data Structures\") donde explica a detalle estas estructuras. Para el pr\u00f3ximo tutorial de pyhton en espa\u00f1ol hablaremos de la programaci\u00f3n funcional, un tema muy interesante ya que aprenderemos como podemos comprimir listas en python.\n","html":"Siguiendo con los tutoriales de python, hoy veremos con m\u00e1s profundidad los diccionarios, listas y cadenas. Puesto que en el <a title=\"Tutorial B\u00e1sico de Python \u2013 Parte IV : Programaci\u00f3n orientada a objetos\" href=\"http:\/\/frontend-labs.com\/1305--tutorial-basico-de-python-parte-iv-programacion-orientada-a-objetos\" target=\"_blank\">tutorial anterior hablamos de la programaci\u00f3n orientada a objetos<\/a>,\u00a0ya estamos en el nivel de profundizar m\u00e1s en lo que son los objetos b\u00e1sicos que tiene python para entender las distintas maneras de poder manipular elementos de colecci\u00f3n o cadenas. En mi opini\u00f3n es importante presentar estas funciones ya que ayuda mucho al momento de programar en python.\r\n\r\nPara python tanto las cadenas y tuplas tienen ciertas caracteristicas parecidas. Por el hecho que son iterables e inmutables, es decir pueden ser utilizadas en un bucles para recorrer sus elementos (en el caso de las cadenas se itera sus car\u00e1cteres) y estas no pueden se modificadas.\r\n<h3>Cadenas<\/h3>\r\nDeclaramos la cadena a probar\r\n\r\n[sourcecode language=\"python\"]\r\ncadena = 'hola mundo!'\r\n[\/sourcecode]\r\n\r\n<strong>C.endswith(str)<\/strong>\r\n\r\n[sourcecode language=\"python\"]\r\ncadena.endswith('!')\r\n# True\r\ncadena.endswith('o!')\r\n# True\r\n[\/sourcecode]\r\n\r\n<strong>C.find(str)<\/strong>, devuelve el indice de la primera incidencia encontrada. Si no lo encuentra devuelve -1.\r\n\r\n[sourcecode language=\"python\"]\r\ncadena.find('H')\r\n# 0\r\ncadena.find('o!')\r\n# 10\r\ncadena.find('op')\r\n# -1\r\n[\/sourcecode]\r\n\r\n<strong>C.isalnum()<\/strong>, Verifica que la cadena sea alfanumerica\r\n\r\n[sourcecode language=\"python\"]\r\ncadena.isalnum()\r\n# False\r\n\r\n'abc123'.isalnum()\r\n# True\r\n\r\n'abc'.isalnum()\r\n# True\r\n\r\n'123'.isalnum()\r\n# True\r\n[\/sourcecode]\r\n\r\n<strong>C.isalpha()<\/strong>, Verifica que la cadena sea alfab\u00e9tica.\r\n\r\n[sourcecode language=\"python\"]\r\ncadena.isalpha()\r\n# False\r\n\r\n'abc123'.isalpha()\r\n# False\r\n\r\n'abc'.isalpha()\r\n# True\r\n\r\n'123'.isalpha()\r\n# False\r\n[\/sourcecode]\r\n\r\n<strong>C.isdigit()<\/strong>, Verifica que la cadena es un digito.\r\n\r\n[sourcecode language=\"python\"]\r\ncadena.isdigit()\r\n# False\r\n\r\n'abc123'.isdigit()\r\n# False\r\n\r\n'abc'.isdigit()\r\n# False\r\n\r\n'123'.isdigit()\r\n# True\r\n[\/sourcecode]\r\n\r\nDe la misma manera python tiene mas funciones como \"isupper()\", para verificar si toda la cadena esta en may\u00fasculas; \"islower()\", para constatar que toda la cadena esta en min\u00fascula; \"istitle(), verifica que tenga el formato de un titulo\" y finalmente \"isspace()\", valida que la cadena enviada contenga solo espacios.\r\n\r\n<strong>C.count(str)<\/strong>, esat funci\u00f3n de python cuenta el numero de veces que se repite un caracter en especifico.\r\n\r\n[sourcecode language=\"python\"]\r\ncadena.count('!')\r\n# 1\r\n\r\ncadena.count('o')\r\n# 2\r\n\r\ncadena.count('z')\r\n# 0\r\n[\/sourcecode]\r\n\r\n<strong>C.join(str)<\/strong>, devuelve una cadena de texto concatenada.\r\n\r\n[sourcecode language=\"python\"]\r\n','.join('123')\r\n# 1,2,3\r\n\r\n'-'.join('abc')\r\n# a-b-c\r\n[\/sourcecode]\r\n\r\n<strong>C.split(sep)<\/strong>, devuelve una lista la cual es divida por la cadena sep. En caso que no se pueda dividir devuelve la lista con un solo elemento.\r\n\r\n[sourcecode language=\"python\"]\r\n'a-b-c'.split('-')\r\n# ['a', 'b', 'c']\r\n\r\n'1, 2, 3'.split(',')\r\n# ['1', '2', '3']\r\n\r\n'a-b-c'.split('z')\r\n# ['a-b-c']\r\n[\/sourcecode]\r\n\r\n<strong>C.replace(old, new)<\/strong>, devuelve el remplazo de la cadena old a new de la cadena C.\r\n\r\n[sourcecode language=\"python\"]\r\ncadena.replace('!', '?')\r\n# hola mundo?\r\n[\/sourcecode]\r\n\r\n<h3>Listas<\/h3>\r\nDeclaramos una lista seg\u00fan la sintaxis aprendida en tutoriales anteriores.\r\n\r\n[sourcecode language=\"python\"]\r\nlista = list()\r\n[\/sourcecode]\r\n\r\n<strong>L.append(item)<\/strong>, agrega un item a la lista.\r\n\r\n[sourcecode language=\"python\"]\r\nlista.append('a')\r\nprint lista\r\n# ['a']\r\n[\/sourcecode]\r\n\r\n<strong>L.extend(element)<\/strong>, agrega los elementos a las listas.\r\n\r\n[sourcecode language=\"python\"]\r\nlista.extend('b')\r\nprint lista\r\n# ['a', 'b']\r\n[\/sourcecode]\r\n\r\nSeguro dir\u00e1n que \"extend\" trabaja igual que \"append\", pues no, no es asi. Analizemos, \u00bfQu\u00e9 pasaria si... le env\u00edo como par\u00e1metro una lista? Observemos\r\n\r\n[sourcecode language=\"python\"]\r\nnueva_lista = ['y', 'z']\r\nlista.extend(nueva_lista)\r\nprint lista\r\n# ['a', 'b', 'y', 'z']\r\n\r\nlista.append(nueva_lista)\r\nprint lista\r\n# ['a', 'b', 'y', 'z', ['y', 'z']]\r\n[\/sourcecode]\r\n\r\nSi logran apreciar detalladamente, entender\u00e1n que al usar la funci\u00f3n <strong>extend<\/strong> lo que logramos es a\u00f1adir los elementos de la <strong>nueva_lista<\/strong> a la <strong>lista<\/strong> que tenemos actualmente. Sin embargo al usar la funci\u00f3n <strong>append<\/strong> a\u00f1adimos la <strong>nueva_lista<\/strong> a la <strong>lista<\/strong> que tenemos actualmente.\r\n\r\nPara que quede claro la diferencia entre estas dos funciones agregaremos la cadena 'item' y veamos que sucede.\r\n\r\n[sourcecode language=\"python\"]\r\nlista.extend('item')\r\nprint lista\r\n# ['a', 'b', 'y', 'z', ['y', 'z'], 'i', 't', 'e', 'm']\r\n\r\nlista.append(nueva_lista)\r\nprint lista\r\n# ['a', 'b', 'y', 'z', ['y', 'z'], 'i', 't', 'e', 'm', 'item']\r\n[\/sourcecode]\r\n\r\nLa funci\u00f3n <strong>extend<\/strong> toma la cadena y lo itera como si fuera una lista. Mientras que <strong>append<\/strong> solo a\u00f1ade la palabra.\r\n\r\n<strong>L.insert(pos, item)<\/strong>, Inserta a la lista el item en la posicion indicada.\r\n\r\n[sourcecode language=\"python\"]\r\nlista.insert(0, 'primer_elemento')\r\nprint lista\r\n# ['primer_elemento', 'a', 'b', 'y', 'z', ['y', 'z'], 'i', 't', 'e', 'm']\r\n[\/sourcecode]\r\n\r\n<strong>L.pop(index)<\/strong>, devuelve el valor que se encuentra en ese indice y luego elimina dicho elemento de la lista.\r\n\r\n[sourcecode language=\"python\"]\r\nelemento_retornado = lista.pop(0)\r\n\r\nprint lista\r\n# ['a', 'b', 'y', 'z', ['y', 'z'], 'i', 't', 'e', 'm']\r\n\r\nprint elemento_retornado\r\n# 'primer_elemento'\r\n[\/sourcecode]\r\n\r\n<strong>L.reverse()<\/strong>, invierte la lista que invoca esta funci\u00f3n.\r\n\r\n[sourcecode language=\"python\"]\r\nlista.reverse()\r\nprint lista\r\n# ['m', 'e', 't', 'i', ['y', 'z'], 'z', 'y', 'b', 'a']\r\nprint elemento_retornado\r\n# 'primer_elemento'\r\n[\/sourcecode]\r\n\r\n<strong>L.sort(cmp=None, key=None, reverse=False)<\/strong>, se encarga de ordenar la lista.\r\n\r\n[sourcecode language=\"python\"]\r\nlista.sort()\r\nprint lista\r\n# [['y', 'z'], 'a', 'b', 'e', 'i', 'm', 't', 'y', 'z']\r\n\r\nlista.sort(reverse=True)\r\nprint lista\r\n# ['z', 'y', 't', 'm', 'i', 'e', 'b', 'a', ['y', 'z']]\r\n[\/sourcecode]\r\n\r\nEl par\u00e1metro <strong>cmp<\/strong> debe ser una funci\u00f3n el cual reciba como par\u00e1metro dos valores x e y de la lista y que retorne -1 si x es menor que y, 0 si son iguales y 1 si x es mayor que y.\r\n\r\nFinalmente, el par\u00e1metro <strong>key<\/strong> debe ser una funci\u00f3n que tome un elemento de la lista y devuelva el elemento suplente que sera utilizado para evaluar los elements de la lista.\r\n<h3>Diccionarios<\/h3>\r\nDeclaramos el diccionario a utilizar\r\n\r\n[sourcecode language=\"python\"]\r\ndiccionario = {'key_a':'value_1', 'key_b': 'value_2'}\r\n[\/sourcecode]\r\n\r\n<strong>D.get(key)<\/strong>, sirve para obtener el valor de una elemento en especifico usando su key como intermediario.\r\n\r\n[sourcecode language=\"python\"]\r\nprint diccionario.get('key_a')\r\n'value_1'\r\n[\/sourcecode]\r\n\r\nEsto funciona muy similar a esto : \"diccionario['key_a']\". Esto devolveria lo mismo que la funciona antes mencionada. Entonces.. \u00bfCu\u00e1l es la diferencia? La diferencia esta en que la funci\u00f3n get puede obtener un valor por defecto para el valor buscado.\r\n\r\n[sourcecode language=\"python\"]\r\nprint diccionario.get('key_c', 'no tengo este valor')\r\n'no tengo este valor'\r\n\r\n# mientras que con el otro\r\nprint diccionario['key_c']\r\nTraceback (most recent call last):\r\n  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;\r\nKeyError: 'key_c'\r\n[\/sourcecode]\r\n\r\n<strong>D.has_key(key)<\/strong>, Devuelve un boolean indicando si la llave se encuentra en dicho diccionario. Es lo mismo que indicar \" 'element' in diccionario \".\r\n\r\n[sourcecode language=\"python\"]\r\nprint diccionario.has_key('key_a')\r\n# True\r\n\r\nprint diccionario.has_key('value_1')\r\n# False\r\n\r\nprint 'key_a' in diccionario\r\n# True\r\n[\/sourcecode]\r\n\r\n<strong>D.items()<\/strong>, esta funci\u00f3n nos devuelve una lista de tuplas con los elementos del diccionario en pares de clave-valor.\r\n\r\n[sourcecode language=\"python\"]\r\nprint diccionario.items()\r\n# [('key_a', 'value_1'), ('key_b', 'value_2')]\r\n[\/sourcecode]\r\n\r\n<strong>D.keys()<\/strong>, devuelve una lista con todas las llaves del diccionario.\r\n\r\n[sourcecode language=\"python\"]\r\nprint diccionario.keys()\r\n# ['key_a', 'key_b']\r\n[\/sourcecode]\r\n\r\n<strong>D.values()<\/strong>, devuelve una lista con todas las valores del diccionario.\r\n\r\n[sourcecode language=\"python\"]\r\nprint diccionario.keys()\r\n# ['value_1', 'value_2']\r\n[\/sourcecode]\r\n\r\n<strong>D.pop(key)<\/strong>, devuelve el valor de la llave y lo elimina del diccionario\r\n\r\n[sourcecode language=\"python\"]\r\nvalor = diccionario.pop('key_a')\r\n\r\nprint diccionario\r\n# {'key_b': 'value_2'}\r\n\r\nprint valor\r\n# 'value_1'\r\n\r\n# Podemos agregar un mensaje si no se encuentre la llave\r\nvalor = diccionario.pop('key_c', 'no se encuentra')\r\nprint valor\r\n# no se encuentra\r\n\r\nprint diccionario\r\n# {'key_b': 'value_2'}\r\n[\/sourcecode]\r\n\r\nEsto ha aqui ha llegado el tutorial de python de hoy. Espero que les sea de utilidad. En todo caso si desean profundizar en el tema pueden visitar la <a title=\"Data Structures\" href=\"https:\/\/docs.python.org\/2\/tutorial\/datastructures.html\" target=\"_blank\">documentaci\u00f3n oficial de python<\/a> donde explica a detalle estas estructuras. Para el pr\u00f3ximo tutorial de pyhton en espa\u00f1ol hablaremos de la programaci\u00f3n funcional, un tema muy interesante ya que aprenderemos como podemos comprimir listas en python.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/07\/python_3.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Fri, 08 Aug 2014 12:00:50 +0000","created_by":1,"updated_at":"Fri, 08 Aug 2014 12:28:57 +0000","updated_by":1,"published_at":"Fri, 08 Aug 2014 12:00:50 +0000","published_by":1},{"id":1672,"title":"(no title)","slug":"temp-slug-39","markdown":"\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Este es el Portal OferTOP.pe de propiedad de OFERTOP S.A.C., con domicilio en Jr. Gonzales Olaechea 446-448, San Isidro, Lima, (en adelante OFERTOP), y los siguientes son los T\u00e9rminos y Condiciones de Uso que regulan el acceso y uso de este Portal (en adelante \u201cel sitio\u201d) y, en general, la relaci\u00f3n entre OFERTOP y los USUARIOS del sitio, sin perjuicio de otras condiciones e instrucciones particulares o espec\u00edficas que OFERTOP comunique adecuadamente a los usuarios.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">La utilizaci\u00f3n del sitio atribuye la condici\u00f3n de USUARIO del mismo, e implica la aceptaci\u00f3n plena y sin reservas de todas y cada una de las disposiciones incluidas en estos T\u00e9rminos y Condiciones, siendo obligaci\u00f3n del USUARIO leer atentamente los T\u00e9rminos y Condiciones antes de hacer uso del sitio y de su contenido.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Al comunicarte con este sitio Web, las pol\u00edticas y normas detalladas a continuaci\u00f3n, se consideran aceptadas.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**1.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En la p\u00e1gina web www.OFERTOP.pe se ofrecen cupones sobre prestaciones o sobre mercanc\u00edas de otras empresas (\u201cLos socios\u201d). Emitentes de los cupones y deudores de las prestaciones o mercanc\u00edas indicadas en los cupones son exclusivamente los respectivos socios, los cuales realizan esas prestaciones con arreglo a sus respectivas Condiciones Generales de Contrataci\u00f3n. OFERTOP misma no adeuda la realizaci\u00f3n de las prestaciones indicadas en los cupones ni la entrega de las mercanc\u00edas indicadas en los mismos, sino que el cup\u00f3n le concede al usuario \u00fanicamente un derecho a que el socio o los socios realicen la prestaci\u00f3n. Para la utilizaci\u00f3n del servicio de OFERTOP rigen \u00fanica y exclusivamente los siguientes t\u00e9rminos y condiciones de uso. Los cupones vendidos por OFERTOP no est\u00e1n dirigidos a una prestaci\u00f3n concreta (cup\u00f3n de acontecimiento) ni a una mercanc\u00eda concreta (cup\u00f3n de mercanc\u00eda) ni a un valor de prestaci\u00f3n o mercanc\u00eda concretos (cup\u00f3n de valor). En caso que el socio o los socios hubieran fijado sus propios t\u00e9rminos y condiciones para los actos y contratos que realice en este sitio, ellas aparecer\u00e1n en esta p\u00e1gina se\u00f1alada con un link o indicada como parte de la promoci\u00f3n de sus ofertas y promociones y se entender\u00e1n como complementarias a estas.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**2.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0La p\u00e1gina web www.OFERTOP.com.pe as\u00ed como el sistema de venta de cupones en dicha p\u00e1gina son gestionados por:<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">OFERTOP SAC Jr. Gonz\u00e1les Olaechea 446-448, San Isidro Lima \u2013 Per\u00fa Tel\u00e9fono: 3-115-115 E-mail:\u00a0<\/span><\/span>[<span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">clientes@ofertop.pe<\/span><\/span><\/span>](mailto:clientes@ofertop.pe)<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**3.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Ya sea mediante confirmaci\u00f3n del correspondiente campo en el proceso de pedido, o bien si el usuario hace uso efectivo del servicio, quedar\u00e1n aceptadas las condiciones de uso de OFERTOP. En tal caso, Usted reconoce que nosotros - OFERTOP - consideremos el uso de nuestro servicio como reconocimiento de las condiciones de uso. Estas condiciones de uso podr\u00e1n ser consultadas, impresas o grabadas localmente en cualquier momento bajo http:\/\/www.OFERTOP.pe\/terminos y condiciones.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">4. Los cupones s\u00f3lo est\u00e1n disponibles para personas que tengan capacidad legal para contratar (mayores de 18 a\u00f1os de edad seg\u00fan la ley peruana). No podr\u00e1n adquirir los cupones las personas que no tengan esa capacidad y los menores de edad. Los actos que \u00e9stos realicen en el sitio ser\u00e1n responsabilidad de sus padres, tutores, encargados o curadores, y por tanto se considerar\u00e1n realizados por \u00e9stos en ejercicio de la representaci\u00f3n legal con la que cuentan.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**5.\u00a0**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Para adquirir los cupones ofrecidos en el sitio, los usuarios registrados deber\u00e1n facilitar determinados datos de car\u00e1cter personal. Su informaci\u00f3n personal se procesa y almacena en servidores o medios magn\u00e9ticos que mantienen altos est\u00e1ndares de seguridad y protecci\u00f3n tanto f\u00edsica como tecnol\u00f3gica.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">OFERTOP garantiza la confidencialidad de los datos suministrados por los usuarios de acuerdo con las normas legales aplicables e informa acerca del uso que OFERTOP har\u00e1 de los datos de car\u00e1cter personal que proporcionen los usuarios, para que los mismos determinen libre y voluntariamente si desean suministrar a la OFERTOP sus datos personales, en cualquier forma y a trav\u00e9s de cualquier medio.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">De conformidad con la Ley N\u00b0 29733, Ley de Protecci\u00f3n de Datos Personales, desde el momento de su ingreso y\/o utilizaci\u00f3n al sitio el usuario da expresamente su consentimiento para el tratamiento de los datos personales que por el sean facilitados o que se faciliten a trav\u00e9s de su ingreso al portal o por cualquier medio. Asimismo, el usuario consiente expresamente que OFERTOP\u00a0 pueda ceder los datos personales, a terceros en los t\u00e9rminos y condiciones se\u00f1alados en esta p\u00e1gina.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Los datos personales ser\u00e1n incorporados a la base de datos de titularidad de OFERTOP. Estos datos ser\u00e1n utilizados en la gesti\u00f3n administrativa y comercial de la petici\u00f3n de los usuarios.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Los datos se mantendr\u00e1n en la base de datos mientras se consideren \u00fatiles con el fin que OFERTOP pueda prestar y ofrecer sus servicios y darles tr\u00e1mite, enviarle informaci\u00f3n y publicidad sobre las ofertas, promociones y recomendaciones de OFERTOP.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">En cuanto entre en vigencia las disposiciones pertinentes de la Ley de Protecci\u00f3n de Datos Personales, al usuario le asiste de ejercer los derechos de acceso, rectificaci\u00f3n, oposici\u00f3n y cancelaci\u00f3n de los datos personales, los cuales podr\u00e1 ejercer mediante la opci\u00f3n de contacto que ponemos a su disposici\u00f3n en esta p\u00e1gina. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">** 6.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0OFERTOP podr\u00e1 modificar estos t\u00e9rminos y condiciones de uso, por ejemplo, para poner en pr\u00e1ctica cambios en la legislaci\u00f3n peruana o tener en cuenta modificaciones sobre su\u00a0 funcionamiento o sobre pol\u00edticas de atenci\u00f3n. El usuario encontrar\u00e1 las condiciones de uso vigentes en cada momento bajo http:\/\/www.OFERTOP.pe\/terminos y condiciones.\u00a0 En caso de que no estuviera de acuerdo con las modificaciones de nuestras condiciones de uso, el usuario podr\u00e1 optar por no hacer uso de nuestro servicio.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Para la compra de un cup\u00f3n en\u00a0<\/span><\/span>[<span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">www.OFERTOP.pe<\/span><\/span><\/span>](http:\/\/www.ofertop.pe\/)<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">, el usuario deber\u00e1:<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.1.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Confirmar el bot\u00f3n \"comprar\" en la p\u00e1gina inicial. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.2.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Elija el n\u00famero deseado de cupones. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.3.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Introduzca su nombre y su email, as\u00ed como los datos de su tarjeta de cr\u00e9dito. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.4.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Su declaraci\u00f3n de voluntad de compra queda emitida mediante la confirmaci\u00f3n de las condiciones de uso y presi\u00f3n del bot\u00f3n \"comprar\". La aceptaci\u00f3n del contrato de compraventa por parte de OFERTOP tiene lugar con la confirmaci\u00f3n en forma de env\u00edo de un c\u00f3digo del cup\u00f3n. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.5.\u00a0**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Imprima el cup\u00f3n y h\u00e1galo efectivo en el correspondiente establecimiento del socio o, en su caso, ante dicho socio. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.6.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0El pago por parte del usuario ser\u00e1 autom\u00e1tico, as\u00ed como la remisi\u00f3n del cup\u00f3n adquirido, no siendo necesario que transcurra el per\u00edodo del descuento y\/o se alcance el n\u00famero m\u00ednimo de participantes. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.7.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0La venta del cup\u00f3n no se produce hasta que OFERTOP no haya registrado con \u00e9xito el cobro. En caso de no tener \u00e9xito con el primer intento de cobro (por ej. porque no exista la cuenta indicada o no disponga de saldo suficiente, el n\u00famero de la tarjeta de cr\u00e9dito sea err\u00f3neo o la misma est\u00e9 al l\u00edmite) tampoco se producir\u00e1 la venta del cup\u00f3n. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.8.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Todos los cupones est\u00e1n dotados de un claro n\u00fameros de c\u00f3digo, que deber\u00e1 validarse en el sistema aprobado por OFERTOP y del cual el socio dispone, cuando se presentan los cupones para hacerlos efectivos. El cup\u00f3n es transmisible. No se autoriza la reproducci\u00f3n, edici\u00f3n o manipulaci\u00f3n de los cupones. En caso de sospecha fundada de reproducci\u00f3n il\u00edcita, OFERTOP se reserva el derecho de transmitir los datos archivados al socio respectivo e iniciar las acciones legales pertinentes. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.9.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En la medida en que no se indique lo contrario, el cup\u00f3n no concede un derecho a hacer uso de prestaciones o a la adquisici\u00f3n de mercanc\u00edas en un momento concreto. Por ello, el usuario debe acordar individual y directamente con el socio el momento de realizaci\u00f3n de la prestaci\u00f3n. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.10.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En caso de que en el cup\u00f3n figure un per\u00edodo de vigencia, el cup\u00f3n s\u00f3lo podr\u00e1 hacerse efectivo frente al socio dentro de ese per\u00edodo de vigencia. Una vez transcurrido el per\u00edodo de vigencia, el cup\u00f3n pierde su validez y no podr\u00e1 hacerse efectivo bajo ninguna circunstancia. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**7.11**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">. El stock es limitado. Todo pago realizado luego de agotado el stock no se considerar\u00e1 v\u00e1lido y sera reembolsado al cliente en su totalidad. Ejemplo: Si el stock es de 10 unidades y 20 personas han accedido a la promoci\u00f3n( hacen click en la opci\u00f3n de compra y son redirigidos a la pasarela de Visa\/MC\/ScotiaBank), solalmente los 10 primeros cobros seran considerados como beneficiarios de la oferta. A los 10 restantes, por haberse agotado el stock, se les reembolsara su dinero.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**8.\u00a0**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Informaci\u00f3n sobre el derecho de revocaci\u00f3n <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**8.1.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Si el usuario es consumidor, podr\u00e1 revocar la declaraci\u00f3n contractual de compra del cup\u00f3n en el plazo de dos (2) semanas sin necesidad de indicar las causas, comunic\u00e1ndolo por escrito (ej. carta o correo electr\u00f3nico) o mediante el reenv\u00edo del cup\u00f3n. El plazo comienza tras la recepci\u00f3n de cup\u00f3n por el destinatario, nunca antes de la recepci\u00f3n del mismo. Para que se considere cumplido el plazo de revocaci\u00f3n bastar\u00e1 que el env\u00edo de la revocaci\u00f3n y\/o del cup\u00f3n haya tenido su salida puntualmente dentro de dicho plazo. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**8.2.\u00a0**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Una vez hecho efectivo el cup\u00f3n frente al SOCIO, ya no es posible la revocaci\u00f3n. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**8.3.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0La revocaci\u00f3n debe dirigirse a la direcci\u00f3n electr\u00f3nica: clientes@ofertop.pe o carta dirigida a OFERTOP, a la direcci\u00f3n: Jr. Gonzales Olaechea 446-448, San Isidro. Lima. Per\u00fa. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**8.4.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Consecuencias de la revocaci\u00f3n: En el caso de una revocaci\u00f3n eficaz, se han de restituir las prestaciones recibidas por ambas partes y, en su caso, entregar los frutos o utilidades percibidos (ej. ventajas de uso). Las obligaciones de devoluci\u00f3n de pagos han de cumplirse en el plazo m\u00e1ximo de treinta (30) d\u00edas. El plazo comienza para el usuario con la salida del env\u00edo de su declaraci\u00f3n de revocaci\u00f3n o de su vale, y para OFERTOP, con su recepci\u00f3n.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Como una medida de protecci\u00f3n a la seguridad de las transacciones, OFERTOP se reserva el derecho de dejar sin efecto las compras que se realicen, en caso los datos entregados por el cliente no coincidan con las bases de datos disponibles de OFERTOP o aquellas en las que el Banco emisor registre como transacci\u00f3n no reconocida por el due\u00f1o de la tarjeta de cr\u00e9dito. OFERTOP podr\u00e1 \u00a0contactar al titular de la cuenta, y comunicar este hecho; en caso de no obtener respuesta al respecto, se comunicar\u00e1 al Banco emisor sobre la tarjeta de cr\u00e9dito utilizada por el consumidor al momento de enviar su solicitud de compra. El Banco emisor de la tarjeta de cr\u00e9dito que se utiliz\u00f3 para realizar la compra en el sitio, deber\u00e1 proceder con la devoluci\u00f3n del importe de acuerdo con sus Pol\u00edticas. OFERTOP no se responsabiliza en ning\u00fan caso por la no devoluci\u00f3n de dinero utilizado a trav\u00e9s de tarjetas de cr\u00e9dito en las situaciones antes mencionada. Adicionalmente, en cumplimiento a las normas de prevenci\u00f3n del lavado de activos y cuando lo estime conveniente, OFERTOP podr\u00e1 solicitar al Usuario diversos documentos e informaci\u00f3n adicional, respecto a su identificaci\u00f3n y\/o datos personales.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**9.\u00a0**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Atenci\u00f3n de reclamos Todo\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**reclamo o queja**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0ser\u00e1 atendido dentro de los\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**30 d\u00edas calendario**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0de presentado. Dicho plazo ser\u00e1 extendido por otro igual si el reclamo o queja lo justifican, previa comunicaci\u00f3n al cliente antes de la culminaci\u00f3n del plazo inicial. El reclamo o queja ser\u00e1 presentado a trav\u00e9s del formulario del Libro de Reclamaciones ubicado en la p\u00e1gina web de OferTOP:\u00a0<\/span><\/span>[<span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">www.ofertop.pe<\/span><\/span><\/span>](http:\/\/www.ofertop.pe\/)<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**10.\u00a0**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Cr\u00e9ditos El\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**cr\u00e9dito a favor**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0del cliente en OferTOP podr\u00e1 utilizarse:<\/span><\/span>- <span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Para compras de montos menores, quedando el saldo disponible para futuras compras.<\/span><\/span>\n- <span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Para compras de montos iguales.<\/span><\/span>\n- <span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Para compras de montos mayores, pagando la diferencia a trav\u00e9s de cualquier medio de pago, salvo que este se encuentre fijado a ciertas condiciones y restricciones que ser\u00e1n previamente comunicadas al cliente.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**11.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Reservas en los establecimientos:<\/span><\/span>- <span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Los clientes deben sujetarse a las condiciones y restricciones de la promoci\u00f3n, sea de productos o servicios (paquetes tur\u00edsticos, pasajes a\u00e9reos, etc.)\u00a0 indicadas en el cup\u00f3n. \u00a0<\/span><\/span>\n- <span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">Todo cambio o reprogramaci\u00f3n de fechas, horarios, destinos, etc. de las reservaciones\u00a0de paquetes tur\u00edsticos y\/o pasajes a\u00e9reos deber\u00e1n realizarse con la debida anticipaci\u00f3n y coordinarse directamente con el establecimiento o empresa se\u00f1alada en el cup\u00f3n. Estos cambios ser\u00e1n de entera responsabilidad de los clientes por lo que OferTOP no se responsabiliza por los cambios realizados al respecto.<\/span><\/span><\/span>\n- <span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">La cancelaci\u00f3n de las reservas deber\u00e1n realizarse seg\u00fan las especificaciones de cada oferta en particular, caso contrario el establecimiento y OferTOP se reservan el derecho de invalidar ese cup\u00f3n para uso posterior. OferTOP no participa de los acuerdos futuros entre\u00a0 el cliente y el establecimiento ni se responsabiliza por ello.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**12.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Sobre las\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**devoluciones y compensaci\u00f3n a los clientes**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">: <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**Todas las devoluciones o compensaciones a los clientes se realizar\u00e1n en cr\u00e9ditos Ofertop\u00a0**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">***(revisar pol\u00edticas de Ofertas Espec\u00edficas).***<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">La vigencia para utilizar estos cr\u00e9ditos es de\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">90 d\u00edas calendario<\/span><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0desde la fecha de su activaci\u00f3n. <\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Las devoluciones y compensaciones se aplican en los siguientes casos:<\/span><\/span>- <span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Por responsabilidad de OferTOP: devoluci\u00f3n del 100% del monto pagado en cr\u00e9dito OFT.<\/span><\/span>\n- <span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Por responsabilidad del establecimiento: devoluci\u00f3n del 100% del monto pagado en cr\u00e9dito OFT.<\/span><\/span>\n- <span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Por imposibilidad del cliente (cancelaci\u00f3n del cup\u00f3n): mientras el cup\u00f3n est\u00e9 vigente se devuelve el 50% en cr\u00e9dito OFT.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**El cliente es responsable del uso del cup\u00f3n dentro del plazo de vigencia indicado en el mismo. Despu\u00e9s de la fecha de vencimiento del cup\u00f3n no hay posibilidad de reclamo ni devoluci\u00f3n alguna.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**13.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Ofertas espec\u00edficas:<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**13.1**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Cupones de Eventos: Las compras sobre ofertas de eventos (cine, teatro, espect\u00e1culos, conciertos, tours, etc.) no tienen derecho a devoluci\u00f3n en ning\u00fan caso. Todo cup\u00f3n de eventos comprado ser\u00e1 validado inmediatamente y el no uso del cup\u00f3n por parte del cliente hace que pierda su dinero sin derecho a reclamo.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**13.2**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Cupones de Viajes: Las compras sobre ofertas de viajes y\/o paquetes tur\u00edsticos\u00a0 no son reembolsables en caso de cancelaci\u00f3n por parte del cliente. Todo cambio o reprogramaci\u00f3n de fechas, horarios, destinos, etc. de viajes y\/o paquetes tur\u00edsticos deber\u00e1n realizarse con la debida anticipaci\u00f3n y coordinarse directamente con el establecimiento o empresa se\u00f1alado en el cup\u00f3n. Estos cambios ser\u00e1n de entera responsabilidad de los clientes por lo que OferTOP no se responsabiliza por los cambios realizados al respecto.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**13.3**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Pagos extras al establecimiento: Todos aquellos pagos adicionales al cup\u00f3n OferTOP que el cliente realice en el establecimiento, ser\u00e1n coordinados entre el establecimiento y el cliente. OferTOP no se responsabilizar\u00e1 por estos pagos extras.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**13.4**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Ofertop Productos: Todas las compras de Ofertop Productos no est\u00e1n sujetas a devoluciones ni cancelaciones por parte del cliente. Los productos adquiridos a trav\u00e9s de la web Ofertop se sujetar\u00e1n a las condiciones de despacho y entrega estipuladas en el cup\u00f3n (entre 4 a 10 d\u00edas \u00fatiles seg\u00fan corresponda). Trat\u00e1ndose de productos OFERTOP los cuales por sus caracter\u00edsticas tengan fecha de vencimiento, se entregar\u00e1n s\u00f3lo en el plazo de 30 d\u00edas calendario desde la fecha en que se estuvo publicada la oferta en\u00a0<\/span><\/span>[<span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">www.ofertop.pe<\/span><\/span><\/span>](http:\/\/www.ofertop.pe\/)<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">. Transcurrido dicho lapso de tiempo, el cliente pierde el derecho a reclamar el producto y la devoluci\u00f3n del dinero. Respecto a los dem\u00e1s productos, el cliente podr\u00e1 recogerlo hasta la fecha de vencimiento estipulada en cada oferta. Caso contrario, al igual que en la situaci\u00f3n anterior, se perder\u00e1 el derecho a reclamar y\/o solicitar la devoluci\u00f3n del dinero. Podr\u00e1s gestionar la garant\u00eda del producto directamente con OferTOP, siempre y cuando sea dentro de los 07 d\u00edas \u00fatiles despu\u00e9s de haber recogido el producto y previa evaluaci\u00f3n de OferTOP. En este caso, nosotros nos encargaremos de contactar al proveedor y supervisar el cumplimiento de la misma, en caso se requiera alg\u00fan cambio o devoluci\u00f3n. Para realizar la entrega de productos para la garant\u00eda es necesario dejar el mismo en su empaque original, incluyendo todos los accesorios entregados en perfecto estado, con la boleta de venta y dentro del plazo fijado (hasta 07 d\u00edas \u00fatiles despu\u00e9s de haber recogido su producto). Transcurrido este plazo, podr\u00e1s gestionar la garant\u00eda directamente con el proveedor. Podr\u00e1s solicitar los datos del mismo a OferTOP. Todo cambio de producto est\u00e1 sujeto a stock disponible. En caso no haya stock para el cambio, OferTOP te devolver\u00e1 el \u00edntegro de tu dinero, previa evaluaci\u00f3n de cada caso. Cuando existan productos OFERTOP que incluyan delivery, la informaci\u00f3n del lugar de env\u00edo es de exclusiva responsabilidad del USUARIO. Los plazos elegidos para el despacho y entrega, se cuentan desde que se ingresaron los datos a la web de delivery, y se consideran d\u00edas h\u00e1biles(\u00fatiles) para el cumplimiento de dicho plazo.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**14.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0La duraci\u00f3n de la promoci\u00f3n de un cup\u00f3n est\u00e1 limitada temporalmente, estableci\u00e9ndose de forma individual para cada descuento por parte de OFERTOP. Transcurrido el per\u00edodo de duraci\u00f3n y\/o unidades disponibles ya no es posible la compra, d\u00e1ndose por concluida la promoci\u00f3n. En ese sentido, los usuarios se sujetan a las condiciones y restricciones de cada promoci\u00f3n, sea de productos o servicios indicadas en el cup\u00f3n respectivo.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**15.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En la medida en que no se indique lo contrario, podr\u00e1 hacerse uso de cada cup\u00f3n una sola vez, haci\u00e9ndolo efectivo frente al socio acudiendo al establecimiento correspondiente o participando en cualquier otro acontecimiento (o percibiendo cualquier otra mercanc\u00eda). En caso de que no se consumiera totalmente el valor del cup\u00f3n o no se hiciera uso de toda la prestaci\u00f3n,\u00a0 dentro del plazo establecido, caduca la diferencia no utilizada. No es posible el reembolso en estos casos.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**16.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0OFERTOP garantiza que el socio realizar\u00e1 las prestaciones con arreglo a las condiciones certificadas en el cup\u00f3n, siempre y cuando el usuario presente el cup\u00f3n conforme a los t\u00e9rminos y condiciones indicadas en el mismo y antes del inicio de la realizaci\u00f3n de la prestaci\u00f3n. OFERTOP no est\u00e1 obligada a realizar reembolsos y\/o indemnizaciones por da\u00f1os y perjuicios derivados de la negligencia del usuario para recibir las prestaciones del cup\u00f3n. OFERTOP no asume garant\u00eda alguna por los productos o servicios del socio adquiridos por el usuario. El socio respectivo realiza la prestaci\u00f3n certificada en el cup\u00f3n en nombre propio y por cuenta propia frente al usuario, por lo que OFERTOP no responde frente al usuario por incumplimiento de obligaciones del socio en el momento de realizar la prestaci\u00f3n. En caso de que surgieran problemas a la hora de hacer efectivo el cup\u00f3n o de realizar la prestaci\u00f3n, OFERTOP intervendr\u00e1 como conciliador entre el socio y el usuario para encontrar una soluci\u00f3n. En tal caso, los usuarios deber\u00e1n comunicarse al correo: clientes@ofertop.pe o contactarse con OFERTOP por v\u00eda telef\u00f3nica.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**17.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0OFERTOP se reserva el derecho de modificar en cualquier momento el alcance y las funciones de su p\u00e1gina web, o de limitarlas o cancelarlas. Aunque nos esforzamos por ofrecer nuestro servicio sin molestias t\u00e9cnicas, en particular, los trabajos de mantenimiento, la continuaci\u00f3n del desarrollo y\/o fallas t\u00e9cnicas pueden limitar y\/o parcialmente interrumpir las posibilidades de uso. Bajo determinadas circunstancias se pueden producir aqu\u00ed p\u00e9rdidas de datos. OFERTOP no asume por ello garant\u00eda alguna sobre la disponibilidad del servicio o la presencia de fallas t\u00e9cnicas o p\u00e9rdidas de datos y en particular, no tiene responsabilidad por:<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">17.1 El uso o falta de acceso a la p\u00e1gina, las fallas, errores, omisiones o continuidad en el funcionamiento, utilidad y fiabilidad de los servicios y de la p\u00e1gina; la alteraci\u00f3n de la privacidad y seguridad en la utilizaci\u00f3n y contenidos de la p\u00e1gina y de los servicios por terceros ajenos a los mismos de acuerdo con el r\u00e9gimen legal vigente; la presencia de virus o a la presencia de otros elementos falsos en los servicios ofrecidos por terceros a trav\u00e9s de la p\u00e1gina que puedan producir alteraciones en el sistema inform\u00e1tico (hardware y software); la falta de veracidad, exactitud, exhaustividad y actualidad de los contenidos ofrecidos en la p\u00e1gina; la informaci\u00f3n, contenidos y servicios alojados fuera de la p\u00e1gina, aunque fueran accesibles desde esta; 17.2 La falta de disponibilidad y continuidad en el funcionamiento, utilidad y fiabilidad de los servicios y de la p\u00e1gina de terceros colaboradores de OFERTOP.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**18.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0OFERTOP y los socios se reservan todos los derechos de Propiedad Intelectual y dem\u00e1s derechos sobre el servicio as\u00ed como sobre los contenidos publicados, informaciones, im\u00e1genes, videos y bancos de datos (a continuaci\u00f3n denominada \"propiedad protegida\"). Por ello, est\u00e1 expresamente prohibida cualquier modificaci\u00f3n, reproducci\u00f3n, publicaci\u00f3n, transmisi\u00f3n a terceros y\/o dem\u00e1s uso o explotaci\u00f3n de la propiedad protegida sin el consentimiento previo por escrito de OFERTOP o del socio respectivamente afectado.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**19.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0No est\u00e1 permitida ninguna acci\u00f3n o uso de dispositivo, software, u otro medio tendiente a interferir tanto en las actividades y operatoria de OFERTOP como en las ofertas, descripciones, cuentas o bases de datos de OFERTOP. Cualquier intromisi\u00f3n, tentativa o actividad violatoria o contraria a las leyes sobre derecho de propiedad intelectual y\/o a las prohibiciones estipuladas en este contrato har\u00e1n pasible a su responsable de las acciones legales pertinentes,\u00a0 as\u00ed como lo har\u00e1 responsable de indemnizar los da\u00f1os ocasionados.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**20.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En caso de que disposiciones concretas de estas Condiciones Generales de Contrataci\u00f3n o del contrato concluido con la parte contratante fueran ineficaces en todo o en parte, ello no afectar\u00e1 a la eficacia del resto del contrato.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**21.**<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Estos T\u00e9rminos y Condiciones se rigen por la ley peruana, y cualquier divergencia o discrepancia derivada de su interpretaci\u00f3n, aplicaci\u00f3n y ejecuci\u00f3n ser\u00e1 sometida a un arbitraje de derecho, llevada a cabo por \u00e1rbitro \u00fanico, siendo el respectivo laudo definitivo e inapelable. Dicho arbitraje ser\u00e1 efectuado por el Centro de Arbitraje de la C\u00e1mara de Comercio de Lima y se regir\u00e1 por los reglamentos arbitrales de dicha instituci\u00f3n, cuyas normas y condiciones las partes declaran conocer y someterse de manera expresa e incondicional, para lo cual renuncian expresamente a su propio fuero. El \u00e1rbitro \u00fanico ser\u00e1 designado por las instancias competentes del Centro de Arbitraje de la C\u00e1mara de Comercio de Lima. <\/span><\/span><span style=\"color: #000000;\">\u00a0<\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">**POLITICAS OFERTOP DELIVERY**<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">1.\u00a0\u00a0\u00a0\u00a0 Los horarios para el delivery de productos Ofertop son de lunes a viernes de 9:00 a.m. a 8:00 p.m.<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">No se efectuar\u00e1n entregas los d\u00edas feriados. Las entregas de campa\u00f1as especiales tienen los siguientes horarios: de 8:00 a.m a 2:00 p.m. Estos horarios y las campa\u00f1as para las que aplican se comunicar\u00e1n oportunamente y se indicar\u00e1n en cada una de las ofertas que participe en la campa\u00f1a en cuesti\u00f3n.<\/span><\/span> 2.\u00a0\u00a0\u00a0\u00a0 Para acceder al servicio de delivery, el cliente (con el cup\u00f3n recibido) deber\u00e1 ingresar los datos requeridos en www.ofertopdelivery.pe. Para dicho proceso el cliente tendr\u00e1 un plazo no mayor a 48 horas, luego de haber recibido el cup\u00f3n de compra en su correo electr\u00f3nico. De no ingresar los datos en ese plazo el servicio de delivery no estar\u00e1 disponible. 3.\u00a0\u00a0\u00a0\u00a0 Para el servicio de delivery el cliente deber\u00e1 facilitar la informaci\u00f3n necesaria para realizar la entrega. La direcci\u00f3n de env\u00edo y las referencias registradas por el usuario\u00a0<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">ser\u00e1n de exclusiva responsabilidad del mismo.\u00a0<\/span><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Cualquier error de ingreso de datos por parte del cliente, ocasionar\u00e1 que el Delivery no pueda ser concretado.<\/span><\/span> 4.\u00a0\u00a0\u00a0\u00a0 Las entregas se realizar\u00e1n dentro del \u00e1rea de Lima Metropolitana. Salvo, casos especiales que ser\u00e1n indicados dentro de las condiciones de la oferta. 5.\u00a0\u00a0\u00a0\u00a0 La entrega del producto se realizar\u00e1 en un plazo de hasta 10 d\u00edas \u00fatiles, a partir de que el cliente ingrese sus datos en\u00a0[<span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">www.ofertopdelivery.pe<\/span><\/span><\/span>](http:\/\/www.ofertopdelivery.pe\/)<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0y reciba la confirmaci\u00f3n en su correo electr\u00f3nico. De no haberse cumplido con el registro correcto de los datos del cliente, Ofertop se reserva el derecho de suspender el servicio de delivery. Si el cliente no recibe la confirmaci\u00f3n de registro de datos en su correo electr\u00f3nico, deber\u00eda escribir a\u00a0<\/span><\/span>[<span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">clientes@ofertop.pe<\/span><\/span><\/span>](mailto:clientes@ofertop.pe)<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0para reportar el hecho y recibir asistencia. Esto deber\u00e1 realizarse en no m\u00e1s de 48 horas luego de haber realizado su compra.<\/span><\/span> 6.\u00a0\u00a0\u00a0El env\u00edo no es nominativo y cualquier persona, mayor de 18 a\u00f1os y debidamente documentada (DNI), podr\u00e1 recibirlo. Para recibir el producto es obligatorio contar con el cup\u00f3n de OferTOP impreso y copia del DNI si no es el titular. Esta a su vez deber\u00e1 firmar en se\u00f1al de conformidad la Gu\u00eda de Entrega correspondiente. No se entregar\u00e1 el producto a personas que se nieguen a firmar esta Gu\u00eda o que no cuenten con su DNI al momento de la entrega. La recepci\u00f3n del producto indica conformidad del estado. 7.\u00a0\u00a0\u00a0El servicio de delivery se realizar\u00e1 en un solo intento. De no poder realizarse la entrega, en cliente deber\u00e1 escribir un correo electr\u00f3nico a\u00a0[<span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">clientes@ofertop.pe<\/span><\/span><\/span>](mailto:clientes@ofertop.pe)<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0y coordinar el recojo del producto de las oficinas de OferTOP en los horarios de lunes a viernes de 9:00 a.m. a 1 p.m. y de 2:00 p.m. a 6:00 p.m. El producto estar\u00e1 sujeto a disponibilidad. En ning\u00fan caso el servicio de delivery podr\u00e1 ser reprogramado y tampoco\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">se podr\u00e1n aplicar devoluciones asociadas al pago del\u00a0<\/span><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">delivery<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">.<\/span><\/span><\/span> 8.\u00a0\u00a0\u00a0\u00a0 Los productos Ofertop no est\u00e1n sujetos a devoluciones. En caso de fallas en el producto, el cliente deber\u00e1\u00a0<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">(en un plazo de 07 d\u00edas \u00fatiles desde la fecha en que se registra la entrega del producto)<\/span><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0comunicarse con Ofertop y hacer la solicitud del mismo. En ning\u00fan caso, la empresa de delivery realiza cambios de productos, este servicio s\u00f3lo entregar\u00e1 el producto sellado y cerrado.<\/span><\/span>\n","html":"<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Este es el Portal OferTOP.pe de propiedad de OFERTOP S.A.C., con domicilio en Jr. Gonzales Olaechea 446-448, San Isidro, Lima, (en adelante OFERTOP), y los siguientes son los T\u00e9rminos y Condiciones de Uso que regulan el acceso y uso de este Portal (en adelante \u201cel sitio\u201d) y, en general, la relaci\u00f3n entre OFERTOP y los USUARIOS del sitio, sin perjuicio de otras condiciones e instrucciones particulares o espec\u00edficas que OFERTOP comunique adecuadamente a los usuarios.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">La utilizaci\u00f3n del sitio atribuye la condici\u00f3n de USUARIO del mismo, e implica la aceptaci\u00f3n plena y sin reservas de todas y cada una de las disposiciones incluidas en estos T\u00e9rminos y Condiciones, siendo obligaci\u00f3n del USUARIO leer atentamente los T\u00e9rminos y Condiciones antes de hacer uso del sitio y de su contenido.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Al comunicarte con este sitio Web, las pol\u00edticas y normas detalladas a continuaci\u00f3n, se consideran aceptadas.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>1.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En la p\u00e1gina web www.OFERTOP.pe se ofrecen cupones sobre prestaciones o sobre mercanc\u00edas de otras empresas (\u201cLos socios\u201d). Emitentes de los cupones y deudores de las prestaciones o mercanc\u00edas indicadas en los cupones son exclusivamente los respectivos socios, los cuales realizan esas prestaciones con arreglo a sus respectivas Condiciones Generales de Contrataci\u00f3n. OFERTOP misma no adeuda la realizaci\u00f3n de las prestaciones indicadas en los cupones ni la entrega de las mercanc\u00edas indicadas en los mismos, sino que el cup\u00f3n le concede al usuario \u00fanicamente un derecho a que el socio o los socios realicen la prestaci\u00f3n. Para la utilizaci\u00f3n del servicio de OFERTOP rigen \u00fanica y exclusivamente los siguientes t\u00e9rminos y condiciones de uso. Los cupones vendidos por OFERTOP no est\u00e1n dirigidos a una prestaci\u00f3n concreta (cup\u00f3n de acontecimiento) ni a una mercanc\u00eda concreta (cup\u00f3n de mercanc\u00eda) ni a un valor de prestaci\u00f3n o mercanc\u00eda concretos (cup\u00f3n de valor). En caso que el socio o los socios hubieran fijado sus propios t\u00e9rminos y condiciones para los actos y contratos que realice en este sitio, ellas aparecer\u00e1n en esta p\u00e1gina se\u00f1alada con un link o indicada como parte de la promoci\u00f3n de sus ofertas y promociones y se entender\u00e1n como complementarias a estas.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>2.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0La p\u00e1gina web www.OFERTOP.com.pe as\u00ed como el sistema de venta de cupones en dicha p\u00e1gina son gestionados por:<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">OFERTOP SAC\nJr. Gonz\u00e1les Olaechea 446-448, San Isidro\nLima \u2013 Per\u00fa\nTel\u00e9fono: 3-115-115\nE-mail:\u00a0<\/span><\/span><a href=\"mailto:clientes@ofertop.pe\"><span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">clientes@ofertop.pe<\/span><\/span><\/span><\/a>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>3.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Ya sea mediante confirmaci\u00f3n del correspondiente campo en el proceso de pedido, o bien si el usuario hace uso efectivo del servicio, quedar\u00e1n aceptadas las condiciones de uso de OFERTOP. En tal caso, Usted reconoce que nosotros - OFERTOP - consideremos el uso de nuestro servicio como reconocimiento de las condiciones de uso. Estas condiciones de uso podr\u00e1n ser consultadas, impresas o grabadas localmente en cualquier momento bajo http:\/\/www.OFERTOP.pe\/terminos y condiciones.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">4. Los cupones s\u00f3lo est\u00e1n disponibles para personas que tengan capacidad legal para contratar (mayores de 18 a\u00f1os de edad seg\u00fan la ley peruana). No podr\u00e1n adquirir los cupones las personas que no tengan esa capacidad y los menores de edad. Los actos que \u00e9stos realicen en el sitio ser\u00e1n responsabilidad de sus padres, tutores, encargados o curadores, y por tanto se considerar\u00e1n realizados por \u00e9stos en ejercicio de la representaci\u00f3n legal con la que cuentan.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>5.\u00a0<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Para adquirir los cupones ofrecidos en el sitio, los usuarios registrados deber\u00e1n facilitar determinados datos de car\u00e1cter personal. Su informaci\u00f3n personal se procesa y almacena en servidores o medios magn\u00e9ticos que mantienen altos est\u00e1ndares de seguridad y protecci\u00f3n tanto f\u00edsica como tecnol\u00f3gica.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">OFERTOP garantiza la confidencialidad de los datos suministrados por los usuarios de acuerdo con las normas legales aplicables e informa acerca del uso que OFERTOP har\u00e1 de los datos de car\u00e1cter personal que proporcionen los usuarios, para que los mismos determinen libre y voluntariamente si desean suministrar a la OFERTOP sus datos personales, en cualquier forma y a trav\u00e9s de cualquier medio.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">De conformidad con la Ley N\u00b0 29733, Ley de Protecci\u00f3n de Datos Personales, desde el momento de su ingreso y\/o utilizaci\u00f3n al sitio el usuario da expresamente su consentimiento para el tratamiento de los datos personales que por el sean facilitados o que se faciliten a trav\u00e9s de su ingreso al portal o por cualquier medio. Asimismo, el usuario consiente expresamente que OFERTOP\u00a0 pueda ceder los datos personales, a terceros en los t\u00e9rminos y condiciones se\u00f1alados en esta p\u00e1gina.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Los datos personales ser\u00e1n incorporados a la base de datos de titularidad de OFERTOP. Estos datos ser\u00e1n utilizados en la gesti\u00f3n administrativa y comercial de la petici\u00f3n de los usuarios.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Los datos se mantendr\u00e1n en la base de datos mientras se consideren \u00fatiles con el fin que OFERTOP pueda prestar y ofrecer sus servicios y darles tr\u00e1mite, enviarle informaci\u00f3n y publicidad sobre las ofertas, promociones y recomendaciones de OFERTOP.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">En cuanto entre en vigencia las disposiciones pertinentes de la Ley de Protecci\u00f3n de Datos Personales, al usuario le asiste de ejercer los derechos de acceso, rectificaci\u00f3n, oposici\u00f3n y cancelaci\u00f3n de los datos personales, los cuales podr\u00e1 ejercer mediante la opci\u00f3n de contacto que ponemos a su disposici\u00f3n en esta p\u00e1gina.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>\n6.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0OFERTOP podr\u00e1 modificar estos t\u00e9rminos y condiciones de uso, por ejemplo, para poner en pr\u00e1ctica cambios en la legislaci\u00f3n peruana o tener en cuenta modificaciones sobre su\u00a0 funcionamiento o sobre pol\u00edticas de atenci\u00f3n. El usuario encontrar\u00e1 las condiciones de uso vigentes en cada momento bajo http:\/\/www.OFERTOP.pe\/terminos y condiciones.\u00a0 En caso de que no estuviera de acuerdo con las modificaciones de nuestras condiciones de uso, el usuario podr\u00e1 optar por no hacer uso de nuestro servicio.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Para la compra de un cup\u00f3n en\u00a0<\/span><\/span><a href=\"http:\/\/www.ofertop.pe\/\"><span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">www.OFERTOP.pe<\/span><\/span><\/span><\/a><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">, el usuario deber\u00e1:<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.1.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Confirmar el bot\u00f3n \"comprar\" en la p\u00e1gina inicial.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.2.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Elija el n\u00famero deseado de cupones.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.3.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Introduzca su nombre y su email, as\u00ed como los datos de su tarjeta de cr\u00e9dito.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.4.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Su declaraci\u00f3n de voluntad de compra queda emitida mediante la confirmaci\u00f3n de las condiciones de uso y presi\u00f3n del bot\u00f3n \"comprar\". La aceptaci\u00f3n del contrato de compraventa por parte de OFERTOP tiene lugar con la confirmaci\u00f3n en forma de env\u00edo de un c\u00f3digo del cup\u00f3n.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.5.\u00a0<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Imprima el cup\u00f3n y h\u00e1galo efectivo en el correspondiente establecimiento del socio o, en su caso, ante dicho socio.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.6.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0El pago por parte del usuario ser\u00e1 autom\u00e1tico, as\u00ed como la remisi\u00f3n del cup\u00f3n adquirido, no siendo necesario que transcurra el per\u00edodo del descuento y\/o se alcance el n\u00famero m\u00ednimo de participantes.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.7.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0La venta del cup\u00f3n no se produce hasta que OFERTOP no haya registrado con \u00e9xito el cobro. En caso de no tener \u00e9xito con el primer intento de cobro (por ej. porque no exista la cuenta indicada o no disponga de saldo suficiente, el n\u00famero de la tarjeta de cr\u00e9dito sea err\u00f3neo o la misma est\u00e9 al l\u00edmite) tampoco se producir\u00e1 la venta del cup\u00f3n.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.8.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Todos los cupones est\u00e1n dotados de un claro n\u00fameros de c\u00f3digo, que deber\u00e1 validarse en el sistema aprobado por OFERTOP y del cual el socio dispone, cuando se presentan los cupones para hacerlos efectivos. El cup\u00f3n es transmisible. No se autoriza la reproducci\u00f3n, edici\u00f3n o manipulaci\u00f3n de los cupones. En caso de sospecha fundada de reproducci\u00f3n il\u00edcita, OFERTOP se reserva el derecho de transmitir los datos archivados al socio respectivo e iniciar las acciones legales pertinentes.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.9.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En la medida en que no se indique lo contrario, el cup\u00f3n no concede un derecho a hacer uso de prestaciones o a la adquisici\u00f3n de mercanc\u00edas en un momento concreto. Por ello, el usuario debe acordar individual y directamente con el socio el momento de realizaci\u00f3n de la prestaci\u00f3n.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.10.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En caso de que en el cup\u00f3n figure un per\u00edodo de vigencia, el cup\u00f3n s\u00f3lo podr\u00e1 hacerse efectivo frente al socio dentro de ese per\u00edodo de vigencia. Una vez transcurrido el per\u00edodo de vigencia, el cup\u00f3n pierde su validez y no podr\u00e1 hacerse efectivo bajo ninguna circunstancia.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>7.11<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">. El stock es limitado. Todo pago realizado luego de agotado el stock no se considerar\u00e1 v\u00e1lido y sera reembolsado al cliente en su totalidad. Ejemplo: Si el stock es de 10 unidades y 20 personas han accedido a la promoci\u00f3n( hacen click en la opci\u00f3n de compra y son redirigidos a la pasarela de Visa\/MC\/ScotiaBank), solalmente los 10 primeros cobros seran considerados como beneficiarios de la oferta. A los 10 restantes, por haberse agotado el stock, se les reembolsara su dinero.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>8.\u00a0<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Informaci\u00f3n sobre el derecho de revocaci\u00f3n\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>8.1.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Si el usuario es consumidor, podr\u00e1 revocar la declaraci\u00f3n contractual de compra del cup\u00f3n en el plazo de dos (2) semanas sin necesidad de indicar las causas, comunic\u00e1ndolo por escrito (ej. carta o correo electr\u00f3nico) o mediante el reenv\u00edo del cup\u00f3n. El plazo comienza tras la recepci\u00f3n de cup\u00f3n por el destinatario, nunca antes de la recepci\u00f3n del mismo. Para que se considere cumplido el plazo de revocaci\u00f3n bastar\u00e1 que el env\u00edo de la revocaci\u00f3n y\/o del cup\u00f3n haya tenido su salida puntualmente dentro de dicho plazo.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>8.2.\u00a0<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Una vez hecho efectivo el cup\u00f3n frente al SOCIO, ya no es posible la revocaci\u00f3n.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>8.3.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0La revocaci\u00f3n debe dirigirse a la direcci\u00f3n electr\u00f3nica: clientes@ofertop.pe o carta dirigida a OFERTOP, a la direcci\u00f3n: Jr. Gonzales Olaechea 446-448, San Isidro. Lima. Per\u00fa.\n<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>8.4.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Consecuencias de la revocaci\u00f3n:\nEn el caso de una revocaci\u00f3n eficaz, se han de restituir las prestaciones recibidas por ambas partes y, en su caso, entregar los frutos o utilidades percibidos (ej. ventajas de uso). Las obligaciones de devoluci\u00f3n de pagos han de cumplirse en el plazo m\u00e1ximo de treinta (30) d\u00edas. El plazo comienza para el usuario con la salida del env\u00edo de su declaraci\u00f3n de revocaci\u00f3n o de su vale, y para OFERTOP, con su recepci\u00f3n.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Como una medida de protecci\u00f3n a la seguridad de las transacciones, OFERTOP se reserva el derecho de dejar sin efecto las compras que se realicen, en caso los datos entregados por el cliente no coincidan con las bases de datos disponibles de OFERTOP o aquellas en las que el Banco emisor registre como transacci\u00f3n no reconocida por el due\u00f1o de la tarjeta de cr\u00e9dito. OFERTOP podr\u00e1 \u00a0contactar al titular de la cuenta, y comunicar este hecho; en caso de no obtener respuesta al respecto, se comunicar\u00e1 al Banco emisor sobre la tarjeta de cr\u00e9dito utilizada por el consumidor al momento de enviar su solicitud de compra. El Banco emisor de la tarjeta de cr\u00e9dito que se utiliz\u00f3 para realizar la compra en el sitio, deber\u00e1 proceder con la devoluci\u00f3n del importe de acuerdo con sus Pol\u00edticas. OFERTOP no se responsabiliza en ning\u00fan caso por la no devoluci\u00f3n de dinero utilizado a trav\u00e9s de tarjetas de cr\u00e9dito en las situaciones antes mencionada.\nAdicionalmente, en cumplimiento a las normas de prevenci\u00f3n del lavado de activos y cuando lo estime conveniente, OFERTOP podr\u00e1 solicitar al Usuario diversos documentos e informaci\u00f3n adicional, respecto a su identificaci\u00f3n y\/o datos personales.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>9.\u00a0<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Atenci\u00f3n de reclamos\nTodo\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>reclamo o queja<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0ser\u00e1 atendido dentro de los\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>30 d\u00edas calendario<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0de presentado. Dicho plazo ser\u00e1 extendido por otro igual si el reclamo o queja lo justifican, previa comunicaci\u00f3n al cliente antes de la culminaci\u00f3n del plazo inicial. El reclamo o queja ser\u00e1 presentado a trav\u00e9s del formulario del Libro de Reclamaciones ubicado en la p\u00e1gina web de OferTOP:\u00a0<\/span><\/span><a href=\"http:\/\/www.ofertop.pe\/\"><span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">www.ofertop.pe<\/span><\/span><\/span><\/a>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>10.\u00a0<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Cr\u00e9ditos\nEl\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>cr\u00e9dito a favor<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0del cliente en OferTOP podr\u00e1 utilizarse:<\/span><\/span>\n<ul>\n\t<li><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Para compras de montos menores, quedando el saldo disponible para futuras compras.<\/span><\/span><\/li>\n\t<li><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Para compras de montos iguales.<\/span><\/span><\/li>\n\t<li><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Para compras de montos mayores, pagando la diferencia a trav\u00e9s de cualquier medio de pago, salvo que este se encuentre fijado a ciertas condiciones y restricciones que ser\u00e1n previamente comunicadas al cliente.<\/span><\/span><\/li>\n<\/ul>\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>11.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Reservas en los establecimientos:<\/span><\/span>\n<ul>\n\t<li><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Los clientes deben sujetarse a las condiciones y restricciones de la promoci\u00f3n, sea de productos o servicios (paquetes tur\u00edsticos, pasajes a\u00e9reos, etc.)\u00a0 indicadas en el cup\u00f3n. \u00a0<\/span><\/span><\/li>\n\t<li><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">Todo cambio o reprogramaci\u00f3n de fechas, horarios, destinos, etc. de las reservaciones\u00a0de paquetes tur\u00edsticos y\/o pasajes a\u00e9reos deber\u00e1n realizarse con la debida anticipaci\u00f3n y coordinarse directamente con el establecimiento o empresa se\u00f1alada en el cup\u00f3n. Estos cambios ser\u00e1n de entera responsabilidad de los clientes por lo que OferTOP no se responsabiliza por los cambios realizados al respecto.<\/span><\/span><\/span><\/li>\n\t<li><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">La cancelaci\u00f3n de las reservas deber\u00e1n realizarse seg\u00fan las especificaciones de cada oferta en particular, caso contrario el establecimiento y OferTOP se reservan el derecho de invalidar ese cup\u00f3n para uso posterior. OferTOP no participa de los acuerdos futuros entre\u00a0 el cliente y el establecimiento ni se responsabiliza por ello.<\/span><\/span><\/li>\n<\/ul>\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>12.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Sobre las\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>devoluciones y compensaci\u00f3n a los clientes<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">:\n<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>Todas las devoluciones o compensaciones a los clientes se realizar\u00e1n en cr\u00e9ditos Ofertop\u00a0<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><i><b>(revisar pol\u00edticas de Ofertas Espec\u00edficas).<\/b><\/i><\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">La vigencia para utilizar estos cr\u00e9ditos es de\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">90 d\u00edas calendario<\/span><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0desde la fecha de su activaci\u00f3n.\n<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Las devoluciones y compensaciones se aplican en los siguientes casos:<\/span><\/span>\n<ul>\n\t<li><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Por responsabilidad de OferTOP: devoluci\u00f3n del 100% del monto pagado en cr\u00e9dito OFT.<\/span><\/span><\/li>\n\t<li><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Por responsabilidad del establecimiento: devoluci\u00f3n del 100% del monto pagado en cr\u00e9dito OFT.<\/span><\/span><\/li>\n\t<li><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Por imposibilidad del cliente (cancelaci\u00f3n del cup\u00f3n): mientras el cup\u00f3n est\u00e9 vigente se devuelve el 50% en cr\u00e9dito OFT.<\/span><\/span><\/li>\n<\/ul>\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>El cliente es responsable del uso del cup\u00f3n dentro del plazo de vigencia indicado en el mismo.\nDespu\u00e9s de la fecha de vencimiento del cup\u00f3n no hay posibilidad de reclamo ni devoluci\u00f3n alguna.<\/b><\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>13.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Ofertas espec\u00edficas:<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>13.1<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Cupones de Eventos: Las compras sobre ofertas de eventos (cine, teatro, espect\u00e1culos, conciertos, tours, etc.) no tienen derecho a devoluci\u00f3n en ning\u00fan caso. Todo cup\u00f3n de eventos comprado ser\u00e1 validado inmediatamente y el no uso del cup\u00f3n por parte del cliente hace que pierda su dinero sin derecho a reclamo.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>13.2<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Cupones de Viajes: Las compras sobre ofertas de viajes y\/o paquetes tur\u00edsticos\u00a0 no son reembolsables en caso de cancelaci\u00f3n por parte del cliente. Todo cambio o reprogramaci\u00f3n de fechas, horarios, destinos, etc. de viajes y\/o paquetes tur\u00edsticos deber\u00e1n realizarse con la debida anticipaci\u00f3n y coordinarse directamente con el establecimiento o empresa se\u00f1alado en el cup\u00f3n. Estos cambios ser\u00e1n de entera responsabilidad de los clientes por lo que OferTOP no se responsabiliza por los cambios realizados al respecto.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>13.3<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Pagos extras al establecimiento: Todos aquellos pagos adicionales al cup\u00f3n OferTOP que el cliente realice en el establecimiento, ser\u00e1n coordinados entre el establecimiento y el cliente. OferTOP no se responsabilizar\u00e1 por estos pagos extras.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>13.4<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Ofertop Productos: Todas las compras de Ofertop Productos no est\u00e1n sujetas a devoluciones ni cancelaciones por parte del cliente.\nLos productos adquiridos a trav\u00e9s de la web Ofertop se sujetar\u00e1n a las condiciones de despacho y entrega estipuladas en el cup\u00f3n (entre 4 a 10 d\u00edas \u00fatiles seg\u00fan corresponda).\nTrat\u00e1ndose de productos OFERTOP los cuales por sus caracter\u00edsticas tengan fecha de vencimiento, se entregar\u00e1n s\u00f3lo en el plazo de 30 d\u00edas calendario desde la fecha en que se estuvo publicada la oferta en\u00a0<\/span><\/span><a href=\"http:\/\/www.ofertop.pe\/\"><span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">www.ofertop.pe<\/span><\/span><\/span><\/a><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">. Transcurrido dicho lapso de tiempo, el cliente pierde el derecho a reclamar el producto y la devoluci\u00f3n del dinero.\nRespecto a los dem\u00e1s productos, el cliente podr\u00e1 recogerlo hasta la fecha de vencimiento estipulada en cada oferta. Caso contrario, al igual que en la situaci\u00f3n anterior, se perder\u00e1 el derecho a reclamar y\/o solicitar la devoluci\u00f3n del dinero.\nPodr\u00e1s gestionar la garant\u00eda del producto directamente con OferTOP, siempre y cuando sea dentro de los 07 d\u00edas \u00fatiles despu\u00e9s de haber recogido el producto y previa evaluaci\u00f3n de OferTOP. En este caso, nosotros nos encargaremos de contactar al proveedor y supervisar el cumplimiento de la misma, en caso se requiera alg\u00fan cambio o devoluci\u00f3n. Para realizar la entrega de productos para la garant\u00eda es necesario dejar el mismo en su empaque original, incluyendo todos los accesorios entregados en perfecto estado, con la boleta de venta y dentro del plazo fijado (hasta 07 d\u00edas \u00fatiles despu\u00e9s de haber recogido su producto).\nTranscurrido este plazo, podr\u00e1s gestionar la garant\u00eda directamente con el proveedor. Podr\u00e1s solicitar los datos del mismo a OferTOP.\nTodo cambio de producto est\u00e1 sujeto a stock disponible. En caso no haya stock para el cambio, OferTOP te devolver\u00e1 el \u00edntegro de tu dinero, previa evaluaci\u00f3n de cada caso.\nCuando existan productos OFERTOP que incluyan delivery, la informaci\u00f3n del lugar de env\u00edo es de exclusiva responsabilidad del USUARIO. Los plazos elegidos para el despacho y entrega, se cuentan desde que se ingresaron los datos a la web de delivery, y se consideran d\u00edas h\u00e1biles(\u00fatiles) para el cumplimiento de dicho plazo.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>14.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0La duraci\u00f3n de la promoci\u00f3n de un cup\u00f3n est\u00e1 limitada temporalmente, estableci\u00e9ndose de forma individual para cada descuento por parte de OFERTOP. Transcurrido el per\u00edodo de duraci\u00f3n y\/o unidades disponibles ya no es posible la compra, d\u00e1ndose por concluida la promoci\u00f3n. En ese sentido, los usuarios se sujetan a las condiciones y restricciones de cada promoci\u00f3n, sea de productos o servicios indicadas en el cup\u00f3n respectivo.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>15.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En la medida en que no se indique lo contrario, podr\u00e1 hacerse uso de cada cup\u00f3n una sola vez, haci\u00e9ndolo efectivo frente al socio acudiendo al establecimiento correspondiente o participando en cualquier otro acontecimiento (o percibiendo cualquier otra mercanc\u00eda). En caso de que no se consumiera totalmente el valor del cup\u00f3n o no se hiciera uso de toda la prestaci\u00f3n,\u00a0 dentro del plazo establecido, caduca la diferencia no utilizada. No es posible el reembolso en estos casos.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>16.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0OFERTOP garantiza que el socio realizar\u00e1 las prestaciones con arreglo a las condiciones certificadas en el cup\u00f3n, siempre y cuando el usuario presente el cup\u00f3n conforme a los t\u00e9rminos y condiciones indicadas en el mismo y antes del inicio de la realizaci\u00f3n de la prestaci\u00f3n. OFERTOP no est\u00e1 obligada a realizar reembolsos y\/o indemnizaciones por da\u00f1os y perjuicios derivados de la negligencia del usuario para recibir las prestaciones del cup\u00f3n. OFERTOP no asume garant\u00eda alguna por los productos o servicios del socio adquiridos por el usuario. El socio respectivo realiza la prestaci\u00f3n certificada en el cup\u00f3n en nombre propio y por cuenta propia frente al usuario, por lo que OFERTOP no responde frente al usuario por incumplimiento de obligaciones del socio en el momento de realizar la prestaci\u00f3n. En caso de que surgieran problemas a la hora de hacer efectivo el cup\u00f3n o de realizar la prestaci\u00f3n, OFERTOP intervendr\u00e1 como conciliador entre el socio y el usuario para encontrar una soluci\u00f3n. En tal caso, los usuarios deber\u00e1n comunicarse al correo: clientes@ofertop.pe o contactarse con OFERTOP por v\u00eda telef\u00f3nica.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>17.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0OFERTOP se reserva el derecho de modificar en cualquier momento el alcance y las funciones de su p\u00e1gina web, o de limitarlas o cancelarlas. Aunque nos esforzamos por ofrecer nuestro servicio sin molestias t\u00e9cnicas, en particular, los trabajos de mantenimiento, la continuaci\u00f3n del desarrollo y\/o fallas t\u00e9cnicas pueden limitar y\/o parcialmente interrumpir las posibilidades de uso. Bajo determinadas circunstancias se pueden producir aqu\u00ed p\u00e9rdidas de datos. OFERTOP no asume por ello garant\u00eda alguna sobre la disponibilidad del servicio o la presencia de fallas t\u00e9cnicas o p\u00e9rdidas de datos y en particular, no tiene responsabilidad por:<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">17.1 El uso o falta de acceso a la p\u00e1gina, las fallas, errores, omisiones o continuidad en el funcionamiento, utilidad y fiabilidad de los servicios y de la p\u00e1gina; la alteraci\u00f3n de la privacidad y seguridad en la utilizaci\u00f3n y contenidos de la p\u00e1gina y de los servicios por terceros ajenos a los mismos de acuerdo con el r\u00e9gimen legal vigente; la presencia de virus o a la presencia de otros elementos falsos en los servicios ofrecidos por terceros a trav\u00e9s de la p\u00e1gina que puedan producir alteraciones en el sistema inform\u00e1tico (hardware y software); la falta de veracidad, exactitud, exhaustividad y actualidad de los contenidos ofrecidos en la p\u00e1gina; la informaci\u00f3n, contenidos y servicios alojados fuera de la p\u00e1gina, aunque fueran accesibles desde esta;\n17.2 La falta de disponibilidad y continuidad en el funcionamiento, utilidad y fiabilidad de los servicios y de la p\u00e1gina de terceros colaboradores de OFERTOP.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>18.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0OFERTOP y los socios se reservan todos los derechos de Propiedad Intelectual y dem\u00e1s derechos sobre el servicio as\u00ed como sobre los contenidos publicados, informaciones, im\u00e1genes, videos y bancos de datos (a continuaci\u00f3n denominada \"propiedad protegida\"). Por ello, est\u00e1 expresamente prohibida cualquier modificaci\u00f3n, reproducci\u00f3n, publicaci\u00f3n, transmisi\u00f3n a terceros y\/o dem\u00e1s uso o explotaci\u00f3n de la propiedad protegida sin el consentimiento previo por escrito de OFERTOP o del socio respectivamente afectado.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>19.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0No est\u00e1 permitida ninguna acci\u00f3n o uso de dispositivo, software, u otro medio tendiente a interferir tanto en las actividades y operatoria de OFERTOP como en las ofertas, descripciones, cuentas o bases de datos de OFERTOP. Cualquier intromisi\u00f3n, tentativa o actividad violatoria o contraria a las leyes sobre derecho de propiedad intelectual y\/o a las prohibiciones estipuladas en este contrato har\u00e1n pasible a su responsable de las acciones legales pertinentes,\u00a0 as\u00ed como lo har\u00e1 responsable de indemnizar los da\u00f1os ocasionados.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>20.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0En caso de que disposiciones concretas de estas Condiciones Generales de Contrataci\u00f3n o del contrato concluido con la parte contratante fueran ineficaces en todo o en parte, ello no afectar\u00e1 a la eficacia del resto del contrato.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>21.<\/b><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0Estos T\u00e9rminos y Condiciones se rigen por la ley peruana, y cualquier divergencia o discrepancia derivada de su interpretaci\u00f3n, aplicaci\u00f3n y ejecuci\u00f3n ser\u00e1 sometida a un arbitraje de derecho, llevada a cabo por \u00e1rbitro \u00fanico, siendo el respectivo laudo definitivo e inapelable. Dicho arbitraje ser\u00e1 efectuado por el Centro de Arbitraje de la C\u00e1mara de Comercio de Lima y se regir\u00e1 por los reglamentos arbitrales de dicha instituci\u00f3n, cuyas normas y condiciones las partes declaran conocer y someterse de manera expresa e incondicional, para lo cual renuncian expresamente a su propio fuero. El \u00e1rbitro \u00fanico ser\u00e1 designado por las instancias competentes del Centro de Arbitraje de la C\u00e1mara de Comercio de Lima.\n<\/span><\/span>\n\n<span style=\"color: #000000;\">\u00a0<\/span>\n<p align=\"CENTER\"><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><b>POLITICAS OFERTOP DELIVERY<\/b><\/span><\/span><\/p>\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">1.\u00a0\u00a0\u00a0\u00a0 Los horarios para el delivery de productos Ofertop son de lunes a viernes de 9:00 a.m. a 8:00 p.m.<\/span><\/span>\n\n<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">No se efectuar\u00e1n entregas los d\u00edas feriados. Las entregas de campa\u00f1as especiales tienen los siguientes horarios: de 8:00 a.m a 2:00 p.m. Estos horarios y las campa\u00f1as para las que aplican se comunicar\u00e1n oportunamente y se indicar\u00e1n en cada una de las ofertas que participe en la campa\u00f1a en cuesti\u00f3n.<\/span><\/span>\n\n2.\u00a0\u00a0\u00a0\u00a0 Para acceder al servicio de delivery, el cliente (con el cup\u00f3n recibido) deber\u00e1 ingresar los datos requeridos en www.ofertopdelivery.pe. Para dicho proceso el cliente tendr\u00e1 un plazo no mayor a 48 horas, luego de haber recibido el cup\u00f3n de compra en su correo electr\u00f3nico. De no ingresar los datos en ese plazo el servicio de delivery no estar\u00e1 disponible.\n\n3.\u00a0\u00a0\u00a0\u00a0 Para el servicio de delivery el cliente deber\u00e1 facilitar la informaci\u00f3n necesaria para realizar la entrega. La direcci\u00f3n de env\u00edo y las referencias registradas por el usuario\u00a0<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">ser\u00e1n de exclusiva responsabilidad del mismo.\u00a0<\/span><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">Cualquier error de ingreso de datos por parte del cliente, ocasionar\u00e1 que el Delivery no pueda ser concretado.<\/span><\/span>\n\n4.\u00a0\u00a0\u00a0\u00a0 Las entregas se realizar\u00e1n dentro del \u00e1rea de Lima Metropolitana. Salvo, casos especiales que ser\u00e1n indicados dentro de las condiciones de la oferta.\n\n5.\u00a0\u00a0\u00a0\u00a0 La entrega del producto se realizar\u00e1 en un plazo de hasta 10 d\u00edas \u00fatiles, a partir de que el cliente ingrese sus datos en\u00a0<a href=\"http:\/\/www.ofertopdelivery.pe\/\"><span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">www.ofertopdelivery.pe<\/span><\/span><\/span><\/a><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0y reciba la confirmaci\u00f3n en su correo electr\u00f3nico. De no haberse cumplido con el registro correcto de los datos del cliente, Ofertop se reserva el derecho de suspender el servicio de delivery. Si el cliente no recibe la confirmaci\u00f3n de registro de datos en su correo electr\u00f3nico, deber\u00eda escribir a\u00a0<\/span><\/span><a href=\"mailto:clientes@ofertop.pe\"><span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">clientes@ofertop.pe<\/span><\/span><\/span><\/a><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0para reportar el hecho y recibir asistencia. Esto deber\u00e1 realizarse en no m\u00e1s de 48 horas luego de haber realizado su compra.<\/span><\/span>\n\n6.\u00a0\u00a0\u00a0El env\u00edo no es nominativo y cualquier persona, mayor de 18 a\u00f1os y debidamente documentada (DNI), podr\u00e1 recibirlo. Para recibir el producto es obligatorio contar con el cup\u00f3n de OferTOP impreso y copia del DNI si no es el titular. Esta a su vez deber\u00e1 firmar en se\u00f1al de conformidad la Gu\u00eda de Entrega correspondiente. No se entregar\u00e1 el producto a personas que se nieguen a firmar esta Gu\u00eda o que no cuenten con su DNI al momento de la entrega. La recepci\u00f3n del producto indica conformidad del estado.\n\n7.\u00a0\u00a0\u00a0El servicio de delivery se realizar\u00e1 en un solo intento. De no poder realizarse la entrega, en cliente deber\u00e1 escribir un correo electr\u00f3nico a\u00a0<a href=\"mailto:clientes@ofertop.pe\"><span style=\"color: #0000ff;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">clientes@ofertop.pe<\/span><\/span><\/span><\/a><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0y coordinar el recojo del producto de las oficinas de OferTOP en los horarios de lunes a viernes de 9:00 a.m. a 1 p.m. y de 2:00 p.m. a 6:00 p.m. El producto estar\u00e1 sujeto a disponibilidad. En ning\u00fan caso el servicio de delivery podr\u00e1 ser reprogramado y tampoco\u00a0<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">se podr\u00e1n aplicar devoluciones asociadas al pago del\u00a0<\/span><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">delivery<\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">.<\/span><\/span><\/span>\n\n8.\u00a0\u00a0\u00a0\u00a0 Los productos Ofertop no est\u00e1n sujetos a devoluciones. En caso de fallas en el producto, el cliente deber\u00e1\u00a0<span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\"><span style=\"text-decoration: underline;\">(en un plazo de 07 d\u00edas \u00fatiles desde la fecha en que se registra la entrega del producto)<\/span><\/span><\/span><span style=\"color: #000000;\"><span style=\"font-family: 'Times New Roman', serif;\">\u00a0comunicarse con Ofertop y hacer la solicitud del mismo. En ning\u00fan caso, la empresa de delivery realiza cambios de productos, este servicio s\u00f3lo entregar\u00e1 el producto sellado y cerrado.<\/span><\/span>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Tue, 12 Aug 2014 16:33:39 +0000","created_by":1,"updated_at":"Tue, 12 Aug 2014 16:33:39 +0000","updated_by":1,"published_at":"","published_by":1},{"id":1712,"title":"Curso Online de Firefox OS en Espa\u00f1ol","slug":"curso-online-de-firefox-os-en-espanol","markdown":"\n\u00bfQue es Firefox OS?\n-------------------\n\n Quizas muchos ya han escuchado sobre este nuevo sistema operativo m\u00f3vil que ha aparecido en el mercado y el cual esta creciendo poco a poco. Firefox OS fue dise\u00f1ado con el prop\u00f3sito de masificar el acceso a Internet a todo el mundo y en especial en los pa\u00edses emergentes. La idea es brindar un Smartphone que tenga el equilibrio entre precio y funcionalidad. Por ende, Firefox OS inicialmente esta que compite con celulares de gama baja y gama media. Este sistema operativo tiene como base Linux y ejecuta apps construidas con HTML5.\u00a0 En otras palabras lo m\u00e1s importante que uno necesita saber para realizar aplicaciones en Firefox OS son tecnolog\u00edas frontend. Estas apps pueden ser subidas al mercado de aplicaciones llamado Firefox Marketplace con simplemente empaquetarlo. Un curso para todos\n-------------------\n\n El equipo de Mozilla Per\u00fa presenta un nuevo curso de Desarrollo de Aplicaciones en Firefox OS para todo Hispanoam\u00e9rica. El curso ser\u00e1 de acceso gratuito y comenzar\u00e1 en septiembre de 2014 y ser\u00e1 dictado a trav\u00e9s de la plataforma de ense\u00f1anza Devcode.la. Este curso est\u00e1 dise\u00f1ado para entrenar a desarrolladores web en los principios de desarrollo de aplicaciones en Firefox OS. Es un curso online donde se presentar\u00e1n conceptos alrededor del desarrollo web m\u00f3vil y su aplicaci\u00f3n en Firefox OS. Al finalizar el curso los estudiantes estar\u00e1n en capacidad de desarrollar web apps m\u00f3viles y publicarlas en el Firefox Marketplace. Este curso NO tendr\u00e1 una introducci\u00f3n al desarrollo web. Por ello, para llevar este curso es necesario tener conocimientos de programaci\u00f3n, as\u00ed como [HTML](https:\/\/developer.mozilla.org\/docs\/Web\/HTML?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn \"HTML\"), [CSS](https:\/\/developer.mozilla.org\/docs\/Web\/CSS?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn \"CSS\") y [JavaScript](https:\/\/developer.mozilla.org\/docs\/JavaScript?utm_source=wordpress%20blog&utm_medium=content%20link&utm_campaign=promote%20mdn \"JavaScript\") b\u00e1sico o intermedio. Es deseable tener un dispositivo con Firefox OS para pruebas reales de las aplicaciones, pero se podr\u00e1 usar el Firefox OS Simulator a partir de la versi\u00f3n 1.3.\n\n El curso iniciar\u00e1 con una breve introducci\u00f3n al desarrollo m\u00f3vil en m\u00faltiples dispositivos, para luego entrar de lleno al desarrollo de Firefox OS: tipos de aplicaciones, empaquetado de aplicaciones, acceso al hardware de los m\u00f3viles y a las aplicaciones base de Firefox OS, hasta llegar a la publicaci\u00f3n en el Firefox Marketplace. Para inscribirte debes acceder a [mozilla.pe\/curso](http:\/\/mozilla.pe\/curso). Las clases inician en Septiembre 2014.\n","html":"<h2>\u00bfQue es Firefox OS?<\/h2>\r\nQuizas muchos ya han escuchado sobre este nuevo sistema operativo m\u00f3vil que ha aparecido en el mercado y el cual esta creciendo poco a poco. Firefox OS fue dise\u00f1ado con el prop\u00f3sito de masificar el acceso a Internet a todo el mundo y en especial en los pa\u00edses emergentes. La idea es brindar un Smartphone que tenga el equilibrio entre precio y funcionalidad. Por ende, Firefox OS inicialmente esta que compite con celulares de gama baja y gama media.\r\n\r\nEste sistema operativo tiene como base Linux y ejecuta apps construidas con HTML5.\u00a0 En otras palabras lo m\u00e1s importante que uno necesita saber para realizar aplicaciones en Firefox OS son tecnolog\u00edas frontend. Estas apps pueden ser subidas al mercado de aplicaciones llamado Firefox Marketplace con simplemente empaquetarlo.\r\n<h2>Un curso para todos<\/h2>\r\nEl equipo de Mozilla Per\u00fa presenta un nuevo curso de Desarrollo de Aplicaciones en Firefox OS para todo Hispanoam\u00e9rica. El curso ser\u00e1 de acceso gratuito y comenzar\u00e1 en septiembre de 2014 y ser\u00e1 dictado a trav\u00e9s de la plataforma de ense\u00f1anza Devcode.la.\r\n\r\nEste curso est\u00e1 dise\u00f1ado para entrenar a desarrolladores web en los principios de desarrollo de aplicaciones en Firefox OS. Es un curso online donde se presentar\u00e1n conceptos alrededor del desarrollo web m\u00f3vil y su aplicaci\u00f3n en Firefox OS. Al finalizar el curso los estudiantes estar\u00e1n en capacidad de desarrollar web apps m\u00f3viles y publicarlas en el Firefox Marketplace.\r\n<p dir=\"ltr\">Este curso NO tendr\u00e1 una introducci\u00f3n al desarrollo web. Por ello, para llevar este curso es necesario tener conocimientos de programaci\u00f3n, as\u00ed como <a title=\"HTML\" href=\"https:\/\/developer.mozilla.org\/docs\/Web\/HTML?utm_source=wordpress%20blog&amp;utm_medium=content%20link&amp;utm_campaign=promote%20mdn\" target=\"_blank\">HTML<\/a>, <a title=\"CSS\" href=\"https:\/\/developer.mozilla.org\/docs\/Web\/CSS?utm_source=wordpress%20blog&amp;utm_medium=content%20link&amp;utm_campaign=promote%20mdn\" target=\"_blank\">CSS<\/a> y <a title=\"JavaScript\" href=\"https:\/\/developer.mozilla.org\/docs\/JavaScript?utm_source=wordpress%20blog&amp;utm_medium=content%20link&amp;utm_campaign=promote%20mdn\" target=\"_blank\">JavaScript<\/a> b\u00e1sico o intermedio. Es deseable tener un dispositivo con Firefox OS para pruebas reales de las aplicaciones, pero se podr\u00e1 usar el Firefox OS Simulator a partir de la versi\u00f3n 1.3.<\/p>\r\nEl curso iniciar\u00e1 con una breve introducci\u00f3n al desarrollo m\u00f3vil en m\u00faltiples dispositivos, para luego entrar de lleno al desarrollo de Firefox OS: tipos de aplicaciones, empaquetado de aplicaciones, acceso al hardware de los m\u00f3viles y a las aplicaciones base de Firefox OS, hasta llegar a la publicaci\u00f3n en el Firefox Marketplace.\r\n\r\nPara inscribirte debes acceder a <a href=\"http:\/\/mozilla.pe\/curso\" target=\"_blank\">mozilla.pe\/curso<\/a>. Las clases inician en Septiembre 2014.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/08\/firefox.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":10,"created_at":"Thu, 28 Aug 2014 00:30:06 +0000","created_by":1,"updated_at":"Thu, 28 Aug 2014 00:37:25 +0000","updated_by":1,"published_at":"Thu, 28 Aug 2014 00:30:06 +0000","published_by":1},{"id":1710,"title":"Animaciones con loop infinito en CSS3","slug":"animaciones-con-loop-infinito-en-css3","markdown":"\nVamos a crear un loading infinito, usando scale in y scale out, para eso usaremos lo siguiente Animation [sourcecode language=\"css\"] animation : scales 0.5s ease inifinite alternate [\/sourcecode] D\u00f3nde: - **scales** : es el nombre de la animaci\u00f3n la cual proviene un animaci\u00f3n creada con keyframes - **0.5s** : es la duraci\u00f3n de la animaci\u00f3n en segundos - **ease** : es el tipo de animaci\u00f3n con la que se trabajara, puede ser ease-in, ease-in-out, ease-out - **infinite** : es el tipo de iteraci\u00f3n que tendr\u00e1 la animaci\u00f3n - **alternate** : es la direcci\u00f3n de la animaci\u00f3n, es el que nos permite hacer que nuestra animaci\u00f3n funcione en reversa [aqu\u00ed esta el truco] Ademas tendr\u00e1s que declara un keyframes que es el que en si hace la animaci\u00f3n, ya que el animation solo ejecuta la animaci\u00f3n [sourcecode language=\"css\"] @keyframes scales{ from{ transform : scale(0.8) } transform : scale(1.1) } [\/sourcecode] **Si no colocas alternate, tu animaci\u00f3n no sera cool** [sourcecode language=\"css\"] animation : scales 0.5s ease infinite [\/sourcecode] Sin el alternate, tu animaci\u00f3n solo funcionara de ida y tendr\u00e1 un corte en seco, para volver hacerse la animaci\u00f3n y en verdad no se ve muy bien.\n\n### En conclusi\u00f3n\n\n**El secreto es en colocar infinite y alternate** A manera de pr\u00e1ctica me puse a crear un loading con puro animation y me quedo esto, aunque ir\u00e9 probando otras ideas See the Pen [Animation with Infinite Loop in CSS3](http:\/\/codepen.io\/erikfloresq\/pen\/cKgBy\/) by Erik Flores ([@erikfloresq](http:\/\/codepen.io\/erikfloresq)) on [CodePen](http:\/\/codepen.io).\n\n<script async=\"\" src=\"\/\/codepen.io\/assets\/embed\/ei.js\"><\/script>\n","html":"Vamos a crear un loading infinito, usando scale in y scale out, para eso usaremos lo siguiente\r\n\r\nAnimation\r\n\r\n[sourcecode language=\"css\"]\r\n  animation : scales 0.5s ease inifinite alternate\r\n[\/sourcecode]\r\n\r\nD\u00f3nde:\r\n- <strong>scales<\/strong> : es el nombre de la animaci\u00f3n la cual proviene un animaci\u00f3n creada con keyframes\r\n- <strong>0.5s<\/strong> : es la duraci\u00f3n de la animaci\u00f3n en segundos\r\n- <strong>ease<\/strong> : es el tipo de animaci\u00f3n con la que se trabajara, puede ser ease-in, ease-in-out, ease-out\r\n- <strong>infinite<\/strong> : es el tipo de iteraci\u00f3n que tendr\u00e1 la animaci\u00f3n\r\n- <strong>alternate<\/strong> : es la direcci\u00f3n de la animaci\u00f3n, es el que nos permite hacer que nuestra animaci\u00f3n funcione en reversa [aqu\u00ed esta el truco]\r\n\r\nAdemas tendr\u00e1s que declara un keyframes que es el que en si hace la animaci\u00f3n, ya que el animation solo ejecuta la animaci\u00f3n\r\n\r\n[sourcecode language=\"css\"]\r\n  @keyframes scales{\r\n    from{\r\n     transform : scale(0.8)\r\n    }\r\n    transform : scale(1.1)\r\n  }\r\n[\/sourcecode]\r\n\r\n<strong>Si no colocas alternate, tu animaci\u00f3n no sera cool<\/strong>\r\n\r\n[sourcecode language=\"css\"]\r\n  animation : scales 0.5s ease infinite\r\n[\/sourcecode]\r\n\r\nSin el alternate, tu animaci\u00f3n solo funcionara de ida y tendr\u00e1 un corte en seco, para volver hacerse la animaci\u00f3n y en verdad no se ve muy bien.\r\n\r\n<h3>En conclusi\u00f3n<\/h3>\r\n\r\n<strong>El secreto es en colocar infinite y alternate<\/strong>\r\n\r\nA manera de pr\u00e1ctica me puse a crear un loading con puro animation y me quedo esto, aunque ir\u00e9 probando otras ideas\r\n\r\n<p data-height=\"268\" data-theme-id=\"0\" data-slug-hash=\"cKgBy\" data-default-tab=\"result\" class='codepen'>See the Pen <a href='http:\/\/codepen.io\/erikfloresq\/pen\/cKgBy\/'>Animation with Infinite Loop in CSS3<\/a> by Erik Flores (<a href='http:\/\/codepen.io\/erikfloresq'>@erikfloresq<\/a>) on <a href='http:\/\/codepen.io'>CodePen<\/a>.<\/p>\r\n<script async src=\"\/\/codepen.io\/assets\/embed\/ei.js\"><\/script>\r\n\r\n\r\n","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/08\/animacionesLoopCss3.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":3,"created_at":"Fri, 29 Aug 2014 11:04:44 +0000","created_by":1,"updated_at":"Tue, 23 Sep 2014 08:49:32 +0000","updated_by":1,"published_at":"Fri, 29 Aug 2014 11:04:44 +0000","published_by":1},{"id":1669,"title":"Gulp.js en espa\u00f1ol - tutorial b\u00e1sico y primeros pasos","slug":"gulp-js-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos","markdown":"\nEn este art\u00edculo, vamos a aprender a utilizar Gulp.js para mejorar y acelerar nuestro flujo de trabajo al desarrollar y tratar de entender su funcionamiento.\n\n\u00bfQu\u00e9 es Gulp.js?\n----------------\n\n Gulp.js es un build system(sistema de construcci\u00f3n) que permite automatizar tareas comunes de desarrollo, tales como la minificaci\u00f3n de c\u00f3digo JavaScript, recarga del navegador, compresi\u00f3n de im\u00e1genes, validaci\u00f3n de sintaxis de c\u00f3digo y un sin fin de tareas m\u00e1s. Como ver\u00e1s no importa si eres un desarrollador Front-End, Back-End \u00f3 los dos a la vez. Si hoy en d\u00eda no quieres perder tiempo realizando tareas comunes \"manualmente\", es momento de que aprendas a usar un automatizador como Gulp.js. Adicionalmente Gulp.js est\u00e1 constru\u00eddo con Javascript, funciona sobre Node.js y es Open Source, as\u00ed que su c\u00f3digo fuente lo puedes encontrar en [github](https:\/\/github.com\/gulpjs\/gulp\/ \"The streaming build system http:\/\/gulpjs.com\"). \u00bfPor qu\u00e9 te deber\u00eda interesar usar Gulp.js?\n-------------------------------------------\n\n Porque hoy en d\u00eda el flujo de trabajo de un desarrollador se ha vuelto m\u00e1s complejo, usamos muchas herramientas de desarrollo, por lo cual configurar cada tarea y ejecutarla \"manualmente\" y por separado requiere demasiado tiempo. Porque Gulp.js no s\u00f3lo soluciona este problema sino que le aporta mejoras, convirtiendose en una herramienta que tiene pr\u00e1cticamente todo en uno, as\u00ed mismo nos permite administrar y controlar todas esas tareas en un solo lugar. Porque Gulp.js prefiere el **c\u00f3digo sobre la configuraci\u00f3n**, esto no s\u00f3lo lo hace muy f\u00e1cil para escribir tareas, sino tambi\u00e9n lo hace m\u00e1s simple de leer y mantener. Porque Gulp.js tiene directrices estrictas para la creaci\u00f3n de sus plugins, lo cual asegura que estos sean simples y que funcionen como se espera. Solo por mencionarlo, una de las directrices es la siguiente: **\"Un plugin s\u00f3lo debe hacer una cosa y hacerla bien\"**. Esta directriz ha sido muy positiva para los usuarios de Gulp.js, lo comprobaremos m\u00e1s adelante cuando veamos como configurar una tarea con Gulp.js. \u00bfC\u00f3mo funciona Gulp.js?\n-----------------------\n\n Gulp.js utiliza el [m\u00f3dulo Stream de Node.js](http:\/\/nodejs.org\/api\/stream.html \"Node.js Stream\"), lo cual lo hace m\u00e1s r\u00e1pido para construir, a diferencia de Grunt.js. Gulp.js no necesita escribir archivos y\/o carpetas temporales en el disco duro, lo cual supone que realizar\u00e1 las mismas tareas que [Grunt.js](http:\/\/frontend-labs.com\/146--gruntjs-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos \"Grunt.js\") pero en menor tiempo. Gulp.js utiliza el m\u00e9todo <span class=\"inline_code\">pipe()<\/span>, este m\u00e9todo obtiene todos los datos de un Stream legible(readable) y lo escribe en destino que le indiquemos \u00f3 de lo contrario lo entrega o sirve hacia otro pipe. En la siguiente imagen veremos como **Grunt.js** manipula los archivos al realizar\u00a0sus tareas: ![grunt-file-manipulation](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/08\/grunt-file-manipulation.png) Y en esta veremos como **Gulp.js** manipula los archivos al realizar sus tareas: ![gulp-file-manipulation](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/08\/gulp-file-manipulation.png) Como podemos ver, aunque los 2 hicieron la misma tarea **Gulp.js** no escribi\u00f3 archivos temporales en el disco duro. Gulp.js realiz\u00f3 4 operaciones y en cambio Grunt.js realiz\u00f3 8 operaciones. Gulp.js utiliza el poder del paquete Node.js [vinyl-fs](https:\/\/github.com\/wearefractal\/vinyl-fs \"Adaptador de vinyl para el sistema de archivos\") para leer y escribir Streams. Gulp.js tambi\u00e9n utiliza un paquete Node.js para la secuenciaci\u00f3n, ejecuci\u00f3n de tareas y dependencias en m\u00e1xima concurrencia, llamado [Orchestrator](https:\/\/github.com\/orchestrator\/orchestrator \"Orchestrator - secuenciaci\u00f3n, ejecuci\u00f3n de tareas y dependencias en m\u00e1xima concurrencia\"). M\u00e1s adelante veremos con mayor detalle como trabajan los Streams de Node.js. \u00bfC\u00f3mo instalar Gulp.js?\n-----------------------\n\n Para instalar Gulp.js el \u00fanico requisito es tener instalado [Node.js](http:\/\/nodejs.org\/ \"Node.js\"). si usas Linux Ubuntu y a\u00fan no lo tienes instalado este [post](http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux \"Como instalar Nodejs en Debian Linux\") te puede servir. ### Instalando Gulp.js de forma global en nuestro sistema\n\n\tnpm install -g gulp\n\n Si est\u00e1s usando Linux o Mac, tal vez necesites anteponer la palabra <span class=\"inline_code\">sudo<\/span> para poder ejecutar este comando con los permisos de administrador, as\u00ed: \tsudo npm install -g gulp\n\n Verificamos que Gulp.js ha sido instalado correctamente. \tgulp -v\n\n Si lo tenemos instalado correctamente, nos mostrar\u00e1 lo siguiente: \tCLI version 3.8.6\n\tLocal version undefined\n\n Donde **CLI version** es la versi\u00f3n de Gulp.js instalada en nuestro sistema y **Local version** es la versi\u00f3n de Gulp.js instalada en nuestro proyecto local, pero como a\u00fan no hemos creado nuestro proyecto nos saldr\u00e1 undefined. \u00bfC\u00f3mo usar Gulp.js?\n-------------------\n\n Una vez instalado en nuestro sistema estamos listos para crear nuestro primer proyecto usando Gulp.js, nuestro peque\u00f1o proyecto concatenar\u00e1 dos archivos .js en uno solo y luego lo minificar\u00e1. As\u00ed que configuraremos 2 tareas(concatenar y minificar), todo esto contenido en una tarea llamada \"demo\". Creamos una carpeta llamada: <span class=\"inline_folder\">gulp-primeros-pasos<\/span>, ingresamos a esa carpeta mediante terminal. Luego all\u00ed dentro creamos nuestro archivo: <span class=\"inline_file\">gulpfile.js<\/span>, que es el archivo que Gulp.js necesita para saber que tareas realizar\u00e1 y de momento no le podremos ning\u00fan contenido. Luego escribimos lo siguiente(en este punto suponemos que tenemos instalado Node.js): \tnpm init\n\n Npm nos pedir\u00e1 los datos de nuestro proyecto, ya que en esta ocasi\u00f3n s\u00f3lo estamos haciendo un demo. Simplemente presionaremos Enter a todas las preguntas. Con esto, Npm nos debe haber creado un archivo llamado: <span class=\"inline_file\">package.json<\/span>, que contendr\u00e1 algo parecido a lo siguiente: \t{\n\t  \"name\": \"gulp-primeros-pasos\",\n\t  \"version\": \"0.0.1\",\n\t  \"description\": \"Gulp: Primeros pasos\",\n\t  \"main\": \"gulpfile.js\",\n\t  \"author\": \"jansanchez\",\n\t  \"license\": \"MIT\"\n\t}\n\n Ahora agregaremos las dependencias de desarrollo a nuestro proyecto, la primera a instalar ser\u00e1: **gulp**, as\u00ed que escribimos lo siguiente en nuestra terminal: \tnpm install --save-dev gulp\n\n Luego instalamos: [gulp-concat](https:\/\/www.npmjs.org\/package\/gulp-concat \"Gulp plugin para concatenar archivos.\")\tnpm install --save-dev gulp-concat\n\n Y finalmente instalamos: [gulp-uglify](https:\/\/www.npmjs.org\/package\/gulp-uglify \"Gulp plugin para minificar archivos mediante UglifyJS.\")\tnpm install --save-dev gulp-uglify\n\n Tengamos en cuenta que s\u00ed no agregamos el par\u00e1metro: <span class=\"inline_code\">--save-dev<\/span>, entonces Npm no agregar\u00e1 este paquete como una dependencia de desarrollo de nuestro proyecto y mucho menos lo agregar\u00e1 a nuestro archivo package.json. Como podremos observar, nuestro archivo package.json a cambiado y deber\u00eda contener algo parecido a lo siguiente: \t{\n\t  \"name\": \"gulp-primeros-pasos\",\n\t  \"version\": \"0.0.1\",\n\t  \"description\": \"Gulp: Primeros pasos\",\n\t  \"main\": \"gulpfile.js\",\n\t  \"author\": \"jansanchez\",\n\t  \"license\": \"MIT\",\n\t  \"devDependencies\": {\n\t    \"gulp\": \"^3.8.7\",\n\t    \"gulp-concat\": \"^2.3.4\",\n\t    \"gulp-uglify\": \"^0.3.1\"\n\t  }\n\t}\n\n Como vemos, se agreg\u00f3 la clave <span class=\"inline_code\">devDependencies<\/span> y en su interior se comienzan a guardar nuestras dependencias de desarrollo y la versi\u00f3n que hemos instalado localmente. Luego vamos a crear las siguientes carpetas y archivos: Creamos la carpeta <span class=\"inline_folder\">js<\/span> y dentro de esta carpeta crearemos la carpeta <span class=\"inline_folder\">source<\/span>. Dentro de la carpeta <span class=\"inline_folder\">source<\/span> crearemos el archivo <span class=\"inline_file\">1.js<\/span> y le agregaremos el siguiente contenido: \t\/\/ contenido del archivo 1.js\n\t\n\tvar sumar = function (a, b){\n\t  return a + b;\n\t};\n\n Nuevamente dentro de la carpeta <span class=\"inline_folder\">source<\/span> crearemos el archivo <span class=\"inline_file\">2.js<\/span> y le agregaremos el siguiente contenido: \t\/\/ contenido del archivo 2.js\n\t\n\tvar restar = function (a, b){\n\t  return a - b;\n\t};\n\n Ahora vamos a poner el siguiente contenido a nuestro archivo <span class=\"inline_file\">gulpfile.js<\/span>: \t\/*\n\t* Dependencias\n\t*\/\n\tvar gulp = require('gulp'),\n\t  concat = require('gulp-concat'),\n\t  uglify = require('gulp-uglify');\n\t\n\t\/*\n\t* Configuraci\u00f3n de la tarea 'demo'\n\t*\/\n\tgulp.task('demo', function () {\n\t  gulp.src('js\/source\/*.js')\n\t  .pipe(concat('todo.js'))\n\t  .pipe(uglify())\n\t  .pipe(gulp.dest('js\/build\/'))\n\t});\n\n Con esto ya tenemos todo configurado, as\u00ed que para ponerlo a prueba en nuestra terminal escribimos lo siguiente: \tgulp demo\n\n Y si todo anda bien, nos dar\u00e1 el siguiente mensaje: \t[11:23:09] Using gulpfile ~\/htdocs\/gulp-primeros-pasos\/gulpfile.js\n\t[11:23:09] Starting 'demo'...\n\t[11:23:09] Finished 'demo' after 9 ms\n\n El cual nos indica que la tarea **demo** se ejecut\u00f3 con \u00e9xito en 9 milisegundos. Para comprobar si se ejecutaron las 2 tareas requeridas, nos dirigimos a la carpeta <span class=\"inline_folder\">js\/build<\/span> y abrimos el archivo <span class=\"inline_file\">todo.js<\/span> y nos debe mostrar el siguiente contenido: \tvar sumar=function(r,n){return r+n},restar=function(r,n){return r-n};\n\n Como vemos, con unas simples y limpias lineas de c\u00f3digo hemos realizado 2 tareas de desarrollo comunes(concatenar y minificar archivos .js). Para esto usamos 2 plugins de Gulp.js, la buena noticia es que actualmente existen m\u00e1s de 650 plugins para Gulp.js, as\u00ed que imag\u00ednate todo lo que puedes automatizar en tu flujo de trabajo con Gulp.js. Analizando el gulpfile.js\n-------------------------\n\n Ahora vamos a analizar el c\u00f3digo que escribimos en nuestro <span class=\"inline_file\">gulpfile.js<\/span> para entender un poco m\u00e1s como funciona Gulp.js. Primero para llevar a cabo las tareas que deseamos, requerimos los siguientes paquetes: gulp, gulp-concat y gulp-uglify, as\u00ed: \t\/*\n\t* Dependencias\n\t*\/\n\tvar gulp = require('gulp'),\n\t  concat = require('gulp-concat'),\n\t  uglify = require('gulp-uglify');\n\nAPI\n---\n\n Gulp.js tiene una peque\u00f1a API, esto te permitir\u00e1 aprender Gulp.js r\u00e1pidamente. ### gulp.task()\n\n Con el m\u00e9todo <span class=\"inline_code\">gulp.task()<\/span> definimos una tarea, este m\u00e9todo toma 3 argumentos: **el nombre de la tarea**, **la \u00f3 las tareas de las que depende esta tarea** y **la funci\u00f3n que ejecutar\u00e1 al llamar esta tarea**. En nuestro ejemplo s\u00f3lo usamos 2 par\u00e1metros: el nombre y la funci\u00f3n, as\u00ed: \t\/*\n\t* Configuraci\u00f3n de la tarea 'demo'\n\t*\/\n\tgulp.task('demo', function () {\n\t  \/\/ Contenido de la tarea 'demo'\n\t});\n\n Con lo cual declaramos \"demo\" como nombre de la tarea y dentro escribimos lo que deseamos que haga nuestra tarea. As\u00ed que si queremos llamar esta tarea tan solo escribimos en nuestra terminal: \tgulp demo\n\n#### Lista de tareas\n\n Una tarea tambi\u00e9n puede actuar como una lista de tareas, supongamos que queremos definir una tarea que corra otras 3 tareas por ejemplo: **im\u00e1genes**, **css** y **js**. Entonces escribir\u00edamos lo siguiente: \tgulp.task('estaticos', ['imagenes', 'css', 'js']);\n\n Lo que quiere decir que al ejecutar la tarea \"estaticos\" con el comando <span class=\"inline_code\">gulp estaticos<\/span> se ejecutar\u00e1n estas 3 tareas. El detalle es que estas tareas correran as\u00edncronamente, osea que correr\u00e1n todas juntas al mismo tiempo sin ning\u00fan orden de ejecuci\u00f3n. #### Tareas como dependencia\n\n Si deseamos que una tarea se ejecute **s\u00ed y solo s\u00ed** otra tarea haya terminado antes, entonces podemos hacer lo siguiente: \tgulp.task('css', ['imagenes'], function () {\n\t  \/*\n\t  * Aqu\u00ed ir\u00eda el contenido de mi tarea 'css'\n\t  * Que se ejecutar\u00e1 solo cuando la tarea\n\t  * 'imagenes' haya terminado.\n\t  *\/\n\t});\n\n Entonces, cuando corramos la tarea \"css\", Gulp.js ejecutar\u00e1 primero la tarea \"imagenes\", esperar\u00e1 a que esta tarea termine y luego reci\u00e9n ejecutar\u00e1 la tarea \"css\". #### Tarea por defecto(default)\n\n Gulp.js nos permite definir una tarea por defecto, que corra tan solo al escribir el comando <span class=\"inline_code\">gulp<\/span>. Esto se puede hacer tan solo poniendole a la tarea el nombre de <span class=\"inline_code\">default<\/span>, as\u00ed: \tgulp.task('default', function () {\n\t  \/*\n\t  * C\u00f3digo de nuestra tarea por defecto.\n\t  *\/\n\t});\n\n Y claro, tambi\u00e9n puedes hacer que tu tarea por defecto sea una lista de tareas, as\u00ed: \tgulp.task('default', ['css', 'js']);\n\n Esta tarea ejecutar\u00e1 las tarea 'css' y 'js', tan solo escribiendo en nuestra terminal: \tgulp\n\n### gulp.src()\n\n El m\u00e9todo <span class=\"inline_code\">gulp.src()<\/span> toma como par\u00e1metro un valor **glob** es decir, una cadena que coincida con uno o m\u00e1s archivos usando los patrones que usa el int\u00e9rprete de comandos de unix(shell) y retorna un stream que puede ser \"pipeado\" a un plugin adicional \u00f3 hacia el m\u00e9todo <span class=\"inline_code\">gulp.dest()<\/span>. Este par\u00e1metro puede ser una cadena o una colecci\u00f3n(Array) de valores glob. Gulp.js usa el paquete de Node.js [node-glob](https:\/\/github.com\/isaacs\/node-glob \"node-glob\") para obtener los archivos especificados en \u00e9l \u00f3 los globs ingresados. #### Ejemplos de globs\n\n- <span class=\"inline_code\">js\/source\/1.js<\/span> coincide exactamente con el archivo.\n- <span class=\"inline_code\">js\/source\/*.js<\/span> coincide con los archivos que terminen en .js dentro de la carpeta <span class=\"inline_code\">js\/source<\/span>.\n- <span class=\"inline_code\">js\/**\/*.js<\/span> coincide con los archivos que terminen en .js dentro de la carpeta <span class=\"inline_code\">js<\/span> y dentro de todas sus sub-carpetas.\n- <span class=\"inline_code\">!js\/source\/3.js<\/span> Excluye especificamente el archivo <span class=\"inline_file\">3.js.<\/span>\n- <span class=\"inline_code\">static\/*.+(js|css)<\/span> coincide con los archivos que terminen en .js \u00f3 .css dentro de la carpeta <span class=\"inline_code\">static\/<\/span>\n\n Existen m\u00e1s patrones, los puedes revisar desde la documentaci\u00f3n de la librer\u00eda [minimatch](https:\/\/github.com\/isaacs\/minimatch \"node-glob\"). As\u00ed que tienes la oportunidad de realizar todas las combinaciones posibles, seg\u00fan lo necesites. Como en nuestra demo, necesitabamos encontrar todos los archivos que terminen en .js dentro de la carpeta <span class=\"inline_folder\">js\/source<\/span>, as\u00ed: \tgulp.src('js\/source\/*.js')\n\n Cada vez que Gulp.js encuentre un archivo que coincida con nuestro patr\u00f3n, lo ir\u00e1 metiendo dentro de un Stream, que ser\u00e1 como una colecci\u00f3n de archivos. Claro, respetando las propiedades de cada archivo(ruta, etc). Entonces podemos decir que tendremos todos esos archivos con sus respectivas propiedades dentro de un Stream, Este Stream puede ser manipulado por Gulp.js. #### el m\u00e9todo pipe() de Node.js\n\n El m\u00e9todo <span class=\"inline_code\">pipe()<\/span> puede leer, ayudar a transformar y grabar los datos de un Stream. Es por eso que en nuestro ejemplo usamos el m\u00e9todo <span class=\"inline_code\">pipe()<\/span> 3 veces. La primera vez lo usamos para leer el Stream y se lo pasamos al plugin \"concat\" para que este realize la concatenaci\u00f3n y as\u00ed transforme los datos del Stream, as\u00ed: \t.pipe(concat('todo.js'))\n\n La segunda vez lo usamos para leer los datos actuales(js concatenado) y se lo pasamos al plugin \"uglify\", para que realize la minificaci\u00f3n del archivo concatenado. Todo esto sin escribir en el disco ning\u00fan archivo temporal, as\u00ed: \t.pipe(uglify())\n\n La tercera vez se lo pasamos a el m\u00e9todo <span class=\"inline_code\">gulp.dest()<\/span>, as\u00ed que veamos que hace este m\u00e9todo. ### gulp.dest()\n\n Canaliza y escribe archivos desde un Stream, por lo que puede canalizar a varias carpetas. Crear\u00e1 las carpetas que no existan y retornar\u00e1 el Stream, por si deseamos realizar alguna acci\u00f3n m\u00e1s. En pocas palabras, sirve para escribir los datos actuales de un Stream. Y en nuestro ejemplo lo usamos as\u00ed: \t.pipe(gulp.dest('js\/build\/'))\n\n Con lo cual escribimos los datos resultantes del Stream dentro de la carpeta <span class=\"inline_folder\">js\/build\/<\/span>. El c\u00f3digo final nos qued\u00f3 as\u00ed: \t\/*\n\t* Dependencias\n\t*\/\n\tvar gulp = require('gulp'),\n\t  concat = require('gulp-concat'),\n\t  uglify = require('gulp-uglify');\n\t\n\t\/*\n\t* Configuraci\u00f3n de la tarea 'demo'\n\t*\/\n\tgulp.task('demo', function () {\n\t  gulp.src('js\/source\/*.js')\n\t  .pipe(concat('todo.js'))\n\t  .pipe(uglify())\n\t  .pipe(gulp.dest('js\/build\/'))\n\t});\n\n As\u00ed como realiz\u00e9 2 tareas consecutivas, con Gulp.js se pueden realizar muchas m\u00e1s. ### gulp.watch()\n\n Ver archivos y hacer algo cuando se modifique un archivo. Esto siempre devuelve un EventEmitter que emite los eventos de cambio. Tiene 2 formas de usar: <span class=\"inline_code\">gulp.watch(glob, tareas)<\/span> \u00f3 <span class=\"inline_code\">gulp.watch(glob, callback)<\/span>. \tgulp.watch('js\/source\/*.js', ['js']);\n\n Con lo cual, cada vez que se modifique un archivo .js que se encuentre dentro de la carpeta <span class=\"inline_folder\">js\/source\/<\/span> autom\u00e1ticamente se ejecutar\u00e1 la tarea <span class=\"inline_code\">js<\/span>. \tgulp.watch('js\/source\/*.js', function(){\n\t  \/*\n\t  * Aqu\u00ed ir\u00eda el c\u00f3digo de la acci\u00f3n que deseas realizar,\n\t  * Cuando hayan cambios en dichos archivos.\n\t  *\n\t  * Tambi\u00e9n podr\u00edas ejecutar una tarea mediante el m\u00e9todo\n\t  * gulp.start('js')\n\t  *\n\t  * Pero este m\u00e9todo no es oficial, le pertenece al\n\t  * paquete 'Orchestrator' ya que Gulp hereda los \n\t  * m\u00e9todos de 'Orchestrator'.\n\t  *\/  \n\t});\n\n Con esto ya podemos usar el API de Gulp.js con mucha facilidad. Plugins\n-------\n\n Como dije anteriormente Gulp.js tiene alrededor de 700 plugins \"oficiales\" y otros cuantos no-oficiales, los plugins \"oficiales\" los puedes encontrar en la [p\u00e1gina de plugins](http:\/\/gulpjs.com\/plugins\/ \"Gulp.js - Plugins\") de Gulp.js o buscando con la palabra clave <span class=\"inline_code\">gulpplugin<\/span> en [npm](https:\/\/www.npmjs.org\/ \"Node Packaged Modules\"). Actualmente existen plugins para cas\u00ed todo lo que se necesita al desarrollar, si deseas puedes pasar por nuestro post sobre los [plugins](http:\/\/frontend-labs.com\/1752--gulp-js-plugins-como-configurar-tareas \"Plugins de Gulp.js\") m\u00e1s usados de Gulp.js y sus configuraciones b\u00e1sicas. La mayor\u00eda de los plugins son bastante f\u00e1ciles de usar, tienen una buena documentaci\u00f3n y se ejecutan de la misma forma (mediante la canalizaci\u00f3n de un Stream de objetos de archivo). Estos plugins normalmente modifican los archivos (aunque algunos, como validadores, no lo har\u00e1n) y devuelven los archivos nuevos que se pasar\u00e1n al siguiente plugin en un Stream. Por ejemplo digamos que en ejemplo que ten\u00edamos quiero agregarle la funcionalidad de validaci\u00f3n de sintaxis, entonces har\u00edamos lo siguiente: \tnpm install --save-dev gulp-jshint\n\n Y luego nuestro gulpfile.js quedar\u00eda as\u00ed: \t\/*\n\t* Dependencias\n\t*\/\n\tvar gulp = require('gulp'),\n\t  jshint = require('gulp-jshint'),\n\t  concat = require('gulp-concat'),\n\t  uglify = require('gulp-uglify');\n\t\n\t\/*\n\t* Configuraci\u00f3n de la tarea 'demo'\n\t*\/\n\tgulp.task('demo', function () {\n\t  gulp.src('js\/source\/*.js')\n\t    .pipe(jshint())\n\t    .pipe(jshint.reporter('default'))\n\t    .pipe(concat('todo.js'))\n\t    .pipe(uglify())\n\t    .pipe(gulp.dest('js\/build\/'))\n\t});\n\n Solo agreg\u00e9 3 lineas especificas a mi gulpfile.js y ya estoy realizando otra tarea m\u00e1s sobre los mismos archivos, es por eso que es m\u00e1s simple que Grunt.js, donde no puedes codificar sino que tienes que poner en el objeto JSON tu configuraci\u00f3n, lo cual te limita mucho y hace que generes un archivo de configuraci\u00f3n muy grande y siempre llega a verse muy desordenado. Dejo en [github](https:\/\/github.com\/jansanchez\/gulp-primeros-pasos \"Github - Gulp primeros pasos.\") el repositorio del ejemplo que trabajamos en este art\u00edculo. Sobre los Pipes en unix\n-----------------------\n\n En unix, los comandos bash pueden \"pipear\" o \"canalizar\" la salida de otro comando bash, permitiendo operar esa informaci\u00f3n antes de ser devuelta, veamos un ejemplo pr\u00e1ctico. Por ejemplo si deseamos averiguar nuestra MAC address en unix ejecutamos el siguiente comando: \tifconfig\n\n Lo cual nos devuelve toda esta informaci\u00f3n: \teth0\n\t  inet addr:192.111.77.27  Bcast:192.111.77.255\n\t  Link encap:Ethernet  HWaddr 00:1b:00:bb:1c:ab\n\t  Mask:255.255.255.0 Scope:Link\n\t  collisions:0 txqueuelen:1000\n\n Pero nosotros no queremos toda esa informaci\u00f3n, sino solamente nuestra MAC address, entonces aqu\u00ed podemos utilizar el poder de los pipes para lograr esto con el siguiente c\u00f3digo. \tifconfig | grep \"HWaddr\"\n\n Ahora s\u00ed obtuvimos especificamente lo que necesitabamos: \tHWaddr 00:1b:00:bb:1c:ab Link encap:Ethernet\n\n### Aclaraciones\n\n- El comando ifconfig, nos devuelve toda la informaci\u00f3n de red en nuestro ordenador.\n- El comando grep, busca las l\u00edneas que contengan una coincidencia con un patr\u00f3n que le pasemos.\n- pipe = |\n\n### Explicaci\u00f3n del proceso\n\n El proceso fue el siguiente: 1. El comando ifconfig gener\u00f3 una respuesta.\n2. Antes que sea escrita \"canalizamos\" esa respuesta usando un pipe.\n3. A esa respuesta le aplicamos el comando grep con el patr\u00f3n: \"HWaddr\".\n4. Y finalmente nos devuelve s\u00f3lo la MAC address.\n\n Todo esto se hizo directamente sobre la respuesta inicial y sin almacenarla, ni escribirla en disco de manera temporal. De la misma forma trabaja Gulp.js, canalizando el stream resultante de una funci\u00f3n o plugin y pasando esa respuesta para ser operada por una nueva funci\u00f3n y as\u00ed sucesivamente. \u00bfExisten otros sistemas de construcci\u00f3n hechos con Javascript?\n--------------------------------------------------------------\n\n Claro que s\u00ed, a continuaci\u00f3n listar\u00e9 los que me parecen m\u00e1s interesantes: - [Fez](http:\/\/fez.github.io\/ \"Fez\") (2014).\n- [Broccoli](https:\/\/github.com\/joliss\/broccoli \"Broccoli\") (2014).\n- [Bud](https:\/\/github.com\/azer\/bud \"Bud\") (2013).\n- [Simplebuild](https:\/\/github.com\/jamesshore\/simplebuild \"Simplebuild\") (2013).\n- [Gruntjs](http:\/\/gruntjs.com\/ \"Gruntjs\") (2012 ).\n- [Brunch](http:\/\/brunch.io\/ \"Brunch\") (2011).\n- [Jake](http:\/\/jakejs.com\/ \"Jake\") (2010).\n\n Espero que este art\u00edculo les haya servido para conocer Gulp.js, si tienen alguna duda, consulta \u00f3 aclaraci\u00f3n solo haganla por correo a [code@frontend-labs.com](mailto:code@frontend-labs.com \"code@frontend-labs.com\") \u00f3 dejen sus comentarios. Aqu\u00ed en Frontend Labs estamos dispuestos a compartir el conocimiento, a ense\u00f1ar y aprender!. \n","html":"En este art\u00edculo, vamos a aprender a utilizar Gulp.js para mejorar y acelerar nuestro flujo de trabajo al desarrollar y tratar de entender su funcionamiento.\n\n<h2>\u00bfQu\u00e9 es Gulp.js?<\/h2>\n\nGulp.js es un build system(sistema de construcci\u00f3n) que permite automatizar tareas comunes de desarrollo, tales como la minificaci\u00f3n de c\u00f3digo JavaScript, recarga del navegador, compresi\u00f3n de im\u00e1genes, validaci\u00f3n de sintaxis de c\u00f3digo y un sin fin de tareas m\u00e1s. \n\nComo ver\u00e1s no importa si eres un desarrollador Front-End, Back-End \u00f3 los dos a la vez. Si hoy en d\u00eda no quieres perder tiempo realizando tareas comunes \"manualmente\", es momento de que aprendas a usar un automatizador como Gulp.js.\n\nAdicionalmente Gulp.js est\u00e1 constru\u00eddo con Javascript, funciona sobre Node.js y es Open Source, as\u00ed que su c\u00f3digo fuente lo puedes encontrar en <a href=\"https:\/\/github.com\/gulpjs\/gulp\/\" title=\"The streaming build system http:\/\/gulpjs.com\" target=\"_blank\">github<\/a>.\n\n<h2>\u00bfPor qu\u00e9 te deber\u00eda interesar usar Gulp.js?<\/h2>\n\nPorque hoy en d\u00eda el flujo de trabajo de un desarrollador se ha vuelto m\u00e1s complejo, usamos muchas herramientas de desarrollo, por lo cual configurar cada tarea y ejecutarla \"manualmente\" y por separado requiere demasiado tiempo.\n\nPorque Gulp.js no s\u00f3lo soluciona este problema sino que le aporta mejoras, convirtiendose en una herramienta que tiene pr\u00e1cticamente todo en uno, as\u00ed mismo nos permite administrar y controlar todas esas tareas en un solo lugar. \n\nPorque Gulp.js prefiere el <strong>c\u00f3digo sobre la configuraci\u00f3n<\/strong>, esto no s\u00f3lo lo hace muy f\u00e1cil para escribir tareas, sino tambi\u00e9n lo hace m\u00e1s simple de leer y mantener.\n\nPorque Gulp.js tiene directrices estrictas para la creaci\u00f3n de sus plugins, lo cual asegura que estos sean simples y que funcionen como se espera.\n\nSolo por mencionarlo, una de las directrices es la siguiente: <strong>\"Un plugin s\u00f3lo debe hacer una cosa y hacerla bien\"<\/strong>. Esta directriz ha sido muy positiva para los usuarios de Gulp.js, lo comprobaremos m\u00e1s adelante cuando veamos como configurar una tarea con Gulp.js.\n\n<h2>\u00bfC\u00f3mo funciona Gulp.js?<\/h2>\n\nGulp.js utiliza el <a href=\"http:\/\/nodejs.org\/api\/stream.html\" title=\"Node.js Stream\" target=\"_blank\">m\u00f3dulo Stream de Node.js<\/a>, lo cual lo hace m\u00e1s r\u00e1pido para construir, a diferencia de Grunt.js.\n\nGulp.js no necesita escribir archivos y\/o carpetas temporales en el disco duro, lo cual supone que realizar\u00e1 las mismas tareas que <a href=\"http:\/\/frontend-labs.com\/146--gruntjs-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos\" title=\"Grunt.js\" target=\"_blank\">Grunt.js<\/a> pero en menor tiempo.\n\nGulp.js utiliza el m\u00e9todo <span class=\"inline_code\">pipe()<\/span>, este m\u00e9todo obtiene todos los datos de un Stream legible(readable) y lo escribe en destino que le indiquemos \u00f3 de lo contrario lo entrega o sirve hacia otro pipe.\n\n\nEn la siguiente imagen veremos como <strong>Grunt.js<\/strong> manipula los archivos al realizar\u00a0sus tareas:\n\n<img class=\"aligncenter size-full wp-image-1682\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/08\/grunt-file-manipulation.png\" alt=\"grunt-file-manipulation\" width=\"650\" height=\"249\" \/>\n\nY en esta veremos como <strong>Gulp.js<\/strong> manipula los archivos al realizar sus tareas:\n\n<img class=\"aligncenter size-full wp-image-1681\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/08\/gulp-file-manipulation.png\" alt=\"gulp-file-manipulation\" width=\"650\" height=\"249\" \/>\n\nComo podemos ver, aunque los 2 hicieron la misma tarea <strong>Gulp.js<\/strong> no escribi\u00f3 archivos temporales en el disco duro. Gulp.js realiz\u00f3 4 operaciones y en cambio Grunt.js realiz\u00f3 8 operaciones.\n\nGulp.js utiliza el poder del paquete Node.js <a href=\"https:\/\/github.com\/wearefractal\/vinyl-fs\" title=\"Adaptador de vinyl para el sistema de archivos\" target=\"_blank\">vinyl-fs<\/a> para leer y escribir Streams.\n\nGulp.js tambi\u00e9n utiliza un paquete Node.js para la secuenciaci\u00f3n, ejecuci\u00f3n de tareas y dependencias en m\u00e1xima concurrencia, llamado <a href=\"https:\/\/github.com\/orchestrator\/orchestrator\" title=\"Orchestrator - secuenciaci\u00f3n, ejecuci\u00f3n de tareas y dependencias en m\u00e1xima concurrencia\" target=\"_blank\">Orchestrator<\/a>.\n\nM\u00e1s adelante veremos con mayor detalle como trabajan los Streams de Node.js.\n\n<h2>\u00bfC\u00f3mo instalar Gulp.js?<\/h2>\nPara instalar Gulp.js el \u00fanico requisito es tener instalado <a href=\"http:\/\/nodejs.org\/\" title=\"Node.js\" target=\"_blank\">Node.js<\/a>. si usas Linux Ubuntu y a\u00fan no lo tienes instalado este <a href=\"http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux\" title=\"Como instalar Nodejs en Debian Linux\" target=\"_blank\">post<\/a> te puede servir.\n<h3>Instalando Gulp.js de forma global en nuestro sistema<\/h3>\n<pre class=\"prettyprint lang-js\">\n<code>\nnpm install -g gulp\n<\/code>\n<\/pre>\nSi est\u00e1s usando Linux o Mac, tal vez necesites anteponer la palabra <span class=\"inline_code\">sudo<\/span> para poder ejecutar este comando con los permisos de administrador, as\u00ed:\n<pre class=\"prettyprint lang-js\">\n<code>\nsudo npm install -g gulp\n<\/code>\n<\/pre>\nVerificamos que Gulp.js ha sido instalado correctamente.\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp -v\n<\/code>\n<\/pre>\nSi lo tenemos instalado correctamente, nos mostrar\u00e1 lo siguiente:\n<pre class=\"prettyprint lang-js\">\n<code>\nCLI version 3.8.6\nLocal version undefined\n<\/code>\n<\/pre>\nDonde <strong>CLI version<\/strong> es la versi\u00f3n de Gulp.js instalada en nuestro sistema y <strong>Local version<\/strong> es la versi\u00f3n de Gulp.js instalada en nuestro proyecto local, pero como a\u00fan no hemos creado nuestro proyecto nos saldr\u00e1 undefined.\n\n\n<h2>\u00bfC\u00f3mo usar Gulp.js?<\/h2>\nUna vez instalado en nuestro sistema estamos listos para crear nuestro primer proyecto usando Gulp.js, nuestro peque\u00f1o proyecto concatenar\u00e1 dos archivos .js en uno solo y luego lo minificar\u00e1. As\u00ed que configuraremos 2 tareas(concatenar y minificar), todo esto contenido en una tarea llamada \"demo\".\n\nCreamos una carpeta llamada: <span class=\"inline_folder\">gulp-primeros-pasos<\/span>, ingresamos a esa carpeta mediante terminal.\n\nLuego all\u00ed dentro creamos nuestro archivo: <span class=\"inline_file\">gulpfile.js<\/span>, que es el archivo que Gulp.js necesita para saber que tareas realizar\u00e1 y de momento no le podremos ning\u00fan contenido.\n\nLuego escribimos lo siguiente(en este punto suponemos que tenemos instalado Node.js):\n\n<pre class=\"prettyprint lang-js\">\n<code>\nnpm init\n<\/code>\n<\/pre>\n\nNpm nos pedir\u00e1 los datos de nuestro proyecto, ya que en esta ocasi\u00f3n s\u00f3lo estamos haciendo un demo. Simplemente presionaremos Enter a todas las preguntas.\n\nCon esto, Npm nos debe haber creado un archivo llamado: <span class=\"inline_file\">package.json<\/span>, que contendr\u00e1 algo parecido a lo siguiente:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n{\n  \"name\": \"gulp-primeros-pasos\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Gulp: Primeros pasos\",\n  \"main\": \"gulpfile.js\",\n  \"author\": \"jansanchez\",\n  \"license\": \"MIT\"\n}\n<\/code>\n<\/pre>\n\nAhora agregaremos las dependencias de desarrollo a nuestro proyecto, la primera a instalar ser\u00e1: <strong>gulp<\/strong>, as\u00ed que escribimos lo siguiente en nuestra terminal:\n\n<pre class=\"prettyprint lang-js\">\n<code>\nnpm install --save-dev gulp\n<\/code>\n<\/pre>\n\nLuego instalamos: <a href=\"https:\/\/www.npmjs.org\/package\/gulp-concat\" target=\"_blank\" title=\"Gulp plugin para concatenar archivos.\">gulp-concat<\/a>\n\n<pre class=\"prettyprint lang-js\">\n<code>\nnpm install --save-dev gulp-concat\n<\/code>\n<\/pre>\n\nY finalmente instalamos: <a href=\"https:\/\/www.npmjs.org\/package\/gulp-uglify\" target=\"_blank\" title=\"Gulp plugin para minificar archivos mediante UglifyJS.\">gulp-uglify<\/a>\n\n<pre class=\"prettyprint lang-js\">\n<code>\nnpm install --save-dev gulp-uglify\n<\/code>\n<\/pre>\n\nTengamos en cuenta que s\u00ed no agregamos el par\u00e1metro: <span class=\"inline_code\">--save-dev<\/span>, entonces Npm no agregar\u00e1 este paquete como una dependencia de desarrollo de nuestro proyecto y mucho menos lo agregar\u00e1 a nuestro archivo package.json.\n\nComo podremos observar, nuestro archivo package.json a cambiado y deber\u00eda contener algo parecido a lo siguiente:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n{\n  \"name\": \"gulp-primeros-pasos\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Gulp: Primeros pasos\",\n  \"main\": \"gulpfile.js\",\n  \"author\": \"jansanchez\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"gulp\": \"^3.8.7\",\n    \"gulp-concat\": \"^2.3.4\",\n    \"gulp-uglify\": \"^0.3.1\"\n  }\n}\n<\/code>\n<\/pre>\n\nComo vemos, se agreg\u00f3 la clave <span class=\"inline_code\">devDependencies<\/span> y en su interior se comienzan a guardar nuestras dependencias de desarrollo y la versi\u00f3n que hemos instalado localmente.\n\nLuego vamos a crear las siguientes carpetas y archivos:\n\nCreamos la carpeta <span class=\"inline_folder\">js<\/span> y dentro de esta carpeta crearemos la carpeta <span class=\"inline_folder\">source<\/span>.\n\nDentro de la carpeta <span class=\"inline_folder\">source<\/span> crearemos el archivo <span class=\"inline_file\">1.js<\/span> y le agregaremos el siguiente contenido:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n\/\/ contenido del archivo 1.js\n\nvar sumar = function (a, b){\n  return a + b;\n};\n<\/code>\n<\/pre>\n\nNuevamente dentro de la carpeta <span class=\"inline_folder\">source<\/span> crearemos el archivo <span class=\"inline_file\">2.js<\/span> y le agregaremos el siguiente contenido:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n\/\/ contenido del archivo 2.js\n\nvar restar = function (a, b){\n  return a - b;\n};\n<\/code>\n<\/pre>\n\nAhora vamos a poner el siguiente contenido a nuestro archivo <span class=\"inline_file\">gulpfile.js<\/span>:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n\/*\n* Dependencias\n*\/\nvar gulp = require('gulp'),\n  concat = require('gulp-concat'),\n  uglify = require('gulp-uglify');\n\n\/*\n* Configuraci\u00f3n de la tarea 'demo'\n*\/\ngulp.task('demo', function () {\n  gulp.src('js\/source\/*.js')\n  .pipe(concat('todo.js'))\n  .pipe(uglify())\n  .pipe(gulp.dest('js\/build\/'))\n});\n<\/code>\n<\/pre>\n\nCon esto ya tenemos todo configurado, as\u00ed que para ponerlo a prueba en nuestra terminal escribimos lo siguiente:\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp demo\n<\/code>\n<\/pre>\n\nY si todo anda bien, nos dar\u00e1 el siguiente mensaje:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n[11:23:09] Using gulpfile ~\/htdocs\/gulp-primeros-pasos\/gulpfile.js\n[11:23:09] Starting 'demo'...\n[11:23:09] Finished 'demo' after 9 ms\n<\/code>\n<\/pre>\n\nEl cual nos indica que la tarea <strong>demo<\/strong> se ejecut\u00f3 con \u00e9xito en 9 milisegundos.  \n\nPara comprobar si se ejecutaron las 2 tareas requeridas, nos dirigimos a la carpeta <span class=\"inline_folder\">js\/build<\/span> y abrimos el archivo <span class=\"inline_file\">todo.js<\/span> y nos debe mostrar el siguiente contenido:\n\n<pre class=\"prettyprint lang-js\">\n<code>\nvar sumar=function(r,n){return r+n},restar=function(r,n){return r-n};\n<\/code>\n<\/pre>\n\nComo vemos, con unas simples y limpias lineas de c\u00f3digo hemos realizado 2 tareas de desarrollo comunes(concatenar y minificar archivos .js).\n\nPara esto usamos 2 plugins de Gulp.js, la buena noticia es que actualmente existen m\u00e1s de 650 plugins para Gulp.js, as\u00ed que imag\u00ednate todo lo que puedes automatizar en tu flujo de trabajo con Gulp.js.\n\n<h2>Analizando el gulpfile.js<\/h2>\n\nAhora vamos a analizar el c\u00f3digo que escribimos en nuestro <span class=\"inline_file\">gulpfile.js<\/span> para entender un\n poco m\u00e1s como funciona Gulp.js.\n\nPrimero para llevar a cabo las tareas que deseamos, requerimos los siguientes paquetes: gulp, gulp-concat y gulp-uglify, as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n\/*\n* Dependencias\n*\/\nvar gulp = require('gulp'),\n  concat = require('gulp-concat'),\n  uglify = require('gulp-uglify');\n<\/code>\n<\/pre>\n\n\n<h2>API<\/h2>\n\nGulp.js tiene una peque\u00f1a API, esto te permitir\u00e1 aprender Gulp.js r\u00e1pidamente.\n\n<h3>gulp.task()<\/h3>\n\nCon el m\u00e9todo <span class=\"inline_code\">gulp.task()<\/span> definimos una tarea, este m\u00e9todo toma 3 argumentos: <strong>el nombre de la tarea<\/strong>, <strong>la \u00f3 las tareas de las que depende esta tarea<\/strong> y <strong>la funci\u00f3n que ejecutar\u00e1 al llamar esta tarea<\/strong>.\n\nEn nuestro ejemplo s\u00f3lo usamos 2 par\u00e1metros: el nombre y la funci\u00f3n, as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n\/*\n* Configuraci\u00f3n de la tarea 'demo'\n*\/\ngulp.task('demo', function () {\n  \/\/ Contenido de la tarea 'demo'\n});\n<\/code>\n<\/pre>\n\nCon lo cual declaramos \"demo\" como nombre de la tarea y dentro escribimos lo que deseamos que haga nuestra tarea.\n\nAs\u00ed que si queremos llamar esta tarea tan solo escribimos en nuestra terminal:\n\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp demo\n<\/code>\n<\/pre>\n\n<h4>Lista de tareas<\/h4>\n\nUna tarea tambi\u00e9n puede actuar como una lista de tareas, supongamos que queremos definir una tarea que corra otras 3 tareas por ejemplo: <strong>im\u00e1genes<\/strong>, <strong>css<\/strong> y <strong>js<\/strong>. Entonces escribir\u00edamos lo siguiente:\n\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp.task('estaticos', ['imagenes', 'css', 'js']);\n<\/code>\n<\/pre>\n\nLo que quiere decir que al ejecutar la tarea \"estaticos\" con el comando <span class=\"inline_code\">gulp estaticos<\/span> se ejecutar\u00e1n estas 3 tareas. \n\nEl detalle es que estas tareas correran as\u00edncronamente, osea que correr\u00e1n todas juntas al mismo tiempo sin ning\u00fan orden de ejecuci\u00f3n.\n\n<h4>Tareas como dependencia<\/h4>\n\nSi deseamos que una tarea se ejecute <strong>s\u00ed y solo s\u00ed<\/strong> otra tarea haya terminado antes, entonces podemos hacer lo siguiente:  \n\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp.task('css', ['imagenes'], function () {\n  \/*\n  * Aqu\u00ed ir\u00eda el contenido de mi tarea 'css'\n  * Que se ejecutar\u00e1 solo cuando la tarea\n  * 'imagenes' haya terminado.\n  *\/\n});\n<\/code>\n<\/pre>\n\nEntonces, cuando corramos la tarea \"css\", Gulp.js ejecutar\u00e1 primero la tarea \"imagenes\", esperar\u00e1 a que esta tarea termine y luego reci\u00e9n ejecutar\u00e1 la tarea \"css\".\n\n<h4>Tarea por defecto(default)<\/h4>\n\nGulp.js nos permite definir una tarea por defecto, que corra tan solo al escribir el comando <span class=\"inline_code\">gulp<\/span>. Esto se puede hacer tan solo poniendole a la tarea el nombre de <span class=\"inline_code\">default<\/span>, as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp.task('default', function () {\n  \/*\n  * C\u00f3digo de nuestra tarea por defecto.\n  *\/\n});\n<\/code>\n<\/pre>\n\nY claro, tambi\u00e9n puedes hacer que tu tarea por defecto sea una lista de tareas, as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp.task('default', ['css', 'js']);\n<\/code>\n<\/pre>\n\nEsta tarea ejecutar\u00e1 las tarea 'css' y 'js', tan solo escribiendo en nuestra terminal:\n\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp\n<\/code>\n<\/pre>\n\n\n<h3>gulp.src()<\/h3>\n\nEl m\u00e9todo <span class=\"inline_code\">gulp.src()<\/span> toma como par\u00e1metro un valor <strong>glob<\/strong> es decir, una cadena que coincida con uno o m\u00e1s archivos usando los patrones que usa el int\u00e9rprete de comandos de unix(shell) y retorna un stream que puede ser \"pipeado\" a un plugin adicional \u00f3 hacia el m\u00e9todo <span class=\"inline_code\">gulp.dest()<\/span>.\n\nEste par\u00e1metro puede ser una cadena o una colecci\u00f3n(Array) de valores glob.\n\nGulp.js usa el paquete de Node.js <a href=\"https:\/\/github.com\/isaacs\/node-glob\" title=\"node-glob\" target=\"_blank\" id=\"glob\">node-glob<\/a> para obtener los archivos especificados en \u00e9l \u00f3 los globs ingresados.\n\n<h4>Ejemplos de globs<\/h4>\n\n<ul>\n  <li><span class=\"inline_code\">js\/source\/1.js<\/span> coincide exactamente con el archivo.<\/li>\n  <li><span class=\"inline_code\">js\/source\/*.js<\/span> coincide con los archivos que terminen en .js dentro de la carpeta <span class=\"inline_code\">js\/source<\/span>.<\/li>\n  <li><span class=\"inline_code\">js\/**\/*.js<\/span> coincide con los archivos que terminen en .js dentro de la carpeta <span class=\"inline_code\">js<\/span> y dentro de todas sus sub-carpetas.<\/li>\n  <li><span class=\"inline_code\">!js\/source\/3.js<\/span> Excluye especificamente el archivo <span class=\"inline_file\">3.js.<\/span><\/li>\n  <li><span class=\"inline_code\">static\/*.+(js|css)<\/span> coincide con los archivos que terminen en .js \u00f3 .css dentro de la carpeta <span class=\"inline_code\">static\/<\/span><\/li>\n<\/ul>\n\nExisten m\u00e1s patrones, los puedes revisar desde la documentaci\u00f3n de la librer\u00eda <a href=\"https:\/\/github.com\/isaacs\/minimatch\" title=\"node-glob\" target=\"_blank\">minimatch<\/a>.\n\nAs\u00ed que tienes la oportunidad de realizar todas las combinaciones posibles, seg\u00fan lo necesites. \n\nComo en nuestra demo, necesitabamos encontrar todos los archivos que terminen en .js dentro de la carpeta <span class=\"inline_folder\">js\/source<\/span>, as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp.src('js\/source\/*.js')\n<\/code>\n<\/pre>\n\nCada vez que Gulp.js encuentre un archivo que coincida con nuestro patr\u00f3n, lo ir\u00e1 metiendo dentro de un Stream, que ser\u00e1 como una colecci\u00f3n de archivos. Claro, respetando las propiedades de cada archivo(ruta, etc).  \n\nEntonces podemos decir que tendremos todos esos archivos con sus respectivas propiedades dentro de un Stream, Este Stream puede ser manipulado por Gulp.js.\n\n<h4>el m\u00e9todo pipe() de Node.js<\/h4>\n\nEl m\u00e9todo <span class=\"inline_code\">pipe()<\/span> puede leer, ayudar a transformar y grabar los datos de un Stream.\n\nEs por eso que en nuestro ejemplo usamos el m\u00e9todo <span class=\"inline_code\">pipe()<\/span> 3 veces.\n\nLa primera vez lo usamos para leer el Stream y se lo pasamos al plugin \"concat\" para que este realize la concatenaci\u00f3n y as\u00ed transforme los datos del Stream, as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n.pipe(concat('todo.js'))\n<\/code>\n<\/pre>\n\nLa segunda vez lo usamos para leer los datos actuales(js concatenado) y se lo pasamos al plugin \"uglify\", para que realize la minificaci\u00f3n del archivo concatenado. Todo esto sin escribir en el disco ning\u00fan archivo temporal, as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n.pipe(uglify())\n<\/code>\n<\/pre>\n\nLa tercera vez se lo pasamos a el m\u00e9todo <span class=\"inline_code\">gulp.dest()<\/span>, as\u00ed que veamos que hace este m\u00e9todo. \n\n<h3>gulp.dest()<\/h3>\n\nCanaliza y escribe archivos desde un Stream, por lo que puede canalizar a varias carpetas. Crear\u00e1 las carpetas que no existan y  retornar\u00e1 el Stream, por si deseamos realizar alguna acci\u00f3n m\u00e1s. \n\nEn pocas palabras, sirve para escribir los datos actuales de un Stream.\n\nY en nuestro ejemplo lo usamos as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n.pipe(gulp.dest('js\/build\/'))\n<\/code>\n<\/pre>\n\nCon lo cual escribimos los datos resultantes del Stream dentro de la carpeta <span class=\"inline_folder\">js\/build\/<\/span>.\n\nEl c\u00f3digo final nos qued\u00f3 as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n\/*\n* Dependencias\n*\/\nvar gulp = require('gulp'),\n  concat = require('gulp-concat'),\n  uglify = require('gulp-uglify');\n\n\/*\n* Configuraci\u00f3n de la tarea 'demo'\n*\/\ngulp.task('demo', function () {\n  gulp.src('js\/source\/*.js')\n  .pipe(concat('todo.js'))\n  .pipe(uglify())\n  .pipe(gulp.dest('js\/build\/'))\n});\n<\/code>\n<\/pre>\n\nAs\u00ed como realiz\u00e9 2 tareas consecutivas, con Gulp.js se pueden realizar muchas m\u00e1s. \n\n\n<h3>gulp.watch()<\/h3>\n\nVer archivos y hacer algo cuando se modifique un archivo. Esto siempre devuelve un EventEmitter que emite los eventos de cambio.\n\nTiene 2 formas de usar:\n\n<span class=\"inline_code\">gulp.watch(glob, tareas)<\/span> \u00f3 <span class=\"inline_code\">gulp.watch(glob, callback)<\/span>.\n\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp.watch('js\/source\/*.js', ['js']);\n<\/code>\n<\/pre>\n\nCon lo cual, cada vez que se modifique un archivo .js que se encuentre dentro de la carpeta <span class=\"inline_folder\">js\/source\/<\/span> autom\u00e1ticamente se ejecutar\u00e1 la tarea <span class=\"inline_code\">js<\/span>.\n\n\n<pre class=\"prettyprint lang-js\">\n<code>\ngulp.watch('js\/source\/*.js', function(){\n  \/*\n  * Aqu\u00ed ir\u00eda el c\u00f3digo de la acci\u00f3n que deseas realizar,\n  * Cuando hayan cambios en dichos archivos.\n  *\n  * Tambi\u00e9n podr\u00edas ejecutar una tarea mediante el m\u00e9todo\n  * gulp.start('js')\n  *\n  * Pero este m\u00e9todo no es oficial, le pertenece al\n  * paquete 'Orchestrator' ya que Gulp hereda los \n  * m\u00e9todos de 'Orchestrator'.\n  *\/  \n});\n<\/code>\n<\/pre>\n\nCon esto ya podemos usar el API de Gulp.js con mucha facilidad.\n\n<h2>Plugins<\/h2>\n\nComo dije anteriormente Gulp.js tiene alrededor de 700 plugins \"oficiales\" y otros cuantos no-oficiales, los plugins \"oficiales\" los puedes encontrar en la <a href=\"http:\/\/gulpjs.com\/plugins\/\" title=\"Gulp.js - Plugins\" target=\"_blank\">p\u00e1gina de plugins<\/a> de Gulp.js o buscando con la palabra clave <span class=\"inline_code\">gulpplugin<\/span> en <a href=\"https:\/\/www.npmjs.org\/\" title=\"Node Packaged Modules\" target=\"_blank\">npm<\/a>.\n\nActualmente existen plugins para cas\u00ed todo lo que se necesita al desarrollar, si deseas puedes pasar por nuestro post sobre los <a href=\"http:\/\/frontend-labs.com\/1752--gulp-js-plugins-como-configurar-tareas\" title=\"Plugins de Gulp.js\" target=\"_blank\">plugins<\/a> m\u00e1s usados de Gulp.js y sus configuraciones b\u00e1sicas.\n\nLa mayor\u00eda de los plugins son bastante f\u00e1ciles de usar, tienen una buena documentaci\u00f3n y se ejecutan de la misma forma (mediante la canalizaci\u00f3n de un Stream de objetos de archivo). Estos plugins normalmente modifican los archivos (aunque algunos, como validadores, no lo har\u00e1n) y devuelven los archivos nuevos que se pasar\u00e1n al siguiente plugin en un Stream.\n\nPor ejemplo digamos que en ejemplo que ten\u00edamos quiero agregarle la funcionalidad de validaci\u00f3n de sintaxis, entonces har\u00edamos lo siguiente:\n\n<pre class=\"prettyprint lang-js\">\n<code>\nnpm install --save-dev gulp-jshint\n<\/code>\n<\/pre>\n\nY luego nuestro gulpfile.js quedar\u00eda as\u00ed:\n\n<pre class=\"prettyprint lang-js\">\n<code>\n\/*\n* Dependencias\n*\/\nvar gulp = require('gulp'),\n  jshint = require('gulp-jshint'),\n  concat = require('gulp-concat'),\n  uglify = require('gulp-uglify');\n\n\/*\n* Configuraci\u00f3n de la tarea 'demo'\n*\/\ngulp.task('demo', function () {\n  gulp.src('js\/source\/*.js')\n    .pipe(jshint())\n    .pipe(jshint.reporter('default'))\n    .pipe(concat('todo.js'))\n    .pipe(uglify())\n    .pipe(gulp.dest('js\/build\/'))\n});\n<\/code>\n<\/pre>\n\nSolo agreg\u00e9 3 lineas especificas a mi gulpfile.js y ya estoy realizando otra tarea m\u00e1s sobre los mismos archivos, es por eso que es m\u00e1s simple que Grunt.js, donde no puedes codificar sino que tienes que poner en el objeto JSON tu configuraci\u00f3n, lo cual te limita mucho y hace que generes un archivo de configuraci\u00f3n muy grande y siempre llega a verse muy desordenado.\n\n\nDejo en <a href=\"https:\/\/github.com\/jansanchez\/gulp-primeros-pasos\" title=\"Github - Gulp primeros pasos.\" target=\"_blank\">github<\/a> el repositorio del ejemplo que trabajamos en este art\u00edculo.\n\n<h2>Sobre los Pipes en unix<\/h2>\n\nEn unix, los comandos bash pueden \"pipear\" o \"canalizar\" la salida de otro comando bash, permitiendo operar esa informaci\u00f3n antes de ser devuelta, veamos un ejemplo pr\u00e1ctico.\n\nPor ejemplo si deseamos averiguar nuestra MAC address en unix ejecutamos el siguiente comando:\n<pre class=\"prettyprint lang-js\">\n<code>\nifconfig\n<\/code>\n<\/pre>\n\nLo cual nos devuelve toda esta informaci\u00f3n:\n<pre class=\"prettyprint lang-js\">\n<code>\neth0\n  inet addr:192.111.77.27  Bcast:192.111.77.255\n  Link encap:Ethernet  HWaddr 00:1b:00:bb:1c:ab\n  Mask:255.255.255.0 Scope:Link\n  collisions:0 txqueuelen:1000\n<\/code>\n<\/pre>\nPero nosotros no queremos toda esa informaci\u00f3n, sino solamente nuestra MAC address, entonces aqu\u00ed podemos utilizar el poder de los pipes para lograr esto con el siguiente c\u00f3digo.\n<pre class=\"prettyprint lang-js\">\n<code>\nifconfig | grep \"HWaddr\"\n<\/code>\n<\/pre>\nAhora s\u00ed obtuvimos especificamente lo que necesitabamos:\n<pre class=\"prettyprint lang-js\">\n<code>\nHWaddr 00:1b:00:bb:1c:ab Link encap:Ethernet\n<\/code>\n<\/pre>\n<h3>Aclaraciones<\/h3>\n<ul>\n  <li>El comando ifconfig, nos devuelve toda la informaci\u00f3n de red en nuestro ordenador.<\/li>\n  <li>El comando grep, busca las l\u00edneas que contengan una coincidencia con un patr\u00f3n que le pasemos.<\/li>\n  <li>pipe = |<\/li>\n<\/ul>\n<h3>Explicaci\u00f3n del proceso<\/h3>\nEl proceso fue el siguiente:\n<ol>\n  <li>El comando ifconfig gener\u00f3 una respuesta.<\/li>\n  <li>Antes que sea escrita \"canalizamos\" esa respuesta usando un pipe.<\/li>\n  <li>A esa respuesta le aplicamos el comando grep con el patr\u00f3n: \"HWaddr\".<\/li>\n  <li>Y finalmente nos devuelve s\u00f3lo la MAC address.<\/li>\n<\/ol>\n\nTodo esto se hizo directamente sobre la respuesta inicial y sin almacenarla, ni escribirla en disco de manera temporal.\n\nDe la misma forma trabaja Gulp.js, canalizando el stream resultante de una funci\u00f3n o plugin y pasando esa respuesta para ser operada por una nueva funci\u00f3n y as\u00ed sucesivamente.\n\n\n<h2>\u00bfExisten otros sistemas de construcci\u00f3n hechos con Javascript?<\/h2>\n\nClaro que s\u00ed, a continuaci\u00f3n listar\u00e9 los que me parecen m\u00e1s interesantes:\n\n<ul>\n  <li><a href=\"http:\/\/fez.github.io\/\" target=\"_blank\" title=\"Fez\">Fez<\/a> (2014).<\/li>\n  <li><a href=\"https:\/\/github.com\/joliss\/broccoli\" target=\"_blank\" title=\"Broccoli\">Broccoli<\/a> (2014).<\/li>\n  <li><a href=\"https:\/\/github.com\/azer\/bud\" target=\"_blank\" title=\"Bud\">Bud<\/a> (2013).<\/li>\n  <li><a href=\"https:\/\/github.com\/jamesshore\/simplebuild\" target=\"_blank\" title=\"Simplebuild\">Simplebuild<\/a> (2013).<\/li>\n  <li><a href=\"http:\/\/gruntjs.com\/\" target=\"_blank\" title=\"Gruntjs\">Gruntjs<\/a> (2012 ).<\/li>\n  <li><a href=\"http:\/\/brunch.io\/\" target=\"_blank\" title=\"Brunch\">Brunch<\/a> (2011).<\/li>\n  <li><a href=\"http:\/\/jakejs.com\/\" target=\"_blank\" title=\"Jake\">Jake<\/a> (2010).<\/li>\n<\/ul>\n\nEspero que este art\u00edculo les haya servido para conocer Gulp.js, si tienen alguna duda, consulta \u00f3 aclaraci\u00f3n solo haganla por correo a <a href=\"mailto:code@frontend-labs.com\" title=\"code@frontend-labs.com\">code@frontend-labs.com<\/a> \u00f3 dejen sus comentarios.\n\nAqu\u00ed en Frontend Labs estamos dispuestos a compartir el conocimiento, a ense\u00f1ar y aprender!.\n\n","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/08\/gulp-js-the-streaming-build-system.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Sun, 31 Aug 2014 16:53:43 +0000","created_by":1,"updated_at":"Fri, 17 Oct 2014 16:28:04 +0000","updated_by":1,"published_at":"Sun, 31 Aug 2014 16:53:43 +0000","published_by":1},{"id":1748,"title":"Personalizar linux Crunchbang","slug":"personalizar-linux-crunchbang","markdown":"\nAntiguamente no era un seguidor del Sistema Operativo Linux, pero cuando uno decide investigar se encuentra con muchas\u00a0distribuciones de este SO. La pregunta viene \u00bfCu\u00e1l de estas distribuciones me instalo?, ya que existen varias de ellas, una mas famosas que otras. En esta oportunidad hablaremos de la distribuci\u00f3n Linux Crunchbang, que est\u00e1 basado en debian. Es muy f\u00e1cil de manipular, personalizar y es muy ligero al instalarse en maquinas que no tienen mucho rendimiento. La primera vista cuando uno lo instala es esta: Como vemos tiene lo b\u00e1sico, pero lo primero que notamos es el estilo gris que tiene las ventanas y el entorno de escritorio. Es aqu\u00ed donde aprenderemos c\u00f3mo personalizarlo. 1. Primero debemos saber los procesos que corren en el entorno para poder personalizarlos \u00a0\n\n\n","html":"Antiguamente no era un seguidor del Sistema Operativo Linux, pero cuando uno decide investigar se encuentra con muchas\u00a0distribuciones de este SO.\r\n\r\nLa pregunta viene \u00bfCu\u00e1l de estas distribuciones me instalo?, ya que existen varias de ellas, una mas famosas que otras.\r\n\r\nEn esta oportunidad hablaremos de la distribuci\u00f3n Linux Crunchbang, que est\u00e1 basado en debian. Es muy f\u00e1cil de manipular, personalizar y es muy ligero al instalarse en maquinas que no tienen mucho rendimiento.\r\n\r\nLa primera vista cuando uno lo instala es esta:\r\n\r\nComo vemos tiene lo b\u00e1sico, pero lo primero que notamos es el estilo gris que tiene las ventanas y el entorno de escritorio. Es aqu\u00ed donde aprenderemos c\u00f3mo personalizarlo.\r\n\r\n1. Primero debemos saber los procesos que corren en el entorno para poder personalizarlos\r\n\r\n&nbsp;","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":7,"created_at":"Mon, 01 Sep 2014 10:14:45 +0000","created_by":1,"updated_at":"Mon, 01 Sep 2014 10:14:45 +0000","updated_by":1,"published_at":"","published_by":1},{"id":1758,"title":"C\u00f3mo instalar Atom Editor en Debian Linux","slug":"como-instalar-atom-editor-en-linux-debian-ubuntu","markdown":"\nAtom Editor es el nuevo editor de texto, desarrollado por Github. Este editor est\u00e1 escrito con tecnolog\u00edas como Node.js, CoffeeScript y LESS, es muy sencillo de usar, muy personalizable y ofrece varias herramientas para el desarrollo. La instalaci\u00f3n para Linux es diferente con respecto a Windows o MAC ya que en estas dos ultimas plataformas es un paquete listo para instalar, mientras tanto en Linux - Debian debemos \"construir\" el editor en muy pocos pasos. Lo que necesitamos antes de instalar:\n\n- Git\n- Node.js v0.10.x\n- npm v1.4.x\n- gnome keyring dev\n\nComprobaci\u00f3n de paquetes:\n-------------------------\n\n Como vemos necesitamos tener instalado Git, Node y NPM en las versiones que nos indican. Suponiendo que ya las tenemos instaladas, procederemos a revisar la versi\u00f3n de nuestro Node y NPM. En caso de no tener instalado Node, podemos revisar este [post](http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux \"Instalando Node\") para poder instalarlo. Revisamos la versi\u00f3n de Node y NPM:\n-----------------------------------\n\n Abrimos nuestro terminal o consola y escribimos lo siguiente: \t\u25b6 node -v\n\t#v0.10.31\n\t\u25b6 npm -v                 \n\t#1.4.23\n\n con esto nos dar\u00e1 la versi\u00f3n de Node que debe ser la version +0.10 (v0.10.x) y la de NPM (npm v1.4.x). En caso que ambos est\u00e9n desactualizados tendremos que escribir lo siguiente: \t\u25b6 sudo npm cache clean -f\n\t\u25b6 sudo npm install -g n\n\t\u25b6 sudo n stable\n\n Con esto se actualizar\u00e1 a la \u00faltima versi\u00f3n de Node y NPM Seguimos con la instalaci\u00f3n\n---------------------------\n\n Instalamos el keyring: \t\u25b6 sudo apt-get install libgnome-keyring-dev\n\n Setup python: \t\u25b6 sudo npm config set python \/usr\/bin\/python2 -g\n\n Nos dirigimos a una carpeta donde descargaremos el repositorio de Atom mediante Git y accederemos a ella: \t\u25b6 git clone https:\/\/github.com\/atom\/atom\n\t\u25b6 cd atom\n\n Ahora vamos a compilar \"Atom\", una vez dentro de la carpeta, ejecutamos: \t\u25b6 script\/build\n\n Con esto empezar\u00e1 a ejecutar tareas que ser\u00e1 nuestro editor de texto \"Atom\" Terminada la compilaci\u00f3n, ejecutamos: \t\u25b6 sudo script\/grunt install\n\n Con esto ya tenemos el editor de texto \"Atom\" instalado Luego de la instalaci\u00f3n\n-----------------------\n\n En la consola ejecutamos: \t\u25b6 atom\n\n Con esto ya tenemos instalado \"Atom\" en nuestro linux, donde lo podemos ejecutar por consola o ejecutando como aplicaci\u00f3n (Alt + F2). ![Screenshot - 090614 - 17:33:29](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/09\/Screenshot-090614-173329-e1410190546282.png) \u00a0 Un error muy com\u00fan\n------------------\n\n En\u00a0algunos casos al ejecutar \"Atom\" se lanza un error y es porque no tenemos actualizado algunos paquetes de\u00a0linux debian que usa Atom para ejecutarse. \t\u25b6 atom\n\t\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.14' not found (required by \/usr\/local\/share\/atom\/atom)                                                                   \n\t\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.14' not found (required by \/usr\/local\/share\/atom\/libchromiumcontent.so)\n\t\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.15' not found (required by \/usr\/local\/share\/atom\/libchromiumcontent.so)\n\t\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.14' not found (required by \/usr\/local\/share\/atom\/libgcrypt.so.11)\n\t\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.15' not found (required by \/usr\/local\/share\/atom\/libgcrypt.so.11)\n\n### Soluci\u00f3n:\n\n Lo que debemos hacer es editar sources.list con una nueva dependencia. 1. Abrimos sources.list \t\u25b6 sudo geany \/etc\/apt\/sources.list\n\n 2. Editamos sources.list \t#Agregamos la siguiente linea al final \n\tdeb http:\/\/ftp.debian.org\/debian experimental main\n\tdeb http:\/\/ftp.debian.org\/debian sid main\n\n 3. Ejecutamos lo siguiente en la consola: \t\u25b6 sudo apt-get update\n\t\u25b6 sudo apt-get -t experimental install libc6-dev\n\n Durante la instalaci\u00f3n nos saldr\u00e1 dos pantallas para confirmar la actualizaci\u00f3n del \"Libc6\" donde damos OK en ambos casos. Terminamos que actualice todos los paquetes y luego ejecutamos en la terminal: \t\u25b6 atom\n\n Para m\u00e1s informaci\u00f3n los invito a revisar su [repositorio en Github](https:\/\/github.com\/atom\/atom) y el\u00a0[sitio web](https:\/\/atom.io\/) donde est\u00e1 su documentaci\u00f3n. Extra :\n-------\n\n Podemos aplicar varios temas para nuestro editor y uno de ellos es el [Seti UI](https:\/\/atom.io\/themes\/seti-ui) que muestra con iconos de archivos personalizados y una gran combinaci\u00f3n de colores de sintaxis.\n","html":"Atom Editor es el nuevo editor de texto, desarrollado por Github. Este editor est\u00e1 escrito con tecnolog\u00edas como Node.js, CoffeeScript y LESS, es muy sencillo de usar, muy personalizable y ofrece varias herramientas para el desarrollo.\r\n\r\nLa instalaci\u00f3n para Linux es diferente con respecto a Windows o MAC ya que en estas dos ultimas plataformas es un paquete listo para instalar, mientras tanto en Linux - Debian debemos \"construir\" el editor en muy pocos pasos.\r\n\r\nLo que necesitamos antes de instalar:\r\n<ul>\r\n\t<li>Git<\/li>\r\n\t<li>Node.js v0.10.x<\/li>\r\n\t<li>npm v1.4.x<\/li>\r\n\t<li>gnome keyring dev<\/li>\r\n<\/ul>\r\n<h2>Comprobaci\u00f3n de paquetes:<\/h2>\r\nComo vemos necesitamos tener instalado Git, Node y NPM en las versiones que nos indican. Suponiendo que ya las tenemos instaladas, procederemos a revisar la versi\u00f3n de nuestro Node y NPM.\r\n\r\nEn caso de no tener instalado Node, podemos revisar este <a title=\"Instalando Node\" href=\"http:\/\/frontend-labs.com\/232--como-instalar-nodejs-debian-linux\" target=\"_blank\">post<\/a> para poder instalarlo.\r\n<h2>Revisamos la versi\u00f3n de Node y NPM:<\/h2>\r\nAbrimos nuestro terminal o consola y escribimos lo siguiente:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 node -v\r\n#v0.10.31\r\n\u25b6 npm -v                 \r\n#1.4.23\r\n<\/code>\r\n<\/pre>\r\ncon esto nos dar\u00e1 la versi\u00f3n de Node que debe ser la version +0.10 (v0.10.x) y la de NPM (npm v1.4.x). En caso que ambos est\u00e9n desactualizados tendremos que escribir lo siguiente:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 sudo npm cache clean -f\r\n\u25b6 sudo npm install -g n\r\n\u25b6 sudo n stable\r\n<\/code>\r\n<\/pre>\r\nCon esto se actualizar\u00e1 a la \u00faltima versi\u00f3n de Node y NPM\r\n<h2>Seguimos con la instalaci\u00f3n<\/h2>\r\nInstalamos el keyring:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 sudo apt-get install libgnome-keyring-dev\r\n<\/code>\r\n<\/pre>\r\nSetup python:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 sudo npm config set python \/usr\/bin\/python2 -g\r\n<\/code>\r\n<\/pre>\r\nNos dirigimos a una carpeta donde descargaremos el repositorio de Atom mediante Git y accederemos a ella:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 git clone https:\/\/github.com\/atom\/atom\r\n\u25b6 cd atom\r\n<\/code>\r\n<\/pre>\r\nAhora vamos a compilar \"Atom\", una vez dentro de la carpeta, ejecutamos:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 script\/build\r\n<\/code>\r\n<\/pre>\r\nCon esto empezar\u00e1 a ejecutar tareas que ser\u00e1 nuestro editor de texto \"Atom\"\r\n\r\nTerminada la compilaci\u00f3n, ejecutamos:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 sudo script\/grunt install\r\n<\/code>\r\n<\/pre>\r\nCon esto ya tenemos el editor de texto \"Atom\" instalado\r\n<h2>Luego de la instalaci\u00f3n<\/h2>\r\nEn la consola ejecutamos:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 atom\r\n<\/code>\r\n<\/pre>\r\nCon esto ya tenemos instalado \"Atom\" en nuestro linux, donde lo podemos ejecutar por consola o ejecutando como aplicaci\u00f3n (Alt + F2).\r\n\r\n<img class=\"alignnone wp-image-1776\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/09\/Screenshot-090614-173329-e1410190546282.png\" alt=\"Screenshot - 090614 - 17:33:29\" width=\"800\" height=\"450\" \/>\r\n\r\n&nbsp;\r\n<h2>Un error muy com\u00fan<\/h2>\r\nEn\u00a0algunos casos al ejecutar \"Atom\" se lanza un error y es porque no tenemos actualizado algunos paquetes de\u00a0linux debian que usa Atom para ejecutarse.\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 atom\r\n\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.14' not found (required by \/usr\/local\/share\/atom\/atom)                                                                   \r\n\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.14' not found (required by \/usr\/local\/share\/atom\/libchromiumcontent.so)\r\n\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.15' not found (required by \/usr\/local\/share\/atom\/libchromiumcontent.so)\r\n\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.14' not found (required by \/usr\/local\/share\/atom\/libgcrypt.so.11)\r\n\/usr\/local\/share\/atom\/atom: \/lib\/x86_64-linux-gnu\/libc.so.6: version 'GLIBC_2.15' not found (required by \/usr\/local\/share\/atom\/libgcrypt.so.11)\r\n<\/code>\r\n<\/pre>\r\n<h3>Soluci\u00f3n:<\/h3>\r\nLo que debemos hacer es editar sources.list con una nueva dependencia.\r\n\r\n1. Abrimos sources.list\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 sudo geany \/etc\/apt\/sources.list\r\n<\/code>\r\n<\/pre>\r\n2. Editamos sources.list\r\n<pre class=\"prettyprint\"><code>\r\n#Agregamos la siguiente linea al final \r\ndeb http:\/\/ftp.debian.org\/debian experimental main\r\ndeb http:\/\/ftp.debian.org\/debian sid main\r\n<\/code>\r\n<\/pre>\r\n3. Ejecutamos lo siguiente en la consola:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 sudo apt-get update\r\n\u25b6 sudo apt-get -t experimental install libc6-dev\r\n<\/code>\r\n<\/pre>\r\nDurante la instalaci\u00f3n nos saldr\u00e1 dos pantallas para confirmar la actualizaci\u00f3n del \"Libc6\" donde damos OK en ambos casos. Terminamos que actualice todos los paquetes y luego ejecutamos en la terminal:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n\u25b6 atom\r\n<\/code>\r\n<\/pre>\r\nPara m\u00e1s informaci\u00f3n los invito a revisar su <a href=\"https:\/\/github.com\/atom\/atom\" target=\"_blank\">repositorio en Github<\/a> y el\u00a0<a href=\"https:\/\/atom.io\/\" target=\"_blank\">sitio web<\/a> donde est\u00e1 su documentaci\u00f3n.\r\n<h2>Extra :<\/h2>\r\nPodemos aplicar varios temas para nuestro editor y uno de ellos es el <a href=\"https:\/\/atom.io\/themes\/seti-ui\">Seti UI<\/a> que muestra con iconos de archivos personalizados y una gran combinaci\u00f3n de colores de sintaxis.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/09\/atomEditor.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":7,"created_at":"Sat, 06 Sep 2014 18:21:21 +0000","created_by":1,"updated_at":"Tue, 21 Oct 2014 12:24:36 +0000","updated_by":1,"published_at":"Sat, 06 Sep 2014 18:21:21 +0000","published_by":1},{"id":1821,"title":"Git: \u00bfC\u00f3mo generar una clave SSH?","slug":"git-como-generar-una-clave-ssh-keygen-publica-privada","markdown":"\nLas claves SSH tambi\u00e9n conocidas como llaves SSH, son una manera de identificar las computadoras de confianza, sin tener que ingresar una contrase\u00f1a. Las claves SSH se deben generar para cada usuario. Luego de realizar la generaci\u00f3n obtendremos una clave privada y una clave p\u00fablica. En este art\u00edculo te mostraremos como generar claves SSH para tu usuario, siguiendo estos sencillos pasos:\n\nValidamos si tenemos una clave SSH existente\n--------------------------------------------\n\n Para ello escribimos lo siguiente en nuestro terminal: \tls -al ~\/.ssh | grep \".pub\"\n\n Si ya tenemos una clave SSH nos aparecer\u00e1 algo similar a esto: \t-rw-r--r--  1 frontend frontend  399 Aug 22 17:04 id_rsa.pub\n\n Pero si a\u00fan no la hemos generado entonces nos pueden salir estos 2 mensajes: \tls: cannot access \/home\/frontend\/.ssh: No such file or directory\n\n \u00f3 tambi\u00e9n: ``\n\n S\u00ed, nos puede salir vac\u00edo o en blanco, ya que puede que tengamos la carpeta <span class=\"inline_folder\">.ssh<\/span> pero no haya ning\u00fan archivo dentro de esta. Generando una nueva clave SSH\n-----------------------------\n\n Si a\u00fan no tenemos una clave .ssh entonces la procederemos a generar escribiendo en nuestro terminal lo siguiente: Claro, colocando tu correo electr\u00f3nico en vez de <span class=\"inline_code\">tu_correo@tu_dominio.com<\/span>. \tssh-keygen -t rsa -C \"tu_correo@tu_dominio.com\"\n\n De preferencia dejemoslo con los ajustes por defecto, por lo que cuando nos haga las 3 preguntas, simplemente pulsamos Enter. Luego del proceso nos quedar\u00e1 algo parecido a esto: \tssh-keygen -t rsa -C \"tu_correo@tu_dominio.com\"\n\tGenerating public\/private rsa key pair.\n\tEnter file in which to save the key (\/home\/frontend\/.ssh\/id_rsa): \n\tEnter passphrase (empty for no passphrase): \n\tEnter same passphrase again: \n\tYour identification has been saved in \/home\/frontend\/.ssh\/id_rsa.\n\tYour public key has been saved in \/home\/frontend\/.ssh\/id_rsa.pub.\n\tThe key fingerprint is:\n\t1f:34:f9:06:de:55:db:c0:6d:4c:03:97:cf:d3:15:56 tu_correo@tu_dominio.com\n\tThe key's randomart image is:\n\t+--[ RSA 2048]----+\n\t|                 |\n\t|                 |\n\t|                 |\n\t|    . o S        |\n\t|o+oo.o * E       |\n\t|*+o...= o        |\n\t|+o.+.o           |\n\t|o o++..          |\n\t+-----------------+\n\n Esto quiere decir que ya generamos nuestras claves SSH correctamente. Como podemos apreciar, la clave privada a sido guardada en: <span class=\"inline_file\">\/home\/frontend\/.ssh\/id_rsa<\/span> y la clave p\u00fablica en <span class=\"inline_file\">\/home\/frontend\/.ssh\/id_rsa.pub<\/span>. Entonces ya podemos agregar nuestra nueva clave SSH al ssh-agent, escribiendo lo siguiente en nuestro terminal: \teval \"$(ssh-agent -s)\" && ssh-add ~\/.ssh\/id_rsa\n\n Con esto hemos agregado nuestra clave al peque\u00f1o programa ssh-agent para que administre nuestras llaves por nosotros. Lo que quiere decir es que tu s\u00f3lo ingresaras tu clave una sola vez, y despu\u00e9s de eso, ssh-agent mantendr\u00e1 la clave en memoria y cada vez que sea requerida ssh-agent la entregar\u00e1 por nosotros y si todo nos fue bien nos saldr\u00e1 algo como esto: \tAgent pid 6026\n\tIdentity added: \/home\/frontend\/.ssh\/id_rsa (\/home\/frontend\/.ssh\/id_rsa)\n\nAgregando nuestra clave p\u00fablica a Github\n----------------------------------------\n\n Primero instalamos xclip, para poder copiar el contenido de nuestra clave p\u00fablica por consola. \tsudo apt-get install xclip\n\n Luego seleccionamos y copiamos el contenido de nuestra clave p\u00fablica con la siguiente l\u00ednea de c\u00f3digo: \txclip -sel clip\n\n Con esto tenemos nuestra clave p\u00fablica en el portapapeles, entonces ingresamos a Github, y En la secci\u00f3n [Settings](https:\/\/github.com\/settings\/profile \"Github Settings\") elegimos la opci\u00f3n [SSH Keys](https:\/\/github.com\/settings\/ssh \"SSH Keys\") e ingresamos. Hacemos click en el bot\u00f3n <span class=\"inline_folder\">Add SSH Key<\/span>(Agrega tu clave SSH). En el campo **Title** escribimos algo descriptivo sobre esta clave y en el campo **Key** pegamos el contenido del archivo <span class=\"inline_file\">~\/.ssh\/id_rsa.pub<\/span>(contenido que tenemos en nuestro portapapeles listo para pegar). Y luego hacemos click en el b\u00f3ton <span class=\"inline_folder\">Add Key<\/span>, nos pedir\u00e1 nuestra contrase\u00f1a de Github para validar y listo. Validando nuestra clave SSH con Github\n--------------------------------------\n\n Para comprobar que todo anda bien, simplemente escribimos lo siguiente en nuestra terminal: \tssh -T git@github.com\n\n Si todo anda bien, debemos obtener lo siguiente: \tWarning: Permanently added the RSA host key for IP address '178.10.123.50' to the list of known hosts.\n\tHi jansanchez! You've successfully authenticated.\n\n Con esto ya tenemos registrada nuestra clave p\u00fablica en github, lo cual nos permitir\u00e1 subir cambios al servidor de Github creando una conexi\u00f3n segura. Bueno eso es todo, espero que les haya servido de algo este peque\u00f1o art\u00edculo. \n","html":"Las claves SSH tambi\u00e9n conocidas como llaves SSH, son una manera de identificar las computadoras de confianza, sin tener que ingresar una contrase\u00f1a.\r\n\r\nLas claves SSH se deben generar para cada usuario. Luego de realizar la generaci\u00f3n obtendremos una clave privada y una clave p\u00fablica.\r\n\r\nEn este art\u00edculo te mostraremos como generar claves SSH para tu usuario, siguiendo estos sencillos pasos:\r\n\r\n<h2>Validamos si tenemos una clave SSH existente<\/h2>\r\n\r\nPara ello escribimos lo siguiente en nuestro terminal:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nls -al ~\/.ssh | grep \".pub\"\r\n<\/code>\r\n<\/pre>\r\n\r\nSi ya tenemos una clave SSH nos aparecer\u00e1 algo similar a esto:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\n-rw-r--r--  1 frontend frontend  399 Aug 22 17:04 id_rsa.pub\r\n<\/code>\r\n<\/pre>\r\n\r\nPero si a\u00fan no la hemos generado entonces nos pueden salir estos 2 mensajes:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nls: cannot access \/home\/frontend\/.ssh: No such file or directory\r\n<\/code>\r\n<\/pre>\r\n\r\n\u00f3 tambi\u00e9n:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\n<\/code>\r\n<\/pre>\r\n\r\nS\u00ed, nos puede salir vac\u00edo o en blanco, ya que puede que tengamos la carpeta <span class=\"inline_folder\">.ssh<\/span> pero no haya ning\u00fan archivo dentro de esta.\r\n\r\n<h2>Generando una nueva clave SSH<\/h2>\r\n\r\nSi a\u00fan no tenemos una clave .ssh entonces la procederemos a generar escribiendo en nuestro terminal lo siguiente:\r\n\r\nClaro, colocando tu correo electr\u00f3nico en vez de <span class=\"inline_code\">tu_correo@tu_dominio.com<\/span>.\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nssh-keygen -t rsa -C \"tu_correo@tu_dominio.com\"\r\n<\/code>\r\n<\/pre>\r\n\r\nDe preferencia dejemoslo con los ajustes por defecto, por lo que cuando nos haga las 3 preguntas, simplemente pulsamos Enter.\r\n\r\nLuego del proceso nos quedar\u00e1 algo parecido a esto:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nssh-keygen -t rsa -C \"tu_correo@tu_dominio.com\"\r\nGenerating public\/private rsa key pair.\r\nEnter file in which to save the key (\/home\/frontend\/.ssh\/id_rsa): \r\nEnter passphrase (empty for no passphrase): \r\nEnter same passphrase again: \r\nYour identification has been saved in \/home\/frontend\/.ssh\/id_rsa.\r\nYour public key has been saved in \/home\/frontend\/.ssh\/id_rsa.pub.\r\nThe key fingerprint is:\r\n1f:34:f9:06:de:55:db:c0:6d:4c:03:97:cf:d3:15:56 tu_correo@tu_dominio.com\r\nThe key's randomart image is:\r\n+--[ RSA 2048]----+\r\n|                 |\r\n|                 |\r\n|                 |\r\n|    . o S        |\r\n|o+oo.o * E       |\r\n|*+o...= o        |\r\n|+o.+.o           |\r\n|o o++..          |\r\n+-----------------+\r\n<\/code>\r\n<\/pre>\r\n\r\nEsto quiere decir que ya generamos nuestras claves SSH correctamente. Como podemos apreciar, la clave privada a sido guardada en: <span class=\"inline_file\">\/home\/frontend\/.ssh\/id_rsa<\/span> y la clave p\u00fablica en <span class=\"inline_file\">\/home\/frontend\/.ssh\/id_rsa.pub<\/span>.\r\n\r\nEntonces ya podemos agregar nuestra nueva clave SSH al ssh-agent, escribiendo lo siguiente en nuestro terminal:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\neval \"$(ssh-agent -s)\" && ssh-add ~\/.ssh\/id_rsa\r\n<\/code>\r\n<\/pre>\r\n\r\nCon esto hemos agregado nuestra clave al peque\u00f1o programa ssh-agent para que administre nuestras llaves por nosotros. Lo que quiere decir es que tu s\u00f3lo ingresaras tu clave una sola vez, y despu\u00e9s de eso, ssh-agent mantendr\u00e1 la clave en memoria y cada vez que sea requerida ssh-agent la entregar\u00e1 por nosotros y si todo nos fue bien nos saldr\u00e1 algo como esto:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nAgent pid 6026\r\nIdentity added: \/home\/frontend\/.ssh\/id_rsa (\/home\/frontend\/.ssh\/id_rsa)\r\n<\/code>\r\n<\/pre>\r\n\r\n\r\n<h2>Agregando nuestra clave p\u00fablica a Github<\/h2>\r\n\r\nPrimero instalamos xclip, para poder copiar el contenido de nuestra clave p\u00fablica por consola.\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nsudo apt-get install xclip\r\n<\/code>\r\n<\/pre>\r\n\r\nLuego seleccionamos y copiamos el contenido de nuestra clave p\u00fablica con la siguiente l\u00ednea de c\u00f3digo:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nxclip -sel clip < ~\/.ssh\/id_rsa.pub\r\n<\/code>\r\n<\/pre>\r\n\r\nCon esto tenemos nuestra clave p\u00fablica en el portapapeles, entonces ingresamos a Github, y En la secci\u00f3n <a href=\"https:\/\/github.com\/settings\/profile\" title=\"Github Settings\" target=\"_blank\">Settings<\/a> elegimos la opci\u00f3n <a href=\"https:\/\/github.com\/settings\/ssh\" title=\"SSH Keys\" target=\"_blank\">SSH Keys<\/a> e ingresamos.\r\n\r\nHacemos click en el bot\u00f3n <span class=\"inline_folder\">Add SSH Key<\/span>(Agrega tu clave SSH).\r\n\r\nEn el campo <strong>Title<\/strong> escribimos algo descriptivo sobre esta clave y en el campo <strong>Key<\/strong> pegamos el contenido del archivo <span class=\"inline_file\">~\/.ssh\/id_rsa.pub<\/span>(contenido que tenemos en nuestro portapapeles listo para pegar).\r\n\r\nY luego hacemos click en el b\u00f3ton <span class=\"inline_folder\">Add Key<\/span>, nos pedir\u00e1 nuestra contrase\u00f1a de Github para validar y listo.\r\n\r\n<h2>Validando nuestra clave SSH con Github<\/h2>\r\n\r\nPara comprobar que todo anda bien, simplemente escribimos lo siguiente en nuestra terminal:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nssh -T git@github.com\r\n<\/code>\r\n<\/pre>\r\n\r\nSi todo anda bien, debemos obtener lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-sh\">\r\n<code>\r\nWarning: Permanently added the RSA host key for IP address '178.10.123.50' to the list of known hosts.\r\nHi jansanchez! You've successfully authenticated.\r\n<\/code>\r\n<\/pre>\r\n\r\nCon esto ya tenemos registrada nuestra clave p\u00fablica en github, lo cual nos permitir\u00e1 subir cambios al servidor de Github creando una conexi\u00f3n segura.\r\n\r\nBueno eso es todo, espero que les haya servido de algo este peque\u00f1o art\u00edculo.\r\n","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/09\/ssh-keygen-id_rsa-1.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Tue, 09 Sep 2014 13:20:12 +0000","created_by":1,"updated_at":"Tue, 09 Sep 2014 16:24:34 +0000","updated_by":1,"published_at":"Tue, 09 Sep 2014 13:20:12 +0000","published_by":1},{"id":1752,"title":"Gulp.js: Plugins m\u00e1s usados y sus configuraciones b\u00e1sicas","slug":"gulp-js-plugins-como-configurar-tareas","markdown":"\nEn nuestro art\u00edculo anterior aprendimos [\u00bfQu\u00e9 es Gulp.js?](http:\/\/frontend-labs.com\/1669--gulp-js-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos \"Gulp.js en espa\u00f1ol \u2013 tutorial b\u00e1sico y primeros pasos\") y \u00bfC\u00f3mo funciona?, es por eso que ahora nos enfocaremos en la configuraci\u00f3n de tareas comunes mediante los [plugins](http:\/\/gulpjs.com\/plugins\/ \"Gulp.js plugins\") que Gulp.js nos ofrece. A continuaci\u00f3n listaremos algunos de los plugins m\u00e1s usados de Gulp.js y sus configuraciones b\u00e1sicas:\n\n[gulp-concat](https:\/\/github.com\/wearefractal\/gulp-concat \"gulp-concat plugin for gulp\")\n----------------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para concatenar archivos. Concatena archivos usando el salto de l\u00ednea(newLine) desde el sistema operativo. Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-concat\n\n Luego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    concat = require('gulp-concat');\n\t\n\tgulp.task('concatenar', function() {\n\t    gulp.src(['.\/lib\/1.js', '.\/lib\/2.js', '.\/lib\/3.js'])\n\t        .pipe(concat('libs.js'))\n\t        .pipe(gulp.dest('.\/dist\/js\/'))\n\t});\n\n Y finalmente ejecutamos la tarea concatenar. \tgulp concatenar\n\n Para cambiar el salto de l\u00ednea simplemente pasamos un objeto como segundo par\u00e1metro, por ejemplo as\u00ed: \t.pipe(concat('libs.js', {newLine: ';'}))\n\n Con lo cual concatenaremos los archivos indicados pero en vez de que se separen por un salto de l\u00ednea, estar\u00e1n separados por un punto y coma(;). [gulp-stylus](https:\/\/www.npmjs.org\/package\/gulp-stylus \"gulp-stylus plugin for gulp\")\n--------------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para compilar archivos stylus(.styl) a .css utilizando el API de [Stylus](http:\/\/learnboost.github.io\/stylus\/ \"Stylus language\"). Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-stylus\n\n Luego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    stylus = require('gulp-stylus');\n\t\n\tvar path = {\n\t    stylus: ['stylus\/**\/*.styl'],\n\t    css: 'public\/css\/'\n\t};\n\t\n\tgulp.task('estilos', function () {\n\t    return gulp.src(path.stylus)\n\t        .pipe(stylus({\n\t            compress: true\n\t        }))\n\t        .pipe(gulp.dest(path.css));\n\t});\n\n Y finalmente ejecutamos la tarea estilos. \tgulp estilos\n\n Adicionalmente, al plugin le estamos pasando como par\u00e1metro un objeto <span class=\"inline_code\">{ compress: true }<\/span> para que comprima el css resultante. [gulp-coffee](https:\/\/www.npmjs.org\/package\/gulp-coffee \"gulp-coffee plugin for gulp\")\n--------------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para compilar archivos CoffeeScript(.coffee) a .js utilizando [CoffeeScript](http:\/\/coffeescript.org\/#usage \"CoffeeScript language\"). Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-coffee\n\n Luego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    coffee = require('gulp-coffee');\n\t\n\tvar path = {\n\t    coffee: ['coffee\/**\/*.coffee'],\n\t    js: 'public\/js\/'\n\t};\n\t\n\tgulp.task('coffee', function() {\n\t    return gulp.src(path.coffee)\n\t        .pipe(coffee({bare: true}).on('error', function(err){\n\t            console.log(err.name + \" en \" + err.plugin);\n\t        }))\n\t        .pipe(gulp.dest(path.js));\n\t});\n\n Y finalmente ejecutamos la tarea coffee. \tgulp coffee\n\n Adicionalmente, al plugin le estamos pasando como par\u00e1metro un objeto <span class=\"inline_code\">{ bare: true }<\/span> para que genere c\u00f3digo Javascript sin un wrapper(envoltorio) de c\u00f3digo. CoffeeScript emitir\u00e1 un <span class=\"inline_file\">error<\/span> para casos en los que la sintaxis de CoffeeScript sea inv\u00e1lida, es por eso que le agregamos el listener(oyente) <span class=\"inline_code\">.on('error', function(err){ }<\/span> para poder estar atentos a cualquier fallo al compilar. [gulp-jade](https:\/\/www.npmjs.org\/package\/gulp-jade \"gulp-jade plugin for gulp\")\n--------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para compilar plantillas .jade hacia archivos .html utilizando el API de [jade language](https:\/\/github.com\/visionmedia\/jade \"Jade - robust, elegant, feature rich template engine for nodejs\"). Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-jade\n\n Luego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    jade = require('gulp-jade');\n\t\n\tvar path = {\n\t    jade: ['jade\/**\/*.jade'],\n\t    html: 'public\/'\n\t};\n\t\n\tgulp.task('html', function() {\n\t    return gulp.src(path.jade)\n\t    .pipe(jade({\n\t        pretty: true\n\t    }))\n\t    .pipe(gulp.dest(path.html))\n\t});\n\n Y finalmente ejecutamos la tarea html. \tgulp html\n\n Adicionalmente al plugin le estamos pasando un objeto <span class=\"inline_code\">{ pretty: true }<\/span> en el que le indicamos que el c\u00f3digo HTML generado sea legible y este correctamente tabulado. As\u00ed como la opci\u00f3n pretty, existen otras opciones m\u00e1s. Las puedes encontrar en la documentaci\u00f3n oficial del [API de jade language](http:\/\/jade-lang.com\/api\/ \"Jade Language API\"). Y si a\u00fan tienes dudas sobre algo como <span class=\"inline_code\">['jade\/**\/*.jade']<\/span> dale una revisada a este [art\u00edculo](http:\/\/frontend-labs.com\/1669--gulp-js-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos#glob \"Gulp.js en espa\u00f1ol \u2013 tutorial b\u00e1sico y primeros pasos\"). [gulp-rename](https:\/\/www.npmjs.org\/package\/gulp-rename \"rename plugin for gulp\")\n---------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para renombrar archivos, usualmente se utiliza para cambiar extensiones de archivos. Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-rename\n\n Vamos a usar como ejemplo nuestra tarea html, por lo cual en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    jade = require('gulp-jade'),\n\t    rename = require('gulp-rename');\n\t\n\tvar path = {\n\t    jade: ['jade\/**\/*.jade'],\n\t    html: 'public\/'\n\t};\n\t\n\tgulp.task('html', function() {\n\t    return gulp.src(path.jade)\n\t    .pipe(jade({\n\t        pretty: true\n\t    }))\n\t    .pipe(rename({extname: '.phtml'}))\n\t    .pipe(gulp.dest(path.html))\n\t});\n\n Y finalmente ejecutamos la tarea <span class=\"inline_code\">html<\/span>. \tgulp html\n\n Como necesitamos que nos devuelva archivos con la extensi\u00f3n <span class=\"inline_code\">.phtml<\/span>, entonces al plugin le pasamos como \u00fanico par\u00e1metro el siguiente objeto: <span class=\"inline_code\">{extname: '.phtml'}<\/span>. En el cual le dicemos al plugin que la nueva extensi\u00f3n de los archivos ser\u00e1 <span class=\"inline_code\">.phtml<\/span>. [gulp-uglify](https:\/\/github.com\/terinjokes\/gulp-uglify \"uglify plugin for gulp\")\n---------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para comprimir c\u00f3digo JavaScript con [UglifyJS2](https:\/\/github.com\/mishoo\/UglifyJS2 \"JavaScript parser, mangler, compressor and beautifier toolkit\"). Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-uglify\n\n Luego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    uglify = require('gulp-uglify');\n\t\n\tgulp.task('min', function() {\n\t    return gulp.src('source\/scripts\/*.js')\n\t        .pipe(uglify())\n\t        .pipe(gulp.dest('dist\/scripts\/'))\n\t});\n\n Y finalmente ejecutamos la tarea <span class=\"inline_code\">min<\/span>. \tgulp min\n\n En nuestro ejemplo, al ejecutar la tarea min, esta comprimir\u00e1 todos los archivos .js dentro de la carpeta <span class=\"inline_folder\">source\/scripts\/<\/span> y los guardar\u00e1 en la carpeta <span class=\"inline_folder\">dist\/scripts\/<\/span>. Este plugin tiene m\u00e1s opciones para personalizar la compresi\u00f3n de los archivos y las puedes encontrar [aqu\u00ed](https:\/\/github.com\/terinjokes\/gulp-uglify#options \"gulp uglify options\"). [gulp-if](https:\/\/www.npmjs.org\/package\/gulp-if \"if plugin for gulp\")\n---------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para controlar condicionalmente el flujo de la ejecuci\u00f3n de subtareas. Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-if\n\n Para este ejemplo usaremos la tarea min, as\u00ed que en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    uglify = require('gulp-uglify'),\n\t    if = require('gulp-if');\n\t\n\tvar comprimir = false;\n\t\n\tgulp.task('min', function() {\n\t    return gulp.src('source\/scripts\/*.js')\n\t               .pipe(if(comprimir, uglify()))\n\t               .pipe(gulp.dest('dist\/scripts\/'))\n\t});\n\n Y finalmente ejecutamos la tarea <span class=\"inline_code\">min<\/span>. \tgulp min\n\n En nuestro ejemplo, al ejecutar la tarea min, esta comprimir\u00e1 los archivos s\u00f3lo si la variable comprimir es <span class=\"inline_code\">true<\/span>, de lo contrario simplemente avanzar\u00e1 hacia la siguiente subtarea. Si no hay m\u00e1s subtareas sencillamente finalizar\u00e1 la subtarea. [gulp-debug](https:\/\/www.npmjs.org\/package\/gulp-debug \"debug plugin for gulp\")\n------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para ver informaci\u00f3n de archivos formato [vinyl](https:\/\/github.com\/wearefractal\/vinyl \"Virtual file format\")(el formato que tienen los archivos que pasan por el m\u00e9todo <span class=\"inline_code\">gulp.src()<\/span>). Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-debug\n\n Para este ejemplo usaremos la tarea min, as\u00ed que en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    uglify = require('gulp-uglify'),\n\t    debug = require('gulp-debug');\n\t\n\tgulp.task('min', function() {\n\t    return gulp.src('source\/scripts\/*.js')\n\t               .pipe(debug({verbose: true})\n\t               .pipe(gulp.dest('dist\/scripts\/'))\n\t});\n\n Y finalmente ejecutamos la tarea <span class=\"inline_code\">min<\/span>. \tgulp min\n\n Le pasamos como \u00fanico par\u00e1metro el siguiente objeto: <span class=\"inline_code\">{verbose: true}<\/span> para que nos muestre la mayor informaci\u00f3n posible de cada archivo. Este plugin es muy \u00fatil para poder detectar errores, por ejemplo si una tarea esta fallando, con este plugin realizamos una depuraci\u00f3n de la tarea archivo por archivo, esto har\u00e1 que la tarea se detenga justo en el archivo que nos esta dando problemas y a su vez nos dar\u00e1 toda la informaci\u00f3n relacionada. [gulp-imagemin](https:\/\/www.npmjs.org\/package\/gulp-imagemin \"imagemin plugin for gulp\")\n---------------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para minificar im\u00e1genes PNG, JPEG, GIF y SVG con [imagemin](https:\/\/github.com\/imagemin\/imagemin \"imagemin\"). Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-imagemin\n\n En nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp');\n\tvar imagemin = require('gulp-imagemin');\n\t\n\tgulp.task('imagenes', function () {\n\t    return gulp.src(['src\/images\/*.*'])\n\t        .pipe(imagemin())\n\t        .pipe(gulp.dest('dist\/images\/'));\n\t});\n\n Y finalmente ejecutamos la tarea <span class=\"inline_code\">imagenes<\/span>. \tgulp imagenes\n\n Este plugin tiene m\u00e1s opciones para personalizar la compresi\u00f3n de las im\u00e1genes y las puedes encontrar [aqu\u00ed](https:\/\/github.com\/sindresorhus\/gulp-imagemin#imageminoptions \"gulp imagemin options\"). [gulp-minify-css](https:\/\/www.npmjs.org\/package\/gulp-minify-css \"minify-css plugin for gulp\")\n---------------------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para minificar archivos css con [clean-css](https:\/\/github.com\/jakubpawlowicz\/clean-css \"clean-css: A fast, efficient, and well tested CSS minifier for node.js.\"). Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-minify-css\n\n En nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    minifyCSS = require('gulp-minify-css');\n\t\n\tgulp.task('mincss', function() {\n\t    gulp.src('.\/source\/css\/*.css')\n\t        .pipe(minifyCSS())\n\t        .pipe(gulp.dest('.\/dist\/css\/'))\n\t});\n\n Y finalmente ejecutamos la tarea <span class=\"inline_code\">mincss<\/span>. \tgulp mincss\n\n Este plugin tiene m\u00e1s opciones para personalizar la compresi\u00f3n de css, las toma de [clean-css](https:\/\/github.com\/GoalSmashers\/clean-css\/ \"clean-css\") y las puedes encontrar [aqu\u00ed](https:\/\/github.com\/jakubpawlowicz\/clean-css#how-to-use-clean-css-programmatically \"gulp clean-css options\"). [gulp-rimraf](https:\/\/github.com\/robrich\/gulp-rimraf \"rimraf plugin for gulp\")\n------------------------------------------------------------------------------\n\nPlugin de Gulp.js que sirve para eliminar archivos, directorios, enlaces simb\u00f3licos, etc. Se utiliza generalmente para limpiar las carpetas o archivos que generamos con alguna tarea, como por ejemplo: Javascript compilado desde CoffeeScript. Lo instalamos en nuestro proyecto.\n\n\tnpm install --save-dev gulp-rimraf\n\n Luego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente: \tvar gulp = require('gulp'),\n\t    clean = require('gulp-rimraf');\n\t\n\tgulp.task('limpiar', function() {\n\t    return gulp.src(['..\/dist\/js\/*.js'], { read: false })\n\t           .pipe(clean({ force: true }));\n\t});\n\n Y finalmente ejecutamos la tarea <span class=\"inline_code\">limpiar<\/span>. \tgulp limpiar\n\n En nuestro ejemplo, al ejecutar la tarea limpiar, esta eliminar\u00e1 todos los archivos .js dentro de la carpeta <span class=\"inline_folder\">..\/dist\/js\/<\/span> Adicionalmente, al m\u00e9todo <span class=\"inline_code\">.src()<\/span> le pasamos como segundo par\u00e1metro <span class=\"inline_code\">{ read: false }<\/span> para que cuando encuentre estos archivos, no los lea. Ya que no queremos perder tiempo leyendolos porque finalmente los borraremos. Y al plugin le pasamos como \u00fanico par\u00e1metro un objeto <span class=\"inline_code\">{ force: true }<\/span> para que este pueda eliminar archivos fuera del directorio actual de trabajo. [gulp.watch](https:\/\/github.com\/gulpjs\/gulp\/blob\/master\/docs\/API.md#gulpwatchglob-opts-tasks \"gulp.watch plugin for gulp\")\n--------------------------------------------------------------------------------------------------------------------------\n\n<span class=\"inline_code\">gulp.watch()<\/span> observa cambios en los archivos que le indiquemos y luego nos permite realizar las tareas que deseemos. Como ven este no es un plugin, es parte del API de Gulp.js y es un m\u00e9todo muy usado.\n\n Para probarlo en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edremos lo siguiente: \tvar gulp = require('gulp'),\n\t    path = {},\n\t    jadeTasks = ['html:frontend'],\n\t    coffeeTasks = ['js'],\n\t    stylusTasks = ['styles'];\n\t\n\tpath.watch = {\n\t    jade: ['jade\/**\/*.jade'],\n\t    stylus: ['stylus\/**\/*.styl'],\n\t    coffee: ['coffee\/**\/*.coffee']\n\t};\n\t\n\tgulp.task('watch', function () {\n\t\n\t    gulp.watch(path.watch.jade, jadeTasks);\n\t    gulp.watch(path.watch.coffee, coffeeTasks);\n\t    gulp.watch(path.watch.stylus, stylusTasks);\n\t});\n\n Y finalmente ejecutamos la tarea <span class=\"inline_code\">watch<\/span>. \tgulp watch\n\n Luego veremos algo parecido a lo siguiente: \t[11:17:05] Using gulpfile ~\/frontend\/gulpfile.js\n\t[11:17:05] Starting 'watch'...\n\t[11:17:05] Finished 'watch' after 126 ms\n\n Con lo cual veremos Gulp.js se quedar\u00e1 observando si existe alg\u00fan cambio y apenas lo hagamos se ejecutar\u00e1n las tareas que le indiquemos. \t[11:32:13] Starting 'js'...\n\t[11:32:15] Finished 'js' after 1.36 s\n\n Es muy probable que una vez que empiezes a usar este m\u00e9todo, no lo dejes de usar nunca m\u00e1s!. Si continuamos listando todos los plugins de Gulp.js esta lista ser\u00eda muy grande ya que actualmente existen alrededor de 780 plugins oficiales de Gulp.js tales como [gulp-minify-css](https:\/\/www.npmjs.org\/package\/gulp-minify-css \"minify-css plugin for gulp\"), [gulp-jshint](https:\/\/www.npmjs.org\/package\/gulp-jshint \"jshint plugin for gulp\"), [gulp.spritesmith](https:\/\/www.npmjs.org\/package\/gulp-spritesmith \"spritesmith plugin for gulp\"), [gulp-connect](https:\/\/www.npmjs.org\/package\/gulp-connect \"gulp-connect plugin for gulp\"), [gulp-zip](https:\/\/github.com\/sindresorhus\/gulp-zip \"gulp-zip plugin for gulp\"), [run-sequence](https:\/\/www.npmjs.org\/package\/run-sequence \"run-sequence plugin for gulp\"), [gulp-load-plugins](https:\/\/www.npmjs.org\/package\/gulp-load-plugins \"gulp-load-plugins plugin for gulp\"), [gulp-bump](https:\/\/www.npmjs.org\/package\/gulp-bump \"gulp-bump plugin for gulp\") y muchos [plugins](http:\/\/gulpjs.com\/plugins\/ \"plugins for gulp\") m\u00e1s. Estoy seguro que este art\u00edculo le servir\u00e1 a m\u00e1s de uno para comenzar a programar sus tareas con Gulp.js, hasta la pr\u00f3xima. \n","html":"En nuestro art\u00edculo anterior aprendimos <a href=\"http:\/\/frontend-labs.com\/1669--gulp-js-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos\" title=\"Gulp.js en espa\u00f1ol \u2013 tutorial b\u00e1sico y primeros pasos\" target=\"_blank\">\u00bfQu\u00e9 es Gulp.js?<\/a> y \u00bfC\u00f3mo funciona?, es por eso que ahora nos enfocaremos en la configuraci\u00f3n de tareas comunes mediante los <a href=\"http:\/\/gulpjs.com\/plugins\/\" title=\"Gulp.js plugins\" target=\"_blank\">plugins<\/a> que Gulp.js nos ofrece.\r\n\r\nA continuaci\u00f3n listaremos algunos de los plugins m\u00e1s usados de Gulp.js y sus configuraciones b\u00e1sicas:\r\n\r\n<h2><a href=\"https:\/\/github.com\/wearefractal\/gulp-concat\" title=\"gulp-concat plugin for gulp\" target=\"_blank\" id=\"concat\">gulp-concat<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para concatenar archivos. Concatena archivos usando el salto de l\u00ednea(newLine) desde el sistema operativo.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-concat\r\n<\/code>\r\n<\/pre>\r\n\r\nLuego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    concat = require('gulp-concat');\r\n\r\ngulp.task('concatenar', function() {\r\n    gulp.src(['.\/lib\/1.js', '.\/lib\/2.js', '.\/lib\/3.js'])\r\n        .pipe(concat('libs.js'))\r\n        .pipe(gulp.dest('.\/dist\/js\/'))\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea concatenar.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp concatenar\r\n<\/code>\r\n<\/pre>\r\n\r\nPara cambiar el salto de l\u00ednea simplemente pasamos un objeto como segundo par\u00e1metro, por ejemplo as\u00ed:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\n.pipe(concat('libs.js', {newLine: ';'}))\r\n<\/code>\r\n<\/pre>\r\n\r\nCon lo cual concatenaremos los archivos indicados pero en vez de que se separen por un salto de l\u00ednea, estar\u00e1n separados por un punto y coma(;).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/www.npmjs.org\/package\/gulp-stylus\" title=\"gulp-stylus plugin for gulp\" target=\"_blank\" id=\"stylus\">gulp-stylus<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para compilar archivos stylus(.styl) a .css utilizando el API de <a href=\"http:\/\/learnboost.github.io\/stylus\/\" title=\"Stylus language\" target=\"_blank\">Stylus<\/a>.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-stylus\r\n<\/code>\r\n<\/pre>\r\n\r\nLuego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    stylus = require('gulp-stylus');\r\n\r\nvar path = {\r\n    stylus: ['stylus\/**\/*.styl'],\r\n    css: 'public\/css\/'\r\n};\r\n\r\ngulp.task('estilos', function () {\r\n    return gulp.src(path.stylus)\r\n        .pipe(stylus({\r\n            compress: true\r\n        }))\r\n        .pipe(gulp.dest(path.css));\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea estilos.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp estilos\r\n<\/code>\r\n<\/pre>\r\n\r\nAdicionalmente, al plugin le estamos pasando como par\u00e1metro un objeto <span class=\"inline_code\">{ compress: true }<\/span> para que comprima el css resultante.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/www.npmjs.org\/package\/gulp-coffee\" title=\"gulp-coffee plugin for gulp\" target=\"_blank\" id=\"coffee\">gulp-coffee<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para compilar archivos CoffeeScript(.coffee) a .js utilizando <a href=\"http:\/\/coffeescript.org\/#usage\" title=\"CoffeeScript language\" target=\"_blank\">CoffeeScript<\/a>.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-coffee\r\n<\/code>\r\n<\/pre>\r\n\r\nLuego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    coffee = require('gulp-coffee');\r\n\r\nvar path = {\r\n    coffee: ['coffee\/**\/*.coffee'],\r\n    js: 'public\/js\/'\r\n};\r\n\r\ngulp.task('coffee', function() {\r\n    return gulp.src(path.coffee)\r\n        .pipe(coffee({bare: true}).on('error', function(err){\r\n            console.log(err.name + \" en \" + err.plugin);\r\n        }))\r\n        .pipe(gulp.dest(path.js));\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea coffee.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp coffee\r\n<\/code>\r\n<\/pre>\r\n\r\nAdicionalmente, al plugin le estamos pasando como par\u00e1metro un objeto <span class=\"inline_code\">{ bare: true }<\/span> para que genere c\u00f3digo Javascript sin un wrapper(envoltorio) de c\u00f3digo.\r\n\r\nCoffeeScript emitir\u00e1 un <span class=\"inline_file\">error<\/span> para casos en los que la sintaxis de CoffeeScript sea inv\u00e1lida,\r\nes por eso que le agregamos el listener(oyente) <span class=\"inline_code\">.on('error', function(err){ }<\/span> para poder estar atentos a cualquier fallo al compilar.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/www.npmjs.org\/package\/gulp-jade\" title=\"gulp-jade plugin for gulp\" target=\"_blank\" id=\"jade\">gulp-jade<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para compilar plantillas .jade hacia archivos .html utilizando el API de <a href=\"https:\/\/github.com\/visionmedia\/jade\" title=\"Jade - robust, elegant, feature rich template engine for nodejs\" target=\"_blank\">jade language<\/a>.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-jade\r\n<\/code>\r\n<\/pre>\r\n\r\nLuego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    jade = require('gulp-jade');\r\n\r\nvar path = {\r\n    jade: ['jade\/**\/*.jade'],\r\n    html: 'public\/'\r\n};\r\n\r\ngulp.task('html', function() {\r\n    return gulp.src(path.jade)\r\n    .pipe(jade({\r\n        pretty: true\r\n    }))\r\n    .pipe(gulp.dest(path.html))\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea html.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp html\r\n<\/code>\r\n<\/pre>\r\n\r\nAdicionalmente al plugin le estamos pasando un objeto <span class=\"inline_code\">{ pretty: true }<\/span> en el que le indicamos que el c\u00f3digo HTML generado sea legible y este correctamente tabulado.\r\n\r\nAs\u00ed como la opci\u00f3n pretty, existen otras opciones m\u00e1s. Las puedes encontrar en la documentaci\u00f3n oficial del <a href=\"http:\/\/jade-lang.com\/api\/\" title=\"Jade Language API\" target=\"_blank\">API de jade language<\/a>.\r\n\r\nY si a\u00fan tienes dudas sobre algo como <span class=\"inline_code\">['jade\/**\/*.jade']<\/span> dale una revisada a este <a href=\"http:\/\/frontend-labs.com\/1669--gulp-js-en-espanol-tutorial-basico-primeros-pasos-y-ejemplos#glob\" title=\"Gulp.js en espa\u00f1ol \u2013 tutorial b\u00e1sico y primeros pasos\" target=\"_blank\">art\u00edculo<\/a>.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/www.npmjs.org\/package\/gulp-rename\" title=\"rename plugin for gulp\" target=\"_blank\" id=\"rename\">gulp-rename<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para renombrar archivos, usualmente se utiliza para cambiar extensiones de archivos.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-rename\r\n<\/code>\r\n<\/pre>\r\n\r\nVamos a usar como ejemplo nuestra tarea html, por lo cual en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    jade = require('gulp-jade'),\r\n    rename = require('gulp-rename');\r\n\r\nvar path = {\r\n    jade: ['jade\/**\/*.jade'],\r\n    html: 'public\/'\r\n};\r\n\r\ngulp.task('html', function() {\r\n    return gulp.src(path.jade)\r\n    .pipe(jade({\r\n        pretty: true\r\n    }))\r\n    .pipe(rename({extname: '.phtml'}))\r\n    .pipe(gulp.dest(path.html))\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea <span class=\"inline_code\">html<\/span>.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp html\r\n<\/code>\r\n<\/pre>\r\n\r\nComo necesitamos que nos devuelva archivos con la extensi\u00f3n <span class=\"inline_code\">.phtml<\/span>, entonces al plugin le pasamos como \u00fanico par\u00e1metro el siguiente objeto: <span class=\"inline_code\">{extname: '.phtml'}<\/span>.\r\n\r\nEn el cual le dicemos al plugin que la nueva extensi\u00f3n de los archivos ser\u00e1 <span class=\"inline_code\">.phtml<\/span>.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/github.com\/terinjokes\/gulp-uglify\" title=\"uglify plugin for gulp\" target=\"_blank\" id=\"uglify\">gulp-uglify<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para comprimir c\u00f3digo JavaScript con <a href=\"https:\/\/github.com\/mishoo\/UglifyJS2\" title=\"JavaScript parser, mangler, compressor and beautifier toolkit\" target=\"_blank\">UglifyJS2<\/a>.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-uglify\r\n<\/code>\r\n<\/pre>\r\n\r\nLuego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    uglify = require('gulp-uglify');\r\n\r\ngulp.task('min', function() {\r\n    return gulp.src('source\/scripts\/*.js')\r\n        .pipe(uglify())\r\n        .pipe(gulp.dest('dist\/scripts\/'))\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea <span class=\"inline_code\">min<\/span>.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp min\r\n<\/code>\r\n<\/pre>\r\n\r\nEn nuestro ejemplo, al ejecutar la tarea min, esta comprimir\u00e1 todos los archivos .js dentro de la carpeta <span class=\"inline_folder\">source\/scripts\/<\/span> y los guardar\u00e1 en la carpeta <span class=\"inline_folder\">dist\/scripts\/<\/span>.\r\n\r\nEste plugin tiene m\u00e1s opciones para personalizar la compresi\u00f3n de los archivos y las puedes encontrar <a href=\"https:\/\/github.com\/terinjokes\/gulp-uglify#options\" title=\"gulp uglify options\" target=\"_blank\">aqu\u00ed<\/a>.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/www.npmjs.org\/package\/gulp-if\" title=\"if plugin for gulp\" target=\"_blank\" id=\"if\">gulp-if<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para controlar condicionalmente el flujo de la ejecuci\u00f3n de subtareas.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-if\r\n<\/code>\r\n<\/pre>\r\n\r\nPara este ejemplo usaremos la tarea min, as\u00ed que en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    uglify = require('gulp-uglify'),\r\n    if = require('gulp-if');\r\n\r\nvar comprimir = false;\r\n\r\ngulp.task('min', function() {\r\n    return gulp.src('source\/scripts\/*.js')\r\n               .pipe(if(comprimir, uglify()))\r\n               .pipe(gulp.dest('dist\/scripts\/'))\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea <span class=\"inline_code\">min<\/span>.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp min\r\n<\/code>\r\n<\/pre>\r\n\r\nEn nuestro ejemplo, al ejecutar la tarea min, esta comprimir\u00e1 los archivos s\u00f3lo si la variable comprimir es <span class=\"inline_code\">true<\/span>, de lo contrario simplemente avanzar\u00e1 hacia la siguiente subtarea.\r\n\r\nSi no hay m\u00e1s subtareas sencillamente finalizar\u00e1 la subtarea.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/www.npmjs.org\/package\/gulp-debug\" title=\"debug plugin for gulp\" target=\"_blank\" id=\"debug\">gulp-debug<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para ver informaci\u00f3n de archivos formato <a href=\"https:\/\/github.com\/wearefractal\/vinyl\" target=\"_blank\" title=\"Virtual file format\">vinyl<\/a>(el formato que tienen los archivos que pasan por el m\u00e9todo <span class=\"inline_code\">gulp.src()<\/span>).\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-debug\r\n<\/code>\r\n<\/pre>\r\n\r\nPara este ejemplo usaremos la tarea min, as\u00ed que en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    uglify = require('gulp-uglify'),\r\n    debug = require('gulp-debug');\r\n\r\ngulp.task('min', function() {\r\n    return gulp.src('source\/scripts\/*.js')\r\n               .pipe(debug({verbose: true})\r\n               .pipe(gulp.dest('dist\/scripts\/'))\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea <span class=\"inline_code\">min<\/span>.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp min\r\n<\/code>\r\n<\/pre>\r\n\r\n\r\nLe pasamos como \u00fanico par\u00e1metro el siguiente objeto: <span class=\"inline_code\">{verbose: true}<\/span> para que nos muestre la mayor informaci\u00f3n posible de cada archivo.\r\n\r\nEste plugin es muy \u00fatil para poder detectar errores, por ejemplo si una tarea esta fallando, con este plugin realizamos una depuraci\u00f3n de la tarea archivo por archivo, esto har\u00e1 que la tarea se detenga justo en el archivo que nos esta dando problemas y a su vez nos dar\u00e1 toda la informaci\u00f3n relacionada.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/www.npmjs.org\/package\/gulp-imagemin\" title=\"imagemin plugin for gulp\" target=\"_blank\" id=\"imagemin\">gulp-imagemin<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para minificar im\u00e1genes PNG, JPEG, GIF y SVG con <a href=\"https:\/\/github.com\/imagemin\/imagemin\" target=\"_blank\" title=\"imagemin\">imagemin<\/a>.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-imagemin\r\n<\/code>\r\n<\/pre>\r\n\r\nEn nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp');\r\nvar imagemin = require('gulp-imagemin');\r\n\r\ngulp.task('imagenes', function () {\r\n    return gulp.src(['src\/images\/*.*'])\r\n        .pipe(imagemin())\r\n        .pipe(gulp.dest('dist\/images\/'));\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea <span class=\"inline_code\">imagenes<\/span>.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp imagenes\r\n<\/code>\r\n<\/pre>\r\n\r\nEste plugin tiene m\u00e1s opciones para personalizar la compresi\u00f3n de las im\u00e1genes y las puedes encontrar <a href=\"https:\/\/github.com\/sindresorhus\/gulp-imagemin#imageminoptions\" title=\"gulp imagemin options\" target=\"_blank\">aqu\u00ed<\/a>.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/www.npmjs.org\/package\/gulp-minify-css\" title=\"minify-css plugin for gulp\" target=\"_blank\" id=\"minifycss\">gulp-minify-css<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para minificar archivos css con <a href=\"https:\/\/github.com\/jakubpawlowicz\/clean-css\" target=\"_blank\" title=\"clean-css: A fast, efficient, and well tested CSS minifier for node.js.\">clean-css<\/a>.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-minify-css\r\n<\/code>\r\n<\/pre>\r\n\r\nEn nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    minifyCSS = require('gulp-minify-css');\r\n\r\ngulp.task('mincss', function() {\r\n    gulp.src('.\/source\/css\/*.css')\r\n        .pipe(minifyCSS())\r\n        .pipe(gulp.dest('.\/dist\/css\/'))\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea <span class=\"inline_code\">mincss<\/span>.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp mincss\r\n<\/code>\r\n<\/pre>\r\n\r\nEste plugin tiene m\u00e1s opciones para personalizar la compresi\u00f3n de css, las toma de <a href=\"https:\/\/github.com\/GoalSmashers\/clean-css\/\" target=\"_blank\" title=\"clean-css\">clean-css<\/a> y las puedes encontrar <a href=\"https:\/\/github.com\/jakubpawlowicz\/clean-css#how-to-use-clean-css-programmatically\" title=\"gulp clean-css options\" target=\"_blank\">aqu\u00ed<\/a>.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/github.com\/robrich\/gulp-rimraf\" title=\"rimraf plugin for gulp\" target=\"_blank\" id=\"rimraf\">gulp-rimraf<\/a><\/h2>\r\n\r\n<p>Plugin de Gulp.js que sirve para eliminar archivos, directorios, enlaces simb\u00f3licos, etc. Se utiliza generalmente para limpiar las carpetas o archivos que generamos con alguna tarea, como por ejemplo: Javascript compilado desde CoffeeScript.\r\n\r\nLo instalamos en nuestro proyecto.\r\n<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\nnpm install --save-dev gulp-rimraf\r\n<\/code>\r\n<\/pre>\r\n\r\nLuego en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edmos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    clean = require('gulp-rimraf');\r\n\r\ngulp.task('limpiar', function() {\r\n    return gulp.src(['..\/dist\/js\/*.js'], { read: false })\r\n           .pipe(clean({ force: true }));\r\n});\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea <span class=\"inline_code\">limpiar<\/span>.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp limpiar\r\n<\/code>\r\n<\/pre>\r\n\r\nEn nuestro ejemplo, al ejecutar la tarea limpiar, esta eliminar\u00e1 todos los archivos .js dentro de la carpeta <span class=\"inline_folder\">..\/dist\/js\/<\/span> \r\n\r\nAdicionalmente, al m\u00e9todo <span class=\"inline_code\">.src()<\/span> le pasamos como segundo par\u00e1metro <span class=\"inline_code\">{ read: false }<\/span> para que cuando encuentre estos archivos, no los lea. Ya que no queremos perder tiempo leyendolos porque finalmente los borraremos.\r\n\r\nY al plugin le pasamos como \u00fanico par\u00e1metro un objeto <span class=\"inline_code\">{ force: true }<\/span> para que este pueda eliminar archivos fuera del directorio actual de trabajo.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2><a href=\"https:\/\/github.com\/gulpjs\/gulp\/blob\/master\/docs\/API.md#gulpwatchglob-opts-tasks\" title=\"gulp.watch plugin for gulp\" target=\"_blank\" id=\"watch\">gulp.watch<\/a><\/h2>\r\n\r\n<p>\r\n<span class=\"inline_code\">gulp.watch()<\/span> observa cambios en los archivos que le indiquemos y luego nos permite realizar las tareas que deseemos. Como ven este no es un plugin, es parte del API de Gulp.js y es un m\u00e9todo muy usado.\r\n<\/p>\r\n\r\nPara probarlo en nuestro <span class=\"inline_file\">gulpfile.js<\/span> escrib\u00edremos lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-js\">\r\n<code>\r\nvar gulp = require('gulp'),\r\n    path = {},\r\n    jadeTasks = ['html:frontend'],\r\n    coffeeTasks = ['js'],\r\n    stylusTasks = ['styles'];\r\n\r\npath.watch = {\r\n    jade: ['jade\/**\/*.jade'],\r\n    stylus: ['stylus\/**\/*.styl'],\r\n    coffee: ['coffee\/**\/*.coffee']\r\n};\r\n\r\ngulp.task('watch', function () {\r\n\r\n    gulp.watch(path.watch.jade, jadeTasks);\r\n    gulp.watch(path.watch.coffee, coffeeTasks);\r\n    gulp.watch(path.watch.stylus, stylusTasks);\r\n});\r\n\r\n<\/code>\r\n<\/pre>\r\n\r\nY finalmente ejecutamos la tarea <span class=\"inline_code\">watch<\/span>.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\ngulp watch\r\n<\/code>\r\n<\/pre>\r\n\r\nLuego veremos algo parecido a lo siguiente:\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\n[11:17:05] Using gulpfile ~\/frontend\/gulpfile.js\r\n[11:17:05] Starting 'watch'...\r\n[11:17:05] Finished 'watch' after 126 ms\r\n<\/code>\r\n<\/pre>\r\n\r\nCon lo cual veremos Gulp.js se quedar\u00e1 observando si existe alg\u00fan cambio y apenas lo hagamos se ejecutar\u00e1n las tareas que le indiquemos.\r\n\r\n<pre class=\"prettyprint lang-bsh\">\r\n<code>\r\n[11:32:13] Starting 'js'...\r\n[11:32:15] Finished 'js' after 1.36 s\r\n<\/code>\r\n<\/pre>\r\n\r\nEs muy probable que una vez que empiezes a usar este m\u00e9todo, no lo dejes de usar nunca m\u00e1s!.\r\n\r\n\r\nSi continuamos listando todos los plugins de Gulp.js esta lista ser\u00eda muy grande ya que actualmente existen alrededor de 780 plugins oficiales de Gulp.js tales como <a href=\"https:\/\/www.npmjs.org\/package\/gulp-minify-css\" title=\"minify-css plugin for gulp\" target=\"_blank\" id=\"minify-css\">gulp-minify-css<\/a>, <a href=\"https:\/\/www.npmjs.org\/package\/gulp-jshint\" title=\"jshint plugin for gulp\" target=\"_blank\" id=\"jshint\">gulp-jshint<\/a>, <a href=\"https:\/\/www.npmjs.org\/package\/gulp-spritesmith\" title=\"spritesmith plugin for gulp\" target=\"_blank\" id=\"spritesmith\">gulp.spritesmith<\/a>, <a href=\"https:\/\/www.npmjs.org\/package\/gulp-connect\" title=\"gulp-connect plugin for gulp\" target=\"_blank\" id=\"connect\">gulp-connect<\/a>, <a href=\"https:\/\/github.com\/sindresorhus\/gulp-zip\" title=\"gulp-zip plugin for gulp\" target=\"_blank\" id=\"zip\">gulp-zip<\/a>, <a href=\"https:\/\/www.npmjs.org\/package\/run-sequence\" title=\"run-sequence plugin for gulp\" target=\"_blank\" id=\"run-sequence\">run-sequence<\/a>, <a href=\"https:\/\/www.npmjs.org\/package\/gulp-load-plugins\" title=\"gulp-load-plugins plugin for gulp\" target=\"_blank\" id=\"gulp-load-plugins\">gulp-load-plugins<\/a>, <a href=\"https:\/\/www.npmjs.org\/package\/gulp-bump\" title=\"gulp-bump plugin for gulp\" target=\"_blank\" id=\"gulp-bump\">gulp-bump<\/a> y muchos <a href=\"http:\/\/gulpjs.com\/plugins\/\" title=\"plugins for gulp\" target=\"_blank\" id=\"gulp-plugins\">plugins<\/a> m\u00e1s.\r\n\r\nEstoy seguro que este art\u00edculo le servir\u00e1 a m\u00e1s de uno para comenzar a programar sus tareas con Gulp.js, hasta la pr\u00f3xima.\r\n\r\n","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/10\/gulp-js-plugins.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Fri, 03 Oct 2014 03:03:15 +0000","created_by":1,"updated_at":"Fri, 31 Oct 2014 11:44:03 +0000","updated_by":1,"published_at":"Fri, 03 Oct 2014 03:03:15 +0000","published_by":1},{"id":1878,"title":"Reparar plugin flash player de Google Chrome en debian","slug":"reparar-el-flash-player-de-google-chrome-en-debian","markdown":"\nSi tienes problemas con tu navegador Google Chrome, no funciona el flash player y usas sistemas operativos o distros sea ubuntu o debian, este post puede\u00a0ayudarte. Seg\u00fan el [ issue](https:\/\/code.google.com\/p\/chromium\/issues\/detail?id=414135) y como indica la cita #7 logra solucinar este problema y es con seguir estos simples pasos:\n\nTen en cuenta la distro a usar y la version de google chrome que estas usando, en el caso resuelto fue bajo debian Wheezy en un sistema de 64 bits y la version de chrome 37.0.2062.120, en esta ruta estan los instaladores para sistemas como debian o ubuntu\n\n[http:\/\/mirror.pcbeta.com\/google\/chrome\/deb\/pool\/main\/g\/google-chrome-stable\/](http:\/\/mirror.pcbeta.com\/google\/chrome\/deb\/pool\/main\/g\/google-chrome-stable\/) Una vez que hayas descargado el paquete de la misma version de chrome que tienes, abres el paquete o puedes usar un lector de archivos comprimidos, te recomiendo usar el File Roller que funciona muy bien bajo debian :)\n\nAl abrir bajo ese programa u otra herramienta visualizaras una serie de carpetas de las cuales tienes que ir a esta ruta:\n\n\topt\/google\/chrome\/PepperFlash\/\n\n Y encontraras el archivo \tlibpepflashplayer.so\n\nCopias ese archivo en una ruta, en este caso en una carpeta llamada \u201cdownloads\u201d en mi carpeta \u201chome\u201d si ya lo tienes normal lo puedes copiar por el momento ahi porque igual sera algo temporal.\n\n NOTA: En caso esteas usando el google-chrome es recomendable que lo cierres, porque a partir de ahora se tocaran partes sensibles que usa el navegador. Se copia el archivo que acabamos de pasarlo a \u201cdownloads\u201d a esta ruta con esta sentencia estando en mi carpeta \u201chome\u201d, nos ubicamos a esta carpeta en la terminal:\n\n\t~ cd ~\n\t\n\t~ sudo mv downloads\/libpepflashplayer.so \/opt\/google\/chrome\/PepperFlash\n\n Con esta sentencia se a copiado una version mejorada del lector del flashplayer del google chrome en modo superusuario. Y listo abres tu chrome y debera funcionar :)\n","html":"Si tienes problemas con tu navegador Google Chrome, no funciona el flash player y usas sistemas operativos o distros sea ubuntu o debian, este post puede\u00a0ayudarte.\r\n\r\nSeg\u00fan el <a href=\"https:\/\/code.google.com\/p\/chromium\/issues\/detail?id=414135\"> issue<\/a> y como indica la cita #7 logra solucinar este problema y es con seguir estos simples pasos:\r\n\r\n<p>Ten en cuenta la distro a usar y la version de google chrome que estas usando, en el caso resuelto fue bajo debian Wheezy en un sistema de 64 bits y la version de chrome 37.0.2062.120, en esta ruta estan los instaladores para sistemas como debian o ubuntu<\/p>\r\n\r\n<a href=\"http:\/\/mirror.pcbeta.com\/google\/chrome\/deb\/pool\/main\/g\/google-chrome-stable\/\">http:\/\/mirror.pcbeta.com\/google\/chrome\/deb\/pool\/main\/g\/google-chrome-stable\/<\/a>\r\n\r\n<p> Una vez que hayas descargado el paquete de la misma version de chrome que tienes, abres el paquete o puedes usar un lector de archivos comprimidos, te recomiendo usar el File Roller que funciona muy bien bajo debian :)<\/p>\r\n\r\n<p>Al abrir bajo ese programa u otra herramienta visualizaras una serie de carpetas de las cuales tienes que ir a esta ruta:<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\nopt\/google\/chrome\/PepperFlash\/\r\n<\/code>\r\n<\/pre>\r\n\r\nY encontraras el archivo\r\n\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\nlibpepflashplayer.so\r\n<\/code>\r\n<\/pre>\r\n\r\n<p>Copias ese archivo en una ruta, en este caso en una carpeta llamada \u201cdownloads\u201d en mi carpeta \u201chome\u201d si ya lo tienes normal lo puedes copiar por el momento ahi porque igual sera algo temporal.<\/p>\r\n\r\nNOTA: En caso esteas usando el google-chrome es recomendable que lo cierres, porque a partir de ahora se tocaran partes sensibles que usa el navegador.\r\n\r\n<p>Se copia el archivo que acabamos de pasarlo a \u201cdownloads\u201d a esta ruta con esta sentencia estando en mi carpeta \u201chome\u201d, nos ubicamos a esta carpeta en la terminal:<\/p>\r\n\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\n~ cd ~\r\n\r\n~ sudo mv downloads\/libpepflashplayer.so \/opt\/google\/chrome\/PepperFlash\r\n<\/code>\r\n<\/pre>\r\n\r\nCon esta sentencia se a copiado una version mejorada del lector del flashplayer del google chrome en modo superusuario.\r\n\r\nY listo abres tu chrome y debera funcionar :)","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/10\/flash-player-broken-chrome.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":5,"created_at":"Sat, 04 Oct 2014 15:53:07 +0000","created_by":1,"updated_at":"Sat, 04 Oct 2014 16:05:58 +0000","updated_by":1,"published_at":"Sat, 04 Oct 2014 15:53:07 +0000","published_by":1},{"id":1888,"title":"jQuery for dummies","slug":"jquery-dummies","markdown":"\nFirst of all\n------------\n\n**Javascript** es un lenguaje\u00a0programaci\u00f3n din\u00e1mico orientado a objetos, nacido en 1995 y que los navegadores entienden. Dicho esto, **Javascript** nos permite trabajar del lado de cliente y poder darle dinamismo e\u00a0interactividad a tu sitio web, por ejemplo, ocultar o mover alg\u00fan elemento anim\u00e1ndolo y cambiarle sus propiedades **CSS**, o\u00a0cambiar el contenido de alg\u00fan elemento cierto tiempo despu\u00e9s de haberle dado click a alg\u00fan bot\u00f3n o al haber llegado a cierta posici\u00f3n Y en el scroll de la p\u00e1gina, o hacer un llamado as\u00edncrono al servidor para enviar o traer datos sin interferir con la visualizaci\u00f3n ni el comportamiento de tu sitio web; todo este tipo de cosas las puedes hacer con **Javascript** lo cual implica tener un conocimiento intermedio-avanzado de **Javascript.**Entonces... \u00bfqu\u00e9 es jquery?\n---------------------------\n\n**jQuery** no es m\u00e1s que una librer\u00eda basada en **Javascript** que te permitir\u00e1 hacer todas las cosas cool que mencion\u00e9 arriba por medio del DOM -Document Object Model- de manera m\u00e1s r\u00e1pida y facilitarte la vida ;) cargando\u00a0jquery\n---------------\n\n Comenzamos agregando la librer\u00eda a nuestro c\u00f3digo html dentro del head, para esto podemos o descargar la librer\u00eda o usar un CDN -Content Delivery Network- #### M\u00e9todo 1\n\n Ingresamos a la secci\u00f3n de [descargas de jQuery](http:\/\/jquery.com\/download\/), y seleccionamos la versi\u00f3n con la que deseamos trabajar, luego generamos un archivo para poder guardar este c\u00f3digo, en mi caso <span class=\"inline_file\">js\/jquery.js<\/span> y hacemos referencia a este archivo en el atributo src de la etiqueta script. #### M\u00e9todo 2\n\n Solo hacemos referencia a alg\u00fan CDN, en mi caso [Google](https:\/\/developers.google.com\/speed\/libraries\/devguide#jquery) [sourcecode language=\"html\"]    <meta charset=\"utf-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <title>Frontend-Labs<\/title> <!-- M\u00e9todo 1 --> <script src=\"js\/jquery.js\" type=\"text\/javascript\"><\/script> <!-- M\u00e9todo 2 --> <script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.1\/jquery.min.js\"><\/script>     [\/sourcecode] **PD: Como buena pr\u00e1ctica es mejor usar el M\u00e9todo 2 respaldado por el M\u00e9todo 1 con una condicional; es decir, si <span class=\"inline_code\">window.jQuery<\/span> no existe o el CDN esta ca\u00eddo, cargamos la copia local que tenemos de jQuery** [sourcecode language=\"html\"]    <meta charset=\"utf-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <title>Frontend-Labs<\/title> <script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.1\/jquery.min.js\"><\/script> <script>!window.jQuery && document.write('<script src=\"js\/jquery.js\"><\\\/script>')<\/script>     [\/sourcecode] are you ready?\n--------------\n\n Una vez con la librer\u00eda cargada y para poder comenzar a codear, debemos de detectar cuando el DOM este cargado y listo para manipular, tenemos las siguientes opciones: [sourcecode language=\"javascript\"] (function($){ \/\/ Aqu\u00ed comienza la m\u00e1gia })(jQuery) $(function() { \/\/ Aqu\u00ed comienza la m\u00e1gia }); $(document).ready(function() { \/\/ Aqu\u00ed comienza la m\u00e1gia }); $(document).on('ready', function() { \/* Usando el evento .on() detectamos cuando el DOM esta cargado Este m\u00e9todo es el m\u00e1s recomendado y el que utilizaremos para esta gu\u00eda *\/ }); $(window).on('ready', document, function() { \/* Usando el evento .on() detectamos cuando el contexto document del elemento window esta cargado *\/ }); $(window).on('load', function() { \/* Usando el evento .on() detectamos cuando el elemento window a cargado, incluyendo las im\u00e1genes *\/ }); \/* Si no entiendes bien el evento .on() no te preocupes, luego lo veremos a profundidad *\/ [\/sourcecode] Selectores\n----------\n\n jQuery te da una facilidad incre\u00edble para seleccionar elemento, el [API](http:\/\/api.jquery.com\/category\/selectors\/) nos permite usar casi todos los selectores de CSS3 y algunos otros no estandarizados, aqu\u00ed te presentamos los m\u00e1s comunes y otros no tan comunes: [sourcecode language=\"javascript\"] $(document).on('ready', function() { $(\"#myId\") \/\/ selecciona el elemento con el id 'myId' $(\".myClass\") \/\/ selecciona todos los elementos con la clase 'myClass' $(\"p\") \/\/ selecciona todos los elementos de tag html 'p' $(\"p, a\") \/\/ selecciona todos los elementos de tag html 'p' y 'a' $(\"#someId .someClass span\") \/\/ podemos usar selectores css, aqu\u00ed seleccionaremos todos los span dentro de .someClass $(\"#someId .someClass > span\") \/\/ ahora seleccionaremos todos los span que sean hijos directos de .someClass $(\"div[id*=box]\") \/\/ seleccionamos los divs que en el atributo id contengan la palabra box $(\"div:has(p)\") \/\/ seleccionamos los divs que contengan a alg\u00fan elemento de tag html 'p' $(\"p:first\") \/\/ selecciona el primer tag html 'p' de toda la p\u00e1gina $(\"p:last\") \/\/ selecciona el \u00faltimo tag html 'p' de toda la p\u00e1gina $(\"p:even\") \/\/ selecciona los tag html 'p' pares $(\"p:odd\") \/\/ selecciona los tag html 'p' impares $(\":header\") \/\/ selecciona los elementos 'headers' como h1, h2, h3... $(\"form :input\") \/\/ selecciona todos los controladores de alg\u00fan formulario: input, textarea, select, button... \/\/ los siguientes seleccionaran los elementos tag html 'input' que tengan el atributo 'type' igual a alguno de los selectores. ejm: <input type=\"reset\"> $(\":text\") $(\":checkbox\") $(\":radio\") $(\":image\") $(\":submit\") $(\":reset\") $(\":file\") $(\":password\") }); [\/sourcecode] #### be a shooter\n\n jQuery nos permite ser francotiradores al momento de seleccionar usando **m\u00e9todos transversales**#### filtros\n\n Los filtros nos permiten seleccionar luego de una selecci\u00f3n -s\u00ed, suena raro- por ejemplo, <span class=\"inline_code\">$(\"div.myClass\")<\/span> nos seleccionar\u00e1 todos los div con la clase 'myClass' pero nosotros necesitamos el tercer div de toda la selecci\u00f3n; es all\u00ed en donde usamos un filtro. [sourcecode language=\"javascript\"] $(document).on('ready', function() { $(\"ul > li\").eq(4) \/\/ selecciona el quinto elemento 'li', .eq() comienza a contar desde 0 $(\"ul > li\").filter(\".filter_class\") \/\/ selecciona el elemento 'li' con clase 'filter_class' $(\"ul > li\").first() \/\/ selecciona el primer elemento 'li' de toda la selecci\u00f3n $(\"ul > li\").last() \/\/ selecciona el \u00faltimo elemento 'li' de toda la selecci\u00f3n $(\"ul\").has(\"li\") \/\/ selecciona el elemento 'ul' que contenga uno o m\u00e1s elemetos 'li' $(\"ul li\").slice(2, 4) \/\/ selecciona el tercer y cuarto elemento 'li' }); [\/sourcecode] #### por el dom\n\n Ahora, si queremos seleccionar alg\u00fan elemento que guarde relaci\u00f3n con otro, podemos recorrer el DOM por las ramas.\n","html":"<h2>First of all<\/h2>\r\n<strong>Javascript<\/strong> es un lenguaje\u00a0programaci\u00f3n din\u00e1mico orientado a objetos, nacido en 1995 y que los navegadores entienden.\r\n\r\nDicho esto, <strong>Javascript<\/strong> nos permite trabajar del lado de cliente y poder darle dinamismo e\u00a0interactividad a tu sitio web, por ejemplo, ocultar o mover alg\u00fan elemento anim\u00e1ndolo y cambiarle sus propiedades <strong>CSS<\/strong>, o\u00a0cambiar el contenido de alg\u00fan elemento cierto tiempo despu\u00e9s de haberle dado click a alg\u00fan bot\u00f3n o al haber llegado a cierta posici\u00f3n Y en el scroll de la p\u00e1gina, o hacer un llamado as\u00edncrono al servidor para enviar o traer datos sin interferir con la visualizaci\u00f3n ni el comportamiento de tu sitio web; todo este tipo de cosas las puedes hacer con <strong>Javascript<\/strong> lo cual implica tener un conocimiento intermedio-avanzado de <strong>Javascript.<\/strong>\r\n<h2>Entonces... \u00bfqu\u00e9 es jquery?<\/h2>\r\n<strong>jQuery<\/strong> no es m\u00e1s que una librer\u00eda basada en <strong>Javascript<\/strong> que te permitir\u00e1 hacer todas las cosas cool que mencion\u00e9 arriba por medio del DOM -Document Object Model- de manera m\u00e1s r\u00e1pida y facilitarte la vida ;)\r\n<h2>cargando\u00a0jquery<\/h2>\r\nComenzamos agregando la librer\u00eda a nuestro c\u00f3digo html dentro del head, para esto podemos o descargar la librer\u00eda o usar un CDN -Content Delivery Network-\r\n<h4>M\u00e9todo 1<\/h4>\r\nIngresamos a la secci\u00f3n de <a href=\"http:\/\/jquery.com\/download\/\" target=\"_blank\">descargas de jQuery<\/a>, y seleccionamos la versi\u00f3n con la que deseamos trabajar, luego generamos un archivo para poder guardar este c\u00f3digo, en mi caso <span class=\"inline_file\">js\/jquery.js<\/span> y hacemos referencia a este archivo en el atributo src de la etiqueta script.\r\n<h4>M\u00e9todo 2<\/h4>\r\nSolo hacemos referencia a alg\u00fan CDN, en mi caso <a href=\"https:\/\/developers.google.com\/speed\/libraries\/devguide#jquery\" target=\"_blank\">Google<\/a>\r\n\r\n[sourcecode language=\"html\"]\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n\t&lt;meta charset=&quot;utf-8&quot;&gt;\r\n\t&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n\t&lt;title&gt;Frontend-Labs&lt;\/title&gt;\r\n\t&lt;!-- M\u00e9todo 1 --&gt;\r\n\t&lt;script src=&quot;js\/jquery.js&quot; type=&quot;text\/javascript&quot;&gt;&lt;\/script&gt;\r\n\t&lt;!-- M\u00e9todo 2 --&gt;\r\n\t&lt;script src=&quot;\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.1\/jquery.min.js&quot;&gt;&lt;\/script&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n[\/sourcecode]\r\n\r\n<strong>PD: Como buena pr\u00e1ctica es mejor usar el M\u00e9todo 2 respaldado por el M\u00e9todo 1 con una condicional; es decir, si <span class=\"inline_code\">window.jQuery<\/span> no existe o el CDN esta ca\u00eddo, cargamos la copia local que tenemos de jQuery<\/strong>\r\n\r\n[sourcecode language=\"html\"]\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n\t&lt;meta charset=&quot;utf-8&quot;&gt;\r\n\t&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n\t&lt;title&gt;Frontend-Labs&lt;\/title&gt;\r\n\t&lt;script src=&quot;\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.1\/jquery.min.js&quot;&gt;&lt;\/script&gt;\r\n\t&lt;script&gt;!window.jQuery &amp;&amp; document.write('&lt;script src=&quot;js\/jquery.js&quot;&gt;&lt;\\\/script&gt;')&lt;\/script&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n[\/sourcecode]\r\n\r\n<h2>are you ready?<\/h2>\r\nUna vez con la librer\u00eda cargada y para poder comenzar a codear, debemos de detectar cuando el DOM este cargado y listo para manipular, tenemos las siguientes opciones:\r\n\r\n[sourcecode language=\"javascript\"]\r\n(function($){\r\n\t\/\/ Aqu\u00ed comienza la m\u00e1gia\r\n})(jQuery)\r\n\r\n$(function() {\r\n\t\/\/ Aqu\u00ed comienza la m\u00e1gia\r\n});\r\n\r\n$(document).ready(function() {\r\n\t\/\/ Aqu\u00ed comienza la m\u00e1gia\r\n});\r\n\r\n$(document).on('ready', function() {\r\n\t\/*\r\n\t\tUsando el evento .on() detectamos cuando\r\n\t\tel DOM esta cargado\r\n\t\tEste m\u00e9todo es el m\u00e1s recomendado y el que utilizaremos para esta gu\u00eda\r\n\t*\/\r\n});\r\n\r\n$(window).on('ready', document, function() {\r\n\t\/*\r\n\t\tUsando el evento .on() detectamos cuando\r\n\t\tel contexto document del elemento window esta cargado\r\n\t*\/\r\n});\r\n\r\n$(window).on('load', function() {\r\n\t\/*\r\n\t\tUsando el evento .on() detectamos cuando\r\n\t\tel elemento window a cargado, incluyendo las im\u00e1genes\r\n\t*\/\r\n});\r\n\/*\r\n\tSi no entiendes bien el evento .on() no te preocupes,\r\n\tluego lo veremos a profundidad\r\n*\/\r\n[\/sourcecode]\r\n\r\n<h2>Selectores<\/h2>\r\njQuery te da una facilidad incre\u00edble para seleccionar elemento, el <a href=\"http:\/\/api.jquery.com\/category\/selectors\/\">API<\/a> nos permite usar casi todos los selectores de CSS3 y algunos otros no estandarizados, aqu\u00ed te presentamos los m\u00e1s comunes y otros no tan comunes:\r\n\r\n[sourcecode language=\"javascript\"]\r\n$(document).on('ready', function() {\r\n\r\n\t$(&quot;#myId&quot;) \/\/ selecciona el elemento con el id 'myId'\r\n\t$(&quot;.myClass&quot;) \/\/ selecciona todos los elementos con la clase 'myClass'\r\n\t$(&quot;p&quot;) \/\/ selecciona todos los elementos de tag html 'p'\r\n\t$(&quot;p, a&quot;) \/\/ selecciona todos los elementos de tag html 'p' y 'a'\r\n\r\n\t$(&quot;#someId .someClass span&quot;) \/\/ podemos usar selectores css, aqu\u00ed seleccionaremos todos los span dentro de .someClass\r\n\t$(&quot;#someId .someClass &gt; span&quot;) \/\/ ahora seleccionaremos todos los span que sean hijos directos de .someClass\r\n\t$(&quot;div[id*=box]&quot;) \/\/ seleccionamos los divs que en el atributo id contengan la palabra box\r\n\t$(&quot;div:has(p)&quot;) \/\/ seleccionamos los divs que contengan a alg\u00fan elemento de tag html 'p'\r\n\r\n\t$(&quot;p:first&quot;) \/\/ selecciona el primer tag html 'p' de toda la p\u00e1gina\r\n\t$(&quot;p:last&quot;) \/\/ selecciona el \u00faltimo tag html 'p' de toda la p\u00e1gina\r\n\t$(&quot;p:even&quot;) \/\/ selecciona los tag html 'p' pares\r\n\t$(&quot;p:odd&quot;) \/\/ selecciona los tag html 'p' impares\r\n\t$(&quot;:header&quot;) \/\/ selecciona los elementos 'headers' como h1, h2, h3...\r\n\t$(&quot;form :input&quot;) \/\/ selecciona todos los controladores de alg\u00fan formulario: input, textarea, select, button...\r\n\t\/\/ los siguientes seleccionaran los elementos tag html 'input' que tengan el atributo 'type' igual a alguno de los selectores. ejm: &lt;input type=&quot;reset&quot;&gt;\r\n\t$(&quot;:text&quot;)\r\n\t$(&quot;:checkbox&quot;)\r\n\t$(&quot;:radio&quot;)\r\n\t$(&quot;:image&quot;)\r\n\t$(&quot;:submit&quot;)\r\n\t$(&quot;:reset&quot;)\r\n\t$(&quot;:file&quot;)\r\n\t$(&quot;:password&quot;)\r\n\r\n});\r\n[\/sourcecode]\r\n\r\n<h4>be a shooter<\/h4>\r\njQuery nos permite ser francotiradores al momento de seleccionar usando <strong>m\u00e9todos transversales<\/strong>\r\n<h4>filtros<\/h4>\r\nLos filtros nos permiten seleccionar luego de una selecci\u00f3n -s\u00ed, suena raro- por ejemplo, <span class=\"inline_code\">$(\"div.myClass\")<\/span> nos seleccionar\u00e1 todos los div con la clase 'myClass' pero nosotros necesitamos el tercer div de toda la selecci\u00f3n; es all\u00ed en donde usamos un filtro.\r\n\r\n[sourcecode language=\"javascript\"]\r\n$(document).on('ready', function() {\r\n\r\n\t$(&quot;ul &gt; li&quot;).eq(4) \/\/ selecciona el quinto elemento 'li', .eq() comienza a contar desde 0 \r\n\t$(&quot;ul &gt; li&quot;).filter(&quot;.filter_class&quot;) \/\/ selecciona el elemento 'li' con clase 'filter_class'\r\n\t$(&quot;ul &gt; li&quot;).first() \/\/ selecciona el primer elemento 'li' de toda la selecci\u00f3n\r\n\t$(&quot;ul &gt; li&quot;).last() \/\/ selecciona el \u00faltimo elemento 'li' de toda la selecci\u00f3n\r\n\t$(&quot;ul&quot;).has(&quot;li&quot;) \/\/ selecciona el elemento 'ul' que contenga uno o m\u00e1s elemetos 'li'\r\n\t$(&quot;ul li&quot;).slice(2, 4) \/\/ selecciona el tercer y cuarto elemento 'li'\r\n\r\n});\r\n[\/sourcecode]\r\n\r\n<h4>por el dom<\/h4>\r\nAhora, si queremos seleccionar alg\u00fan elemento que guarde relaci\u00f3n con otro, podemos recorrer el DOM por las ramas.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/10\/jquery.jpg","featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":14,"created_at":"Mon, 13 Oct 2014 18:41:30 +0000","created_by":1,"updated_at":"Mon, 13 Oct 2014 18:41:30 +0000","updated_by":1,"published_at":"","published_by":1},{"id":2005,"title":"Git tag: \u00bfC\u00f3mo quitar o eliminar un tag desde un repositorio Git?","slug":"git-tag-como-quitar-eliminar-tag-git","markdown":"\n\u00bfQu\u00e9 es un tag en Git?\n----------------------\n\n Git nos brinda una sencilla forma de poner una marca \u00f3 etiqueta permanente en un commit espec\u00edfico, lo usaremos generalmente para especificar un hito o suceso relevante en nuestro proyecto. Si tenemos nuestro proyecto tageado, podremos volver f\u00e1cilmente a ese momento en el proyecto, o comparar ese tag con alg\u00fan momento en el proyecto. Eliminar un tag\n---------------\n\n En esta ocasi\u00f3n queremos eliminar un tag local(llamado v2.0.3), el comando para hacerlo ser\u00eda el siguiente: \tgit tag -d v2.0.3\n\nEliminar un tag remoto\n----------------------\n\n Si por otro lado quisi\u00e9ramos eliminar un tag remoto(lo cual no es muy usual) pero tal vez lo necesitemos hacer, estos ser\u00edan los comandos: \tgit tag -d v2.0.3\n\tgit push origin :refs\/tags\/v2.0.3\n\nEliminar un tag remoto, pero de otra manera\n-------------------------------------------\n\n\tgit tag -d v2.0.3\n\tgit push origin :v2.0.3\n\nAgregar un nuevo tag\n--------------------\n\n\tgit tag -a v1.0.0 -m \"Version 1.0 Stable\"\n\nSubir el ultimo tag al repositorio\n----------------------------------\n\n\tgit push --tags\n\n\u00bfC\u00f3mo se ve un git tag en gitk?\n-------------------------------\n\n![git-tag](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/git-tag.png)- - - - - -\n\n\u00bfY por qu\u00e9 hice este post?\n--------------------------\n\n> porque estoy usando una herramienta de automatizaci\u00f3n llamada [gulp-tag-version](https:\/\/www.npmjs.org\/package\/gulp-tag-version \"gulp-tag-version\") en conjunto con [gulp-bump](https:\/\/www.npmjs.org\/package\/gulp-bump \"gulp-bump\") y por incidentes con mi package.json surgi\u00f3 la necesidad de eliminar tags locales generados err\u00f3neamente, estoy seguro que a m\u00e1s de uno le servir\u00e1 esta peque\u00f1a pero importante informaci\u00f3n.\n\n\n","html":"<h2>\u00bfQu\u00e9 es un tag en Git?<\/h2>\r\nGit nos brinda una sencilla forma de poner una marca \u00f3 etiqueta permanente en un commit espec\u00edfico, lo usaremos generalmente para especificar un hito o suceso relevante en nuestro proyecto. Si tenemos nuestro proyecto tageado, podremos volver f\u00e1cilmente a ese momento en el proyecto, o comparar ese tag con alg\u00fan momento en el proyecto.\r\n<h2>Eliminar un tag<\/h2>\r\nEn esta ocasi\u00f3n queremos eliminar un tag local(llamado v2.0.3), el comando para hacerlo ser\u00eda el siguiente:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\ngit tag -d v2.0.3\r\n<\/code>\r\n<\/pre>\r\n<h2>Eliminar un tag remoto<\/h2>\r\nSi por otro lado quisi\u00e9ramos eliminar un tag remoto(lo cual no es muy usual) pero tal vez lo necesitemos hacer, estos ser\u00edan los comandos:\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\ngit tag -d v2.0.3\r\ngit push origin :refs\/tags\/v2.0.3\r\n<\/code>\r\n<\/pre>\r\n<h2>Eliminar un tag remoto, pero de otra manera<\/h2>\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\ngit tag -d v2.0.3\r\ngit push origin :v2.0.3\r\n<\/code>\r\n<\/pre>\r\n<h2>Agregar un nuevo tag<\/h2>\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\ngit tag -a v1.0.0 -m \"Version 1.0 Stable\"\r\n<\/code>\r\n<\/pre>\r\n<h2>Subir el ultimo tag al repositorio<\/h2>\r\n<pre class=\"prettyprint lang-bsh\"><code>\r\ngit push --tags\r\n<\/code>\r\n<\/pre>\r\n<h2>\u00bfC\u00f3mo se ve un git tag en gitk?<\/h2>\r\n\r\n<img class=\"aligncenter size-full wp-image-2007\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/git-tag.png\" alt=\"git-tag\" width=\"509\" height=\"317\" \/>\r\n\r\n<hr \/>\r\n\r\n<h2>\u00bfY por qu\u00e9 hice este post?<\/h2>\r\n<blockquote>porque estoy usando una herramienta de automatizaci\u00f3n llamada <a title=\"gulp-tag-version\" href=\"https:\/\/www.npmjs.org\/package\/gulp-tag-version\" target=\"_blank\">gulp-tag-version<\/a> en conjunto con <a title=\"gulp-bump\" href=\"https:\/\/www.npmjs.org\/package\/gulp-bump\" target=\"_blank\">gulp-bump<\/a> y por incidentes con mi package.json surgi\u00f3 la necesidad de eliminar tags locales generados err\u00f3neamente, estoy seguro que a m\u00e1s de uno le servir\u00e1 esta peque\u00f1a pero importante informaci\u00f3n.<\/blockquote>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":4,"created_at":"Mon, 03 Nov 2014 16:58:47 +0000","created_by":1,"updated_at":"Thu, 06 Nov 2014 17:26:52 +0000","updated_by":1,"published_at":"Mon, 03 Nov 2014 16:58:47 +0000","published_by":1},{"id":1666,"title":"Conceptos B\u00e1sicos de AngularJS","slug":"conceptos-basico-de-angularjs","markdown":"\nAngularjs es un framework de la familia MVC, pero quiz\u00e1s su sencilleces y el funcionamiento superpondremos que tienen sus directivas es lo que lo hace muy interesante de usar **Data Biding** Es la forma en como se mantiene sincronizada la informaci\u00f3n, el detalle es que en angular cualquier cambio que se realice en el model se vera autom\u00e1ticamente en la vista **Modulos** Son funcionalidades de tu aplicaci\u00f3n, podemos usar m\u00f3dulos echos por otras personas a manera de plugins tambi\u00e9n por ejemplo **Scope** Es hasta que parte de nuestro html se aplicar\u00e1n ciertas funcionalidades, tambi\u00e9n conocido como \"Alcance\" **Directiva** Son un estilo de etiquetas que le agregan nuevas funcionalidades al html, las cuales son soportadas por angularjs y suelen comenzar con ng Las directivas con las que se suele iniciar en el mundo de angularjs son : - **ng-app** : que es donde se coloca el nombre de la aplicaci\u00f3n y por ende se realiza la definici\u00f3n. - **ng-model** : es una directiva de bindeo la cu\u00e1l se usa para manipular la informaci\u00f3n que pasa por los input, select, textarea, radios, checkbox. - **ng-controler** : se tomar\u00eda como un objeto javascript, en la practica veremos como se apoya del scope para definir hasta donde se aplica la funcionalidad. - **ng-filter** : se usa para la transformaci\u00f3n de informaci\u00f3n, por ejemplo convertir datos en mayusculas, min\u00fasculas, dar formato de moneda y ordenar la informaci\u00f3n por un orden en especial. - **ng-disabled** : sirve para desabilitar elementos de html. - **ng-hide** : sirve para ocultar elementos de html. - **ng-show** : sirve para mostrar elementos de html. - **ng-repeat** : es un tipo de foreach. - **ng-click** : ejecuta funciones cuando se hace click en el elemento que tenga la directiva. - **ng-include** : sirve para hacer incluir archivos externos, como en los lenguajes para servidor. - **ng-bind** : es una directiva de bindeo que se utiliza para mostrar informaci\u00f3n. - **ng-init** : para inicializar un valor por default. Iremos conociendo m\u00e1s en el camino, porque son [bastantes](https:\/\/docs.angularjs.org\/api \"bastantes\"). **Expression** Se representan con doble corchete, por ejemplo : {{ datos }}, es el formato de plantillas de angular y es donde se pintan los datos extra\u00eddos del model. Ejemplo pr\u00e1ctico: Realizaremos un buscador de libros usando el [api de itebooks](http:\/\/it-ebooks-api.info \"itebooks api\").\n\n\n","html":"Angularjs es un framework de la familia MVC, pero quiz\u00e1s su sencilleces y el funcionamiento superpondremos que tienen sus directivas es lo que lo hace muy interesante de usar\n<strong>Data Biding<\/strong>\nEs la forma en como se mantiene sincronizada la informaci\u00f3n, el detalle es que en angular cualquier cambio que se realice en el model se vera autom\u00e1ticamente en la vista\n\n<strong>Modulos<\/strong>\nSon funcionalidades de tu aplicaci\u00f3n, podemos usar m\u00f3dulos echos por otras personas a manera de plugins tambi\u00e9n por ejemplo \n\n<strong>Scope<\/strong>\nEs hasta que parte de nuestro html se aplicar\u00e1n ciertas funcionalidades, tambi\u00e9n conocido como \"Alcance\"\n\n<strong>Directiva<\/strong>\nSon un estilo de etiquetas que le agregan nuevas funcionalidades al html, las cuales son soportadas por angularjs y suelen comenzar con ng\nLas directivas con las que se suele iniciar en el mundo de angularjs son :\n- <strong>ng-app<\/strong> : que es donde se coloca el nombre de la aplicaci\u00f3n y por ende se realiza la definici\u00f3n.\n- <strong>ng-model<\/strong> : es una directiva de bindeo la cu\u00e1l se usa para manipular la informaci\u00f3n que pasa por los input, select, textarea, radios, checkbox.\n- <strong>ng-controler<\/strong> : se tomar\u00eda como un objeto javascript, en la practica veremos como se apoya del scope para definir hasta donde se aplica la funcionalidad.\n- <strong>ng-filter<\/strong> : se usa para la transformaci\u00f3n de informaci\u00f3n, por ejemplo convertir datos en mayusculas, min\u00fasculas, dar formato de moneda y ordenar la informaci\u00f3n por un orden en especial.\n- <strong>ng-disabled<\/strong> : sirve para desabilitar elementos de html.\n- <strong>ng-hide<\/strong> : sirve para ocultar elementos de html.\n- <strong>ng-show<\/strong> : sirve para mostrar elementos de html.\n- <strong>ng-repeat<\/strong> : es un tipo de foreach.\n- <strong>ng-click<\/strong> : ejecuta funciones cuando se hace click en el elemento que tenga la directiva.\n- <strong>ng-include<\/strong> : sirve para hacer incluir archivos externos, como en los lenguajes para servidor.\n- <strong>ng-bind<\/strong> : es una directiva de bindeo que se utiliza para mostrar informaci\u00f3n.\n- <strong>ng-init<\/strong> : para inicializar un valor por default.\nIremos conociendo m\u00e1s en el camino, porque son <a href=\"https:\/\/docs.angularjs.org\/api\" title=\"bastantes\" target=\"_blank\">bastantes<\/a>.\n\n<strong>Expression<\/strong>\nSe representan con doble corchete, por ejemplo : {{ datos }}, es el formato de plantillas de angular y es donde se pintan los datos extra\u00eddos del model.\n\nEjemplo pr\u00e1ctico:\nRealizaremos un buscador de libros usando el <a title=\"itebooks api\" href=\"http:\/\/it-ebooks-api.info\" target=\"_blank\">api de itebooks<\/a>.\n","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":3,"created_at":"Mon, 03 Nov 2014 18:09:20 +0000","created_by":1,"updated_at":"Mon, 03 Nov 2014 18:09:20 +0000","updated_by":1,"published_at":"","published_by":1},{"id":1956,"title":"\u00bfQu\u00e9 es el Open Graph Protocol?","slug":"open-graph-protocol","markdown":"\nopen Graph Protocol\n-------------------\n\n El **Open Graph Protocol\u00a0**es un m\u00e9todo simple que nos permite incluir meta informaci\u00f3n en nuestra p\u00e1gina web y as\u00ed convertirla en un objeto **Social Graph**, una vez siendo un objeto puede interactuar con otros objetos **Social Graph** como el share de Google+ o el like de Facebook de modo correcto. Una manera sencilla de entenderlo es pensar que cuando uno se registra en Facebook nos estamos convirtiendo en un objeto **Social Graph\u00a0**( s\u00ed, somos objetos :( ) pasamos a formar parte de un mapa global de conexiones sociales, en este mapa ( o universo paralelo )\u00a0no interactuas con saludos o regalos, sino con likes o share; entonces, activando el **Open Graph Protocol** en nuestra web la convertimos en un objeto **Social Graph** manipulable. Metadata b\u00e1sica\n---------------\n\n Para activar el Open Graph en nuestra web debemos de agregar los metadatos b\u00e1sicos dentro del **** de nuestra web, las 4 propiedades requeridas para cualquier p\u00e1gina son: **og:title** : El t\u00edtulo del objeto como se desea que aparezca; ejemplo, \"FrontEnd Labs OG\". No hay limite de caracteres, pero por buena practica se recomienda poner entre 60 y 90 caracteres; en el caso de Facebook si pones m\u00e1s de 100 caracteres este solo tomar\u00e1 88. **og:type** : Especificamos el tipo del objeto, ejemplo, \"website\". - aqu\u00ed una lista con los [tipos](http:\/\/ogp.me\/#types \"og:type\") - **og:image** : Una URL que apunte a la imagen que representar\u00e1 a tu objeto. **og:url** : \u00a0La URL can\u00f3nica de tu objeto que ser\u00e1 el ID permanente del objeto; ejemplo, \"http:\/\/frontend-labs.com\/\" .  <html prefix=\"og: http:\/\/ogp.me\/ns#\">  <title>FrontEnd Labs OG<\/title> <meta property=\"og:title\" content=\"FrontEnd Labs OG\" \/> <meta property=\"og:type\" content=\"website\" \/> <meta property=\"og:image\" content=\"http:\/\/frontend-labs.com\/frontend-labs-facebook.png\" \/> <meta property=\"og:url\" content=\"http:\/\/frontend-labs.com\/\" \/>    \n\nMetadata Opcional\n-----------------\n\n**og:description** : Algunas l\u00edneas descriptivas para el objeto. Por buena practica no debemos de usar m\u00e1s de 200 caracteres. **og:locale** : Declaramos el lugar de procedencia del objeto en el formato\u00a0lenguaje_TERRITORIO; ejemplo, \"es_PE\". **og:site_name** : Si la web o la app es grande, por decirlo as\u00ed, esta propiedad ser\u00e1 la que identifique a todo el site; ejemplo, \"frontend-labs\" ya que la web de referencia es \"http:\/\/frontend-labs.com\/\". **og:audio** : La URL del audio que acompa\u00f1a este objeto. **og:video** : La URL del video que complementa el objeto creado. <meta property=\"og:description\" content=\"Open Graph Protocol, mapa global de conexiones sociales\" \/> <meta property=\"og:locale\" content=\"es_PE\" \/> <meta property=\"og:site_name\" content=\"frontend-labs\" \/> <meta property=\"og:audio\" content=\"http:\/\/example.com\/og\/theme.mp3\" \/> <meta property=\"og:video\" content=\"http:\/\/example.com\/og\/trailer.swf\" \/>\n\nextras\n------\n\n Tambi\u00e9n pueden incluir m\u00e1s de una imagen o m\u00e1s de un lenguaje usando [arrays](http:\/\/ogp.me\/#array \"arrays\")<meta property=\"og:image\" content=\"http:\/\/frontend-labs.com\/frontend-labs-facebook_01.png\" \/> <meta property=\"og:image\" content=\"http:\/\/frontend-labs.com\/frontend-labs-facebook_02.png\" \/> <meta property=\"og:image\" content=\"http:\/\/frontend-labs.com\/frontend-labs-facebook_03.png\" \/> <meta property=\"og:locale:alternate\" content=\"fr_FR\" \/> <meta property=\"og:locale:alternate\" content=\"en_EN\" \/>\n\n Si necesitas m\u00e1s detalles sobre \u00e9sto solo debes de ingresar a la [documentaci\u00f3n oficial](http:\/\/ogp.me\/ \"http:\/\/ogp.me\/\"). Debugger\n--------\n\n Para saber si lo estamos haciendo bien o mal, o donde podemos hacer mejoras, Facebook pone a nuestra disposici\u00f3n una herramienta de [Debugger](https:\/\/developers.facebook.com\/tools\/debug\/ \"Facebook's debugger \") Lo \u00fanico que debemos de hacer es ingresar la URL a la que deseamos hacerle el debug ![Open Graph Protocol - Facebook's debugger](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/debugger_011.png) Luego de darle en \"Debug\" obtendremos un informe ![Open Graph Protocol - informe del debugger](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/debugger_02.png) Algo\u00a0interesante de este ejemplo es el \"Time Scraped\" el cual refleja la \u00faltima vez que se realiz\u00f3 un scrapeo del **Open Graph**, es decir, si hemos cambiado alguna propiedad del objeto **Social Graph**\u00a0(og:title, og:image, og:url) despu\u00e9s del \u00faltimo scrape, este cambio no se reflejar\u00e1 al usar el objeto. Por ejemplo, al compartir en Facebook puede que nos muestre una imagen que no es la actual o un t\u00edtulo antiguo, para solucionar esto debemos de actualizar las propiedades del objeto o \"limpiar el cach\u00e9\", simplemente d\u00e1ndole al bot\u00f3n **Fetch new scrape information. **![Open Graph Protocol - nuevo scrape de la url](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/debugger_04.png) Con \u00e9sto las propiedades del objeto deben de actualizarse, adem\u00e1s de mostrarnos mejoras que debemos de hacerle a las propiedades que le pasamos al objeto. Tambi\u00e9n nos mostrar\u00e1 las propiedades y una vista previa de c\u00f3mo se ver\u00e1 el objeto al usarlo.![Open Graph Protocol - vista previa de las propiedades del objeto](http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/debugger_05.png) Suele pasar que el error m\u00e1s com\u00fan es no especificar una imagen con dimensiones correctas -\u00a0**\"og:image could not be downloaded or is too small\"**\u00a0- por buenas pr\u00e1cticas, Facebook requiere\u00a0una imagen de 1200 x 630px para una buena presentaci\u00f3n en dispositivos de alta resoluci\u00f3n, pero con 600 x 315px ser\u00eda suficiente. PD: Para fines de este post hemos usado el debug de Facebook. Si es necesario pueden usar el\u00a0[debug de Google](http:\/\/www.google.com\/webmasters\/tools\/richsnippets \"http:\/\/www.google.com\/webmasters\/tools\/richsnippets\"), ya que Google+ tambi\u00e9n usa el **Open Graph Protocol** para sus relaciones.\n","html":"<h2>open Graph Protocol<\/h2>\r\nEl <strong>Open Graph Protocol\u00a0<\/strong>es un m\u00e9todo simple que nos permite incluir meta informaci\u00f3n en nuestra p\u00e1gina web y as\u00ed convertirla en un objeto <strong>Social Graph<\/strong>, una vez siendo un objeto puede interactuar con otros objetos <strong>Social Graph<\/strong> como el share de Google+ o el like de Facebook de modo correcto.\r\n\r\nUna manera sencilla de entenderlo es pensar que cuando uno se registra en Facebook nos estamos convirtiendo en un objeto <strong>Social Graph\u00a0<\/strong>( s\u00ed, somos objetos :( ) pasamos a formar parte de un mapa global de conexiones sociales, en este mapa ( o universo paralelo )\u00a0no interactuas con saludos o regalos, sino con likes o share; entonces, activando el <strong>Open Graph Protocol<\/strong> en nuestra web la convertimos en un objeto <strong>Social Graph<\/strong> manipulable.\r\n<h2>Metadata b\u00e1sica<\/h2>\r\nPara activar el Open Graph en nuestra web debemos de agregar los metadatos b\u00e1sicos dentro del <strong>&lt;head&gt;&lt;\/head&gt;<\/strong> de nuestra web, las 4 propiedades requeridas para cualquier p\u00e1gina son:\r\n\r\n<strong>og:title<\/strong> : El t\u00edtulo del objeto como se desea que aparezca; ejemplo, \"FrontEnd Labs OG\". No hay limite de caracteres, pero por buena practica se recomienda poner entre 60 y 90 caracteres; en el caso de Facebook si pones m\u00e1s de 100 caracteres este solo tomar\u00e1 88.\r\n<strong>og:type<\/strong> : Especificamos el tipo del objeto, ejemplo, \"website\". - aqu\u00ed una lista con los <a title=\"og:type\" href=\"http:\/\/ogp.me\/#types\" target=\"_blank\">tipos<\/a> -\r\n<strong>og:image<\/strong> : Una URL que apunte a la imagen que representar\u00e1 a tu objeto.\r\n<strong>og:url<\/strong> : \u00a0La URL can\u00f3nica de tu objeto que ser\u00e1 el ID permanente del objeto; ejemplo, \"http:\/\/frontend-labs.com\/\" .\r\n<pre class=\"prettyprint lang-html\">&lt;!DOCTYPE html&gt;\r\n&lt;html prefix=\"og: http:\/\/ogp.me\/ns#\"&gt;\r\n&lt;head&gt;\r\n\t&lt;title&gt;FrontEnd Labs OG&lt;\/title&gt;\r\n\t&lt;meta property=\"og:title\" content=\"FrontEnd Labs OG\" \/&gt;\r\n\t&lt;meta property=\"og:type\" content=\"website\" \/&gt;\r\n\t&lt;meta property=\"og:image\" content=\"http:\/\/frontend-labs.com\/frontend-labs-facebook.png\" \/&gt;\r\n\t&lt;meta property=\"og:url\" content=\"http:\/\/frontend-labs.com\/\" \/&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\r\n<h2>Metadata Opcional<\/h2>\r\n<strong>og:description<\/strong> : Algunas l\u00edneas descriptivas para el objeto. Por buena practica no debemos de usar m\u00e1s de 200 caracteres.\r\n<strong>og:locale<\/strong> : Declaramos el lugar de procedencia del objeto en el formato\u00a0lenguaje_TERRITORIO; ejemplo, \"es_PE\".\r\n<strong>og:site_name<\/strong> : Si la web o la app es grande, por decirlo as\u00ed, esta propiedad ser\u00e1 la que identifique a todo el site; ejemplo, \"frontend-labs\" ya que la web de referencia es \"http:\/\/frontend-labs.com\/\".\r\n<strong>og:audio<\/strong> : La URL del audio que acompa\u00f1a este objeto.\r\n<strong>og:video<\/strong> : La URL del video que complementa el objeto creado.\r\n<pre class=\"prettyprint lang-html\">&lt;meta property=\"og:description\" content=\"Open Graph Protocol, mapa global de conexiones sociales\" \/&gt;\r\n&lt;meta property=\"og:locale\" content=\"es_PE\" \/&gt;\r\n&lt;meta property=\"og:site_name\" content=\"frontend-labs\" \/&gt;\r\n&lt;meta property=\"og:audio\" content=\"http:\/\/example.com\/og\/theme.mp3\" \/&gt;\r\n&lt;meta property=\"og:video\" content=\"http:\/\/example.com\/og\/trailer.swf\" \/&gt;\r\n<\/pre>\r\n<h2>extras<\/h2>\r\nTambi\u00e9n pueden incluir m\u00e1s de una imagen o m\u00e1s de un lenguaje usando <a title=\"arrays\" href=\"http:\/\/ogp.me\/#array\" target=\"_blank\">arrays<\/a>\r\n<pre class=\"prettyprint lang-html\">&lt;meta property=\"og:image\" content=\"http:\/\/frontend-labs.com\/frontend-labs-facebook_01.png\" \/&gt;\r\n&lt;meta property=\"og:image\" content=\"http:\/\/frontend-labs.com\/frontend-labs-facebook_02.png\" \/&gt;\r\n&lt;meta property=\"og:image\" content=\"http:\/\/frontend-labs.com\/frontend-labs-facebook_03.png\" \/&gt;\r\n\r\n&lt;meta property=\"og:locale:alternate\" content=\"fr_FR\" \/&gt;\r\n&lt;meta property=\"og:locale:alternate\" content=\"en_EN\" \/&gt;\r\n<\/pre>\r\nSi necesitas m\u00e1s detalles sobre \u00e9sto solo debes de ingresar a la <a title=\"http:\/\/ogp.me\/\" href=\"http:\/\/ogp.me\/\" target=\"_blank\">documentaci\u00f3n oficial<\/a>.\r\n<h2>Debugger<\/h2>\r\nPara saber si lo estamos haciendo bien o mal, o donde podemos hacer mejoras, Facebook pone a nuestra disposici\u00f3n una herramienta de <a title=\"Facebook's debugger \" href=\"https:\/\/developers.facebook.com\/tools\/debug\/\" target=\"_blank\">Debugger<\/a>\r\n\r\nLo \u00fanico que debemos de hacer es ingresar la URL a la que deseamos hacerle el debug\r\n<img style=\"margin-top: 10px;\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/debugger_011.png\" alt=\"Open Graph Protocol - Facebook's debugger\" \/>\r\n\r\nLuego de darle en \"Debug\" obtendremos un informe\r\n<img style=\"margin-top: 10px;\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/debugger_02.png\" alt=\"Open Graph Protocol - informe del debugger\" \/>\r\n\r\nAlgo\u00a0interesante de este ejemplo es el \"Time Scraped\" el cual refleja la \u00faltima vez que se realiz\u00f3 un scrapeo del <strong>Open Graph<\/strong>, es decir, si hemos cambiado alguna propiedad del objeto <strong>Social Graph<\/strong>\u00a0(og:title, og:image, og:url) despu\u00e9s del \u00faltimo scrape, este cambio no se reflejar\u00e1 al usar el objeto. Por ejemplo, al compartir en Facebook puede que nos muestre una imagen que no es la actual o un t\u00edtulo antiguo, para solucionar esto debemos de actualizar las propiedades del objeto o \"limpiar el cach\u00e9\", simplemente d\u00e1ndole al bot\u00f3n <strong>Fetch new scrape information.\r\n<\/strong><img style=\"margin-top: 10px;\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/debugger_04.png\" alt=\"Open Graph Protocol - nuevo scrape de la url\" \/>\r\n\r\nCon \u00e9sto las propiedades del objeto deben de actualizarse, adem\u00e1s de mostrarnos mejoras que debemos de hacerle a las propiedades que le pasamos al objeto. Tambi\u00e9n nos mostrar\u00e1 las propiedades y una vista previa de c\u00f3mo se ver\u00e1 el objeto al usarlo.<img style=\"margin-top: 10px;\" src=\"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/debugger_05.png\" alt=\"Open Graph Protocol - vista previa de las propiedades del objeto\" \/>\r\n\r\nSuele pasar que el error m\u00e1s com\u00fan es no especificar una imagen con dimensiones correctas -\u00a0<strong>\"og:image could not be downloaded or is too small\"<\/strong>\u00a0- por buenas pr\u00e1cticas, Facebook requiere\u00a0una imagen de 1200 x 630px para una buena presentaci\u00f3n en dispositivos de alta resoluci\u00f3n, pero con 600 x 315px ser\u00eda suficiente.\r\n\r\nPD: Para fines de este post hemos usado el debug de Facebook. Si es necesario pueden usar el\u00a0<a title=\"http:\/\/www.google.com\/webmasters\/tools\/richsnippets\" href=\"http:\/\/www.google.com\/webmasters\/tools\/richsnippets\" target=\"_blank\">debug de Google<\/a>, ya que Google+ tambi\u00e9n usa el <strong>Open Graph Protocol<\/strong> para sus relaciones.","image":"http:\/\/frontend-labs.com\/wp-content\/uploads\/2014\/11\/banner.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":14,"created_at":"Thu, 06 Nov 2014 12:57:55 +0000","created_by":1,"updated_at":"Thu, 06 Nov 2014 12:59:30 +0000","updated_by":1,"published_at":"Thu, 06 Nov 2014 12:57:55 +0000","published_by":1}],"tags":[{"id":76,"name":"animaci\u00f3n","slug":"animacion","description":""},{"id":35,"name":"Automatizaci\u00f3n","slug":"automatizacion","description":""},{"id":54,"name":"bower","slug":"bower","description":""},{"id":10,"name":"Canvas","slug":"canvas","description":"El elemento canvas (\u00f3 lona traducido al espa\u00f1ol) es parte de HTML5 y permite la renderizaci\u00f3n scriptable din\u00e1mica de formas 2D e im\u00e1genes de mapa de bits. Se trata de un modelo de procedimiento de nivel bajo, el que actualiza un mapa de bits y no tiene una gr\u00e1fica de escena integrada."},{"id":56,"name":"C\u00f3digo","slug":"codigo-2","description":""},{"id":18,"name":"Coffescript","slug":"coffescript","description":"CoffeeScript es un lenguaje de programaci\u00f3n que se compila a JavaScript. El lenguaje a\u00f1ade az\u00facar sint\u00e1ctico inspirado en Ruby, Python y Haskell2 para mejorar la brevedad y la legibilidad de JavaScript, y a\u00f1ade caracter\u00edsticas m\u00e1s sofisticadas, como la comprensi\u00f3n de listas y la coincidencia de patrones. CoffeeScript compila previsiblemente a JavaScript y los programas se pueden escribir por lo general en 1\/3 menos de l\u00edneas de c\u00f3digo sin ning\u00fan efecto en el rendimiento ni en el tiempo de ejecuci\u00f3n. A partir del 16 de marzo de 2011, CoffeeScript ha estado en la lista de los proyectos m\u00e1s visitados en GitHub, y al 27 de julio 2012 es el und\u00e9cimo lenguaje m\u00e1s popular en GitHub.\r\n\r\nEl lenguaje tiene un seguimiento relativamente grande por parte de la comunidad Ruby. El soporte a CoffeeScript est\u00e1 incluido en Ruby on Rails desde su versi\u00f3n 3.1.6 Adem\u00e1s, Brendan Eich ha hecho referencia a CoffeeScript como una influencia en sus pensamientos sobre el futuro de JavaScript."},{"id":61,"name":"Control de versiones","slug":"control-de-versiones","description":""},{"id":8,"name":"CSS3","slug":"css3","description":"CSS3 es el \u00faltimo est\u00e1ndar de CSS.\r\nCSS3 es compatible hacia atr\u00e1s por completo con las versiones anteriores de CSS."},{"id":40,"name":"Debian","slug":"debian","description":"El Proyecto Debian es una asociaci\u00f3n de personas que han hecho causa com\u00fan para crear un sistema operativo libre. Este sistema operativo que hemos creado se llama Debian.\r\n\r\nLos sistemas Debian actualmente usan el n\u00facleo de Linux o el kernel de FreeBSD. Linux es una pieza de software iniciado por Linus Torvalds y soportada por miles de programadores de todo el mundo. FreeBSD es un sistema operativo que incluye un n\u00facleo y otro software."},{"id":48,"name":"documentador","slug":"documentador","description":""},{"id":73,"name":"ECMAScript","slug":"ecmascript","description":""},{"id":58,"name":"Editores de texto","slug":"editores-de-texto","description":""},{"id":41,"name":"Entornos de desarrollo","slug":"entornos-de-desarrollo","description":""},{"id":72,"name":"Est\u00e1ndar","slug":"estandar","description":""},{"id":53,"name":"Expresiones regulares","slug":"expresiones-regulares-2","description":""},{"id":87,"name":"Facebook's Debugger","slug":"facebooks-debugger","description":""},{"id":75,"name":"Firefox OS","slug":"firefox-os","description":""},{"id":84,"name":"flash-player","slug":"flash-player","description":""},{"id":62,"name":"Front-End","slug":"front-end","description":""},{"id":43,"name":"Git","slug":"git","description":""},{"id":80,"name":"Github","slug":"github","description":""},{"id":83,"name":"google-chrome","slug":"google-chrome","description":""},{"id":52,"name":"Grunt","slug":"gruntjs","description":"GruntJS es un corredor de tareas desarrollado en Javascript con Node.js"},{"id":65,"name":"Gulp","slug":"gulp","description":""},{"id":81,"name":"how to","slug":"how-to","description":""},{"id":7,"name":"HTML5","slug":"html5","description":"HTML5 (HyperText Markup Language, versi\u00f3n 5) es la quinta revisi\u00f3n importante del lenguaje b\u00e1sico de la World Wide Web, HTML. HTML5 especifica dos variantes de sintaxis para HTML: un \u00abcl\u00e1sico\u00bb HTML (text\/html), la variante conocida como HTML5 y una variante XHTML conocida como sintaxis XHTML5 que deber\u00e1 ser servida como XML.1 2 Esta es la primera vez que HTML y XHTML se han desarrollado en paralelo.\r\n\r\nTodav\u00eda se encuentra en modo experimental, lo cual indica la misma W3C, aunque ya es usado por m\u00faltiples desarrolladores web por sus avances, mejoras y ventajas.\r\n\r\nAl no ser reconocido en viejas versiones de navegadores por sus nuevas etiquetas, se recomienda al usuario com\u00fan actualizar a la versi\u00f3n m\u00e1s nueva, para poder disfrutar de todo el potencial que provee HTML5."},{"id":59,"name":"Iconos","slug":"iconos","description":""},{"id":17,"name":"Jade","slug":"jade","description":"Jade es un motor de plantillas de alto rendimiento muy influenciado por HAML, ha sido implementado con Javascript principalmente para trabajar con NodeJS.\r\n\r\nAdicionalmente es un pre-procesador de c\u00f3digo HTML."},{"id":4,"name":"Javascript","slug":"javascript","description":"\r\nJavaScript es un lenguaje de programaci\u00f3n interpretado, dialecto del est\u00e1ndar ECMAScript. Se define como orientado a objetos, basado en prototipos, imperativo, d\u00e9bilmente tipado y din\u00e1mico.\r\n\r\nSe utiliza principalmente en su forma del lado del cliente (client-side), implementado como parte de un navegador web permitiendo mejoras en la interfaz de usuario y p\u00e1ginas web din\u00e1micas aunque existe una forma de JavaScript del lado del servidor (Server-side JavaScript). Su uso en aplicaciones externas a la web, por ejemplo en documentos PDF, aplicaciones de escritorio (mayoritariamente widgets) es tambi\u00e9n significativo."},{"id":69,"name":"jQuery","slug":"jquery","description":""},{"id":77,"name":"Jshint","slug":"jshint","description":""},{"id":70,"name":"json","slug":"json","description":""},{"id":67,"name":"Juegos","slug":"juegos","description":""},{"id":64,"name":"Lenguaje de programaci\u00f3n","slug":"lenguaje-de-programacion","description":""},{"id":20,"name":"Less","slug":"less","description":"Less es un pre-procesador de CSS, lo que significa que extiende el lenguaje CSS, la adici\u00f3n de caracter\u00edsticas que permiten las variables, mixins, funciones y muchas otras t\u00e9cnicas que le permiten hacer CSS que es m\u00e1s f\u00e1cil de mantener y extensible. \r\n\r\nLess corre dentro del NodeJS, en el navegador y en el interior de Rhino. Tambi\u00e9n hay muchas herramientas de terceros que le permiten compilar sus archivos y ver los cambios."},{"id":37,"name":"Linux","slug":"linux","description":"GNU\/Linux es uno de los t\u00e9rminos empleados para referirse a la combinaci\u00f3n del n\u00facleo o kernel libre similar a Unix denominado Linux con el sistema GNU. Su desarrollo es uno de los ejemplos m\u00e1s prominentes de software libre; todo su c\u00f3digo fuente puede ser utilizado, modificado y redistribuido libremente por cualquiera bajo los t\u00e9rminos de la GPL (Licencia P\u00fablica General de GNU, en ingl\u00e9s: General Public License) y otra serie de licencias libres."},{"id":88,"name":"Metadata","slug":"metadata","description":""},{"id":74,"name":"mint","slug":"mint","description":"Linux Mint"},{"id":36,"name":"Nodejs","slug":"nodejs","description":""},{"id":85,"name":"Open Graph Protocol","slug":"open-graph-protocol","description":""},{"id":60,"name":"Pruebas funcionales","slug":"pruebas-funcionales","description":""},{"id":44,"name":"Python","slug":"python","description":""},{"id":30,"name":"Responsive","slug":"responsive","description":""},{"id":19,"name":"Sass","slug":"sass","description":""},{"id":71,"name":"Sintaxis","slug":"sintaxis","description":""},{"id":86,"name":"Social Graph","slug":"social-graph","description":""},{"id":82,"name":"solucion","slug":"solucion","description":""},{"id":16,"name":"Stylus","slug":"stylus","description":""},{"id":22,"name":"sublime text","slug":"sublime-text","description":""},{"id":14,"name":"Template engine","slug":"template-engine","description":""},{"id":89,"name":"tips","slug":"tips","description":""},{"id":63,"name":"Tutorial","slug":"tutorial-2","description":""},{"id":68,"name":"Ubuntu","slug":"ubuntu","description":""},{"id":78,"name":"UglifyJS","slug":"uglifyjs","description":""},{"id":51,"name":"Web Components","slug":"web-components","description":"El modelo de componentes para la Web (\"Web Components\") consta de cinco piezas:\r\n\r\n1.- Plantillas, que definen trozos de markup, que son inertes pero se pueden activar para su uso posterior. \r\n2.- Decoradores, que se aplican sobre la base de las plantillas de los selectores CSS para realizar cambios visuales y de comportamiento a los documentos. \r\n3.- Elementos personalizados, que permiten a los autores definir sus propios elementos, con los nuevos nombres de las etiquetas y las nuevas interfaces de scripts. \r\n4.- Shadow DOM, que encapsula un sub-\u00e1rbol DOM para la composici\u00f3n m\u00e1s fiable de elementos de la interfaz de usuario. \r\n5.- Las importaciones(imports), que define c\u00f3mo las plantillas, decoradores y elementos personalizados se empaquetan y se cargan como un recurso.\r\n\r\nCada una de estas piezas es \u00fatil individualmente. Cuando se utiliza en combinaci\u00f3n, componentes web permite a los autores de aplicaciones Web definir los widgets con un nivel de riqueza visual y la interactividad que no es posible solo con CSS, y la facilidad de composici\u00f3n."},{"id":55,"name":"yeoman","slug":"yeoman","description":""},{"id":49,"name":"YUIDoc","slug":"yuidoc","description":""}],"posts_tags":[{"tag_id":17,"post_id":70},{"tag_id":4,"post_id":70},{"tag_id":64,"post_id":70},{"tag_id":36,"post_id":70},{"tag_id":16,"post_id":70},{"tag_id":14,"post_id":70},{"tag_id":18,"post_id":232},{"tag_id":40,"post_id":232},{"tag_id":52,"post_id":232},{"tag_id":17,"post_id":232},{"tag_id":4,"post_id":232},{"tag_id":74,"post_id":232},{"tag_id":36,"post_id":232},{"tag_id":16,"post_id":232},{"tag_id":14,"post_id":232},{"tag_id":68,"post_id":232},{"tag_id":35,"post_id":146},{"tag_id":18,"post_id":146},{"tag_id":52,"post_id":146},{"tag_id":65,"post_id":146},{"tag_id":4,"post_id":146},{"tag_id":36,"post_id":146},{"tag_id":40,"post_id":340},{"tag_id":37,"post_id":340},{"tag_id":36,"post_id":340},{"tag_id":22,"post_id":340},{"tag_id":68,"post_id":340},{"tag_id":8,"post_id":407},{"tag_id":7,"post_id":407},{"tag_id":20,"post_id":407},{"tag_id":19,"post_id":407},{"tag_id":16,"post_id":407},{"tag_id":53,"post_id":138},{"tag_id":4,"post_id":138},{"tag_id":54,"post_id":453},{"tag_id":4,"post_id":453},{"tag_id":36,"post_id":453},{"tag_id":55,"post_id":453},{"tag_id":35,"post_id":584},{"tag_id":40,"post_id":584},{"tag_id":41,"post_id":584},{"tag_id":37,"post_id":584},{"tag_id":68,"post_id":584},{"tag_id":56,"post_id":605},{"tag_id":4,"post_id":605},{"tag_id":40,"post_id":615},{"tag_id":58,"post_id":615},{"tag_id":37,"post_id":615},{"tag_id":8,"post_id":678},{"tag_id":7,"post_id":678},{"tag_id":20,"post_id":678},{"tag_id":19,"post_id":678},{"tag_id":16,"post_id":678},{"tag_id":8,"post_id":709},{"tag_id":7,"post_id":709},{"tag_id":20,"post_id":709},{"tag_id":19,"post_id":709},{"tag_id":16,"post_id":709},{"tag_id":61,"post_id":779},{"tag_id":40,"post_id":779},{"tag_id":37,"post_id":779},{"tag_id":35,"post_id":755},{"tag_id":8,"post_id":755},{"tag_id":52,"post_id":755},{"tag_id":7,"post_id":755},{"tag_id":59,"post_id":755},{"tag_id":16,"post_id":755},{"tag_id":8,"post_id":832},{"tag_id":7,"post_id":832},{"tag_id":20,"post_id":832},{"tag_id":30,"post_id":832},{"tag_id":19,"post_id":832},{"tag_id":16,"post_id":832},{"tag_id":35,"post_id":887},{"tag_id":56,"post_id":887},{"tag_id":60,"post_id":887},{"tag_id":44,"post_id":887},{"tag_id":35,"post_id":940},{"tag_id":61,"post_id":940},{"tag_id":37,"post_id":940},{"tag_id":56,"post_id":985},{"tag_id":58,"post_id":985},{"tag_id":22,"post_id":985},{"tag_id":56,"post_id":885},{"tag_id":61,"post_id":885},{"tag_id":40,"post_id":885},{"tag_id":37,"post_id":885},{"tag_id":8,"post_id":1055},{"tag_id":62,"post_id":1055},{"tag_id":52,"post_id":1055},{"tag_id":7,"post_id":1055},{"tag_id":4,"post_id":1055},{"tag_id":37,"post_id":1055},{"tag_id":36,"post_id":1055},{"tag_id":56,"post_id":1070},{"tag_id":7,"post_id":1070},{"tag_id":56,"post_id":1122},{"tag_id":64,"post_id":1122},{"tag_id":37,"post_id":1122},{"tag_id":63,"post_id":1122},{"tag_id":56,"post_id":1162},{"tag_id":40,"post_id":1162},{"tag_id":64,"post_id":1162},{"tag_id":37,"post_id":1162},{"tag_id":63,"post_id":1162},{"tag_id":35,"post_id":889},{"tag_id":56,"post_id":889},{"tag_id":8,"post_id":889},{"tag_id":52,"post_id":889},{"tag_id":7,"post_id":889},{"tag_id":36,"post_id":889},{"tag_id":16,"post_id":889},{"tag_id":56,"post_id":1257},{"tag_id":40,"post_id":1257},{"tag_id":64,"post_id":1257},{"tag_id":37,"post_id":1257},{"tag_id":44,"post_id":1257},{"tag_id":63,"post_id":1257},{"tag_id":35,"post_id":1132},{"tag_id":8,"post_id":1132},{"tag_id":7,"post_id":1132},{"tag_id":16,"post_id":1132},{"tag_id":63,"post_id":1132},{"tag_id":51,"post_id":1132},{"tag_id":56,"post_id":1305},{"tag_id":40,"post_id":1305},{"tag_id":64,"post_id":1305},{"tag_id":37,"post_id":1305},{"tag_id":44,"post_id":1305},{"tag_id":63,"post_id":1305},{"tag_id":8,"post_id":131},{"tag_id":7,"post_id":131},{"tag_id":20,"post_id":131},{"tag_id":19,"post_id":131},{"tag_id":16,"post_id":131},{"tag_id":63,"post_id":131},{"tag_id":56,"post_id":879},{"tag_id":8,"post_id":879},{"tag_id":27,"post_id":879},{"tag_id":7,"post_id":879},{"tag_id":25,"post_id":879},{"tag_id":16,"post_id":879},{"tag_id":48,"post_id":979},{"tag_id":4,"post_id":979},{"tag_id":49,"post_id":979},{"tag_id":56,"post_id":1490},{"tag_id":73,"post_id":1490},{"tag_id":72,"post_id":1490},{"tag_id":4,"post_id":1490},{"tag_id":69,"post_id":1490},{"tag_id":70,"post_id":1490},{"tag_id":71,"post_id":1490},{"tag_id":10,"post_id":989},{"tag_id":67,"post_id":989},{"tag_id":63,"post_id":989},{"tag_id":56,"post_id":1621},{"tag_id":53,"post_id":1621},{"tag_id":4,"post_id":1621},{"tag_id":56,"post_id":1463},{"tag_id":40,"post_id":1463},{"tag_id":64,"post_id":1463},{"tag_id":37,"post_id":1463},{"tag_id":44,"post_id":1463},{"tag_id":63,"post_id":1463},{"tag_id":75,"post_id":1712},{"tag_id":76,"post_id":1710},{"tag_id":8,"post_id":1710},{"tag_id":52,"post_id":1669},{"tag_id":65,"post_id":1669},{"tag_id":4,"post_id":1669},{"tag_id":77,"post_id":1669},{"tag_id":36,"post_id":1669},{"tag_id":78,"post_id":1669},{"tag_id":40,"post_id":1758},{"tag_id":58,"post_id":1758},{"tag_id":37,"post_id":1758},{"tag_id":40,"post_id":1821},{"tag_id":43,"post_id":1821},{"tag_id":80,"post_id":1821},{"tag_id":37,"post_id":1821},{"tag_id":68,"post_id":1821},{"tag_id":35,"post_id":1752},{"tag_id":18,"post_id":1752},{"tag_id":62,"post_id":1752},{"tag_id":52,"post_id":1752},{"tag_id":65,"post_id":1752},{"tag_id":17,"post_id":1752},{"tag_id":4,"post_id":1752},{"tag_id":36,"post_id":1752},{"tag_id":19,"post_id":1752},{"tag_id":16,"post_id":1752},{"tag_id":40,"post_id":1878},{"tag_id":84,"post_id":1878},{"tag_id":83,"post_id":1878},{"tag_id":81,"post_id":1878},{"tag_id":82,"post_id":1878},{"tag_id":61,"post_id":2005},{"tag_id":37,"post_id":2005},{"tag_id":89,"post_id":2005},{"tag_id":68,"post_id":2005},{"tag_id":87,"post_id":1956},{"tag_id":88,"post_id":1956},{"tag_id":85,"post_id":1956},{"tag_id":86,"post_id":1956}],"users":[{"id":2,"slug":"anareyna","bio":"User \/ Front-end \/ Designer","website":"http:\/\/www.anareyna.com","created_at":"Wed, 12 Mar 2014 21:57:24 +0000","created_by":1,"email":"anareymej@gmail.com","name":"anareyna"},{"id":5,"slug":"andru255","bio":false,"website":"http:\/\/blogdeandru.blogspot.com","created_at":"Fri, 14 Mar 2014 22:36:01 +0000","created_by":1,"email":"andru255@gmail.com","name":"andru255"},{"id":8,"slug":"Brayan Borda","bio":false,"website":"","created_at":"Fri, 21 Mar 2014 19:53:57 +0000","created_by":1,"email":"brayan113@gmail.com","name":"brayan-borda"},{"id":10,"slug":"Carlos Huamani","bio":"#javascript #python #css #stylus #jade #less #django #selenium\r\nDesarrollador Front End","website":"http:\/\/about.me\/carloshs92","created_at":"Tue, 29 Apr 2014 17:13:11 +0000","created_by":1,"email":"carlos.hs.92@gmail.com","name":"carlos-huamani"},{"id":3,"slug":"erikfloresq","bio":"FrontEnd Hipster and Geek \r\n@erikfloresq","website":"http:\/\/erikfloresq.com","created_at":"Wed, 12 Mar 2014 21:58:28 +0000","created_by":1,"email":"erikfloresq@gmail.com","name":"erikfloresq"},{"id":1,"slug":"frontend","bio":false,"website":"","created_at":"Wed, 12 Mar 2014 15:50:07 +0000","created_by":1,"email":"ec.frontend@gmail.com","name":"frontend"},{"id":4,"slug":"jansanchez","bio":"Front-End Developer, Web Evangelist and Web Strategist.","website":"https:\/\/plus.google.com\/+JanSanchez27","created_at":"Fri, 14 Mar 2014 21:05:28 +0000","created_by":1,"email":"joejansanchez@gmail.com","name":"jansanchez"},{"id":6,"slug":"jjhoncv","bio":"Front-End Developer\r\n#javascript #php #html5","website":"","created_at":"Fri, 14 Mar 2014 22:44:22 +0000","created_by":1,"email":"jjhoncv@gmail.com","name":"jjhoncv"},{"id":13,"slug":"Jonathan Bastidas","bio":false,"website":"","created_at":"Fri, 11 Jul 2014 23:31:39 +0000","created_by":1,"email":"jonathanpba@gmail.com","name":"jonathan-bastidas"},{"id":15,"slug":"luisnatividad","bio":false,"website":"http:\/\/frontend-labs.com","created_at":"Fri, 03 Oct 2014 16:37:40 +0000","created_by":1,"email":"lfna23@gmail.com","name":"luisnatividad"},{"id":12,"slug":"osobrevilla","bio":"JavaScript Web\/App Developer.","website":"http:\/\/oscar.sobrevilla.me","created_at":"Fri, 27 Jun 2014 20:53:01 +0000","created_by":1,"email":"oscar.sobrevilla@gmail.com","name":"osobrevilla"},{"id":14,"slug":"pauldiaz","bio":"I'm a front end developer and a swift junior developer, I really like to read mystery books and write some poetry, I also play the guitar and the harmonic...","website":"http:\/\/frontend-labs.com","created_at":"Fri, 03 Oct 2014 16:35:21 +0000","created_by":1,"email":"paulrrdiaz@gmail.com","name":"pauldiaz"},{"id":7,"slug":"VictorJSV","bio":false,"website":"","created_at":"Mon, 17 Mar 2014 20:28:45 +0000","created_by":1,"email":"vicbol10@gmail.com","name":"victorjsv"},{"id":9,"slug":"Xio Caro","bio":"Web Graphic Designer iam@xiocaro.com @xiocaro07","website":"https:\/\/plus.google.com\/+xiocaro07","created_at":"Fri, 11 Apr 2014 22:48:03 +0000","created_by":1,"email":"xio.caro.07@gmail.com","name":"xio-caro"}]},"meta":{"exported_on":"Thu, 06 Nov 2014 22:28:35 +0000","version":"000"}}